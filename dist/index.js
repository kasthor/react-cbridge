'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('buffer');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter$9(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule$1(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire$1(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire$1 () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var googleProtobuf = createCommonjsModule$1(function (module, exports) {
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return {i:e,v:f}}return {i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.SIMPLE_FROUND_POLYFILL=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value);};$jscomp.getGlobal=function(a){return "undefined"!=typeof window&&window===a?a:"undefined"!=typeof commonjsGlobal&&null!=commonjsGlobal?commonjsGlobal:a};$jscomp.global=$jscomp.getGlobal(commonjsGlobal);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e];}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b});}};$jscomp.polyfill("Array.prototype.findIndex",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).i}},"es6","es3");
$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""};
$jscomp.polyfill("String.prototype.endsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"endsWith");a+="";void 0===c&&(c=b.length);c=Math.max(0,Math.min(c|0,b.length));for(var e=a.length;0<e&&0<c;)if(b[--c]!=a[--e])return !1;return 0>=e}},"es6","es3");$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).v}},"es6","es3");
$jscomp.polyfill("String.prototype.startsWith",function(a){return a?a:function(a,c){var b=$jscomp.checkStringArgs(this,a,"startsWith");a+="";var e=b.length,f=a.length;c=Math.max(0,Math.min(c|0,b.length));for(var g=0;g<f&&c<e;)if(b[c++]!=a[g++])return !1;return g>=f}},"es6","es3");
$jscomp.polyfill("String.prototype.repeat",function(a){return a?a:function(a){var b=$jscomp.checkStringArgs(this,null,"repeat");if(0>a||1342177279<a)throw new RangeError("Invalid count value");a|=0;for(var d="";a;)if(a&1&&(d+=b),a>>>=1)b+=b;return d}},"es6","es3");var COMPILED=!0,goog=goog||{};goog.global=commonjsGlobal||self;goog.isDef=function(a){return void 0!==a};goog.isString=function(a){return "string"==typeof a};goog.isBoolean=function(a){return "boolean"==typeof a};
goog.isNumber=function(a){return "number"==typeof a};goog.exportPath_=function(a,b,c){a=a.split(".");c=c||goog.global;a[0]in c||"undefined"==typeof c.execScript||c.execScript("var "+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]&&c[d]!==Object.prototype[d]?c[d]:c[d]={};};
goog.define=function(a,b){return b};goog.FEATURESET_YEAR=2012;goog.DEBUG=!0;goog.LOCALE="en";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=!goog.DEBUG;goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;
goog.provide=function(a){if(goog.isInModuleLoader_())throw Error("goog.provide cannot be used within a module.");goog.constructNamespace_(a);};goog.constructNamespace_=function(a,b){goog.exportPath_(a,b);};
goog.getScriptNonce=function(a){if(a&&a!=goog.global)return goog.getScriptNonce_(a.document);null===goog.cspNonce_&&(goog.cspNonce_=goog.getScriptNonce_(goog.global.document));return goog.cspNonce_};goog.NONCE_PATTERN_=/^[\w+/_-]+[=]{0,2}$/;goog.cspNonce_=null;goog.getScriptNonce_=function(a){return (a=a.querySelector&&a.querySelector("script[nonce]"))&&(a=a.nonce||a.getAttribute("nonce"))&&goog.NONCE_PATTERN_.test(a)?a:""};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInGoogModuleLoader_())throw Error("Module "+a+" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");goog.moduleLoaderState_.moduleName=a;};goog.module.get=function(a){return goog.module.getInternal_(a)};
goog.module.getInternal_=function(a){return null};goog.ModuleType={ES6:"es6",GOOG:"goog"};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return goog.isInGoogModuleLoader_()||goog.isInEs6ModuleLoader_()};goog.isInGoogModuleLoader_=function(){return !!goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.GOOG};
goog.isInEs6ModuleLoader_=function(){if(goog.moduleLoaderState_&&goog.moduleLoaderState_.type==goog.ModuleType.ES6)return !0;var a=goog.global.$jscomp;return a?"function"!=typeof a.getCurrentModulePath?!1:!!a.getCurrentModulePath():!1};
goog.module.declareLegacyNamespace=function(){goog.moduleLoaderState_.declareLegacyNamespace=!0;};
goog.declareModuleId=function(a){if(goog.moduleLoaderState_)goog.moduleLoaderState_.moduleName=a;else {var b=goog.global.$jscomp;if(!b||"function"!=typeof b.getCurrentModulePath)throw Error('Module with namespace "'+
a+'" has been loaded incorrectly.');b=b.require(b.getCurrentModulePath());goog.loadedModules_[a]={exports:b,type:goog.ModuleType.ES6,moduleId:a};}};goog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||"",Error("Importing test-only code into non-debug environment"+(a?": "+a:"."));};goog.forwardDeclare=function(a){};
goog.getObjectByName=function(a,b){a=a.split(".");b=b||goog.global;for(var c=0;c<a.length;c++)if(b=b[a[c]],!goog.isDefAndNotNull(b))return null;return b};goog.globalize=function(a,b){b=b||goog.global;for(var c in a)b[c]=a[c];};
goog.addDependency=function(a,b,c,d){};goog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a);};
goog.require=function(a){};goog.requireType=function(a){return {}};goog.basePath="";goog.nullFunction=function(){};
goog.abstractMethod=function(){throw Error("unimplemented abstract method");};goog.addSingletonGetter=function(a){a.instance_=void 0;a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a};};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED;goog.TRANSPILE="detect";
goog.ASSUME_ES_MODULES_TRANSPILED=!1;goog.TRANSPILE_TO_LANGUAGE="";goog.TRANSPILER="transpile.js";goog.hasBadLetScoping=null;goog.useSafari10Workaround=function(){if(null==goog.hasBadLetScoping){try{var a=!eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');}catch(b){a=!1;}goog.hasBadLetScoping=a;}return goog.hasBadLetScoping};goog.workaroundSafari10EvalBug=function(a){return "(function(){"+a+"\n;})();\n"};
goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:"",declareLegacyNamespace:!1,type:goog.ModuleType.GOOG};if(goog.isFunction(a))var c=a.call(void 0,{});else if(goog.isString(a))goog.useSafari10Workaround()&&(a=goog.workaroundSafari10EvalBug(a)),c=goog.loadModuleFromSource_.call(void 0,a);else throw Error("Invalid module definition");var d=goog.moduleLoaderState_.moduleName;if(goog.isString(d)&&d)goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,
c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&"object"==typeof c&&null!=c&&Object.seal(c),goog.loadedModules_[d]={exports:c,type:goog.ModuleType.GOOG,moduleId:goog.moduleLoaderState_.moduleName};else throw Error('Invalid module name "'+d+'"');}finally{goog.moduleLoaderState_=b;}};goog.loadModuleFromSource_=function(a){eval(a);return {}};goog.normalizePath_=function(a){a=a.split("/");for(var b=0;b<a.length;)"."==a[b]?a.splice(b,1):b&&".."==a[b]&&a[b-1]&&".."!=a[b-1]?a.splice(--b,2):b++;return a.join("/")};
goog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);try{var b=new goog.global.XMLHttpRequest;b.open("get",a,!1);b.send();return 0==b.status||200==b.status?b.responseText:null}catch(c){return null}};
goog.transpile_=function(a,b,c){var d=goog.global.$jscomp;d||(goog.global.$jscomp=d={});var e=d.transpile;if(!e){var f=goog.basePath+goog.TRANSPILER,g=goog.loadFileSync_(f);if(g){(function(){(0, eval)(g+"\n//# sourceURL="+f);}).call(goog.global);if(goog.global.$gwtExport&&goog.global.$gwtExport.$jscomp&&!goog.global.$gwtExport.$jscomp.transpile)throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: '+JSON.stringify(goog.global.$gwtExport));goog.global.$jscomp.transpile=
goog.global.$gwtExport.$jscomp.transpile;d=goog.global.$jscomp;e=d.transpile;}}e||(e=d.transpile=function(a,b){goog.logToConsole_(b+" requires transpilation but no transpiler was found.");return a});return e(a,b,c)};
goog.typeOf=function(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return "array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return "object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return "array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return "function"}else return "null";
else if("function"==b&&"undefined"==typeof a.call)return "object";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return "array"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return "array"==b||"object"==b&&"number"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&"function"==typeof a.getFullYear};goog.isFunction=function(a){return "function"==goog.typeOf(a)};
goog.isObject=function(a){var b=typeof a;return "object"==b&&null!=a||"function"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return !!a[goog.UID_PROPERTY_]};goog.removeUid=function(a){null!==a&&"removeAttribute"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_];}catch(b){}};goog.UID_PROPERTY_="closure_uid_"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;
goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if("function"===typeof a.clone)return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.cloneObject(a[c]);return b}return a};goog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};
goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};goog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};
goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c];};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return +new Date};
goog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,"JavaScript");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_){try{goog.global.eval("var _evalTest_ = 1;");}catch(d){}if("undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_;}catch(d){}goog.evalWorksForGlobals_=!0;}else goog.evalWorksForGlobals_=!1;}if(goog.evalWorksForGlobals_)goog.global.eval(a);else {var b=goog.global.document,c=b.createElement("SCRIPT");c.type="text/javascript";c.defer=
!1;c.appendChild(b.createTextNode(a));b.head.appendChild(c);b.head.removeChild(c);}}else throw Error("goog.globalEval not available");};goog.evalWorksForGlobals_=null;
goog.getCssName=function(a,b){if("."==String(a).charAt(0))throw Error('className passed in goog.getCssName must not start with ".". You passed: '+a);var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split("-");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join("-")};d=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?c:d:function(a){return a};a=b?a+"-"+d(b):d(a);return goog.global.CLOSURE_CSS_NAME_MAP_FN?goog.global.CLOSURE_CSS_NAME_MAP_FN(a):a};
goog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b;};goog.getMsg=function(a,b,c){c&&c.html&&(a=a.replace(/</g,"&lt;"));b&&(a=a.replace(/\{\$([^}]+)}/g,function(a,c){return null!=b&&c in b?b[c]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c);};
goog.exportProperty=function(a,b,c){a[b]=c;};goog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var d=Array(arguments.length-2),e=2;e<arguments.length;e++)d[e-2]=arguments[e];return b.prototype[c].apply(a,d)};};
goog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if("undefined"!==typeof d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}if("string"!=typeof b&&"symbol"!=typeof b)throw Error("method names provided to goog.base must be a string or a symbol");
e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];f=!1;for(var g=a.constructor.prototype;g;g=Object.getPrototypeOf(g))if(g[b]===d)f=!0;else if(f)return g[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error("goog.base called from a method of one name to a method of a different name");};goog.scope=function(a){if(goog.isInModuleLoader_())throw Error("goog.scope is not supported within a module.");a.call(goog.global);};
goog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error("cannot instantiate an interface (no constructor defined).");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};
goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;goog.defineClass.createSealingConstructor_=function(a,b){if(!goog.defineClass.SEAL_CLASS_INSTANCES)return a;var c=!goog.defineClass.isUnsealable_(b),d=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===d&&c&&Object.seal instanceof Function&&Object.seal(b);return b};return d};goog.defineClass.isUnsealable_=function(a){return a&&a.prototype&&a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");goog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);};
goog.tagUnsealableClass=function(a){};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable";
goog.TRUSTED_TYPES_POLICY_NAME="";goog.identity_=function(a){return a};goog.createTrustedTypesPolicy=function(a){var b=null;if("undefined"===typeof TrustedTypes||!TrustedTypes.createPolicy)return b;try{b=TrustedTypes.createPolicy(a,{createHTML:goog.identity_,createScript:goog.identity_,createScriptURL:goog.identity_,createURL:goog.identity_});}catch(c){goog.logToConsole_(c.message);}return b};
goog.TRUSTED_TYPES_POLICY_=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#base"):null;goog.object={};goog.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a);};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return !0;return !1};
goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return !1;return !0};goog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};
goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};goog.object.getValueByKeys=function(a,b){var c=goog.isArrayLike(b),d=c?b:arguments;for(c=c?0:1;c<d.length;c++){if(null==a)return;a=a[d[c]];}return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return !0;return !1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};
goog.object.findValue=function(a,b,c){return (b=goog.object.findKey(a,b,c))&&a[b]};goog.object.isEmpty=function(a){for(var b in a)return !1;return !0};goog.object.clear=function(a){for(var b in a)delete a[b];};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key "'+b+'"');goog.object.set(a,b,c);};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};
goog.object.set=function(a,b,c){a[b]=c;};goog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return !1;for(var d in b)if(!(d in a))return !1;return !0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};
goog.object.unsafeClone=function(a){var b=goog.typeOf(a);if("object"==b||"array"==b){if(goog.isFunction(a.clone))return a.clone();b="array"==b?[]:{};for(var c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c]);}};
goog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error("Uneven number of arguments");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};
goog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return !!Object.isFrozen&&Object.isFrozen(a)};
goog.object.getAllPropertyNames=function(a,b,c){if(!a)return [];if(!Object.getOwnPropertyNames||!Object.getPrototypeOf)return goog.object.getKeys(a);for(var d={};a&&(a!==Object.prototype||b)&&(a!==Function.prototype||c);){for(var e=Object.getOwnPropertyNames(a),f=0;f<e.length;f++)d[e[f]]=!0;a=Object.getPrototypeOf(a);}return goog.object.getKeys(d)};goog.object.getSuperClass=function(a){return (a=Object.getPrototypeOf(a.prototype))&&a.constructor};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else {var b=Error().stack;b&&(this.stack=b);}a&&(this.message=String(a));this.reportErrorToServer=!0;};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name="CustomError";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){goog.debug.Error.call(this,goog.asserts.subs_(a,b));this.messagePattern=a;};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name="AssertionError";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_=function(a,b){a=a.split("%s");for(var c="",d=a.length-1,e=0;e<d;e++)c+=a[e]+(e<b.length?b[e]:"%s");return c+a[d]};goog.asserts.doAssertFailure_=function(a,b,c,d){var e="Assertion failed";if(c){e+=": "+c;var f=d;}else a&&(e+=": "+a,f=b);a=new goog.asserts.AssertionError(""+e,f||[]);goog.asserts.errorHandler_(a);};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a);};
goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_("",null,b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertExists=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&null==a&&goog.asserts.doAssertFailure_("Expected to exist: %s.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1)));};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertFinite=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||"number"==typeof a&&isFinite(a)||goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.",[a],b,Array.prototype.slice.call(arguments,2));return a};
goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+" should not be enumerable in Object.prototype.");};goog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||"unknown type name":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?"null":typeof a};var jspb={BinaryConstants:{},ConstBinaryMessage:function(){},BinaryMessage:function(){}};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};
jspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};
jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;
jspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH="\x00\x00\x00\x00\x00\x00\x00\x00";goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=2012<goog.FEATURESET_YEAR;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;
goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return -1};
goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return -1};
goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c);}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a);};goog.array.forEachRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;--d)d in e&&b.call(c,e[d],d,a);};
goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(""):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k);}return e};
goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(""):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};
goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a);});return e};
goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a);});return e};
goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return !0;return !1};
goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return !1;return !0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d;},c);return d};
goog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(""):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return -1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};
goog.array.findIndexRight=function(a,b,c){var d=a.length,e=goog.isString(a)?a.split(""):a;for(--d;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return -1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0;};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b);};
goog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b);};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b);};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d);};goog.array.remove=function(a,b){b=goog.array.indexOf(a,b);var c;(c=0<=b)&&goog.array.removeAt(a,b);return c};
goog.array.removeLast=function(a,b){b=goog.array.lastIndexOf(a,b);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++;});return d};
goog.array.concat=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.join=function(a){return Array.prototype.concat.apply([],arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return []};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g];}else a.push(d);}};
goog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};
goog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?"o"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;d={};for(var e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g);}b.length=e;};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};
goog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1;var l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l);}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare);};goog.array.stableSort=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]={index:d,value:a[d]};var e=b||goog.array.defaultCompare;goog.array.sort(c,function(a,b){return e(a.value,b.value)||a.index-b.index});for(d=0;d<a.length;d++)a[d]=c[d].value;};
goog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))});};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c);};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return !1}return !0};
goog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return !1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return !1;return !0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};
goog.array.inverseDefaultCompare=function(a,b){return -goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};
goog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f);}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e;});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return [];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};
goog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192){var f=goog.array.slice(d,e,e+8192);f=goog.array.flatten.apply(null,f);for(var g=0;g<f.length;g++)b.push(f[g]);}else b.push(d);}return b};
goog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0]);};
goog.array.zip=function(a){if(!arguments.length)return [];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e);}return b};goog.array.shuffle=function(a,b){b=b||Math.random;for(var c=a.length-1;0<c;c--){var d=Math.floor(b()*(c+1)),e=a[c];a[c]=a[d];a[d]=e;}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b]);});return c};
goog.array.concatMap=function(a,b,c){return goog.array.concat.apply([],goog.array.map(a,b,c))};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);255<e&&(b[c++]=e&255,e>>=8);b[c++]=e;}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b="",c=0;c<a.length;c+=8192){var d=goog.array.slice(a,c,c+8192);b+=String.fromCharCode.apply(null,d);}return b};
goog.crypt.byteArrayToHex=function(a,b){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:"0"+a}).join(b||"")};goog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,"Key string length must be multiple of 2");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};
goog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128);}return b};
goog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63);}else if(239<e&&365>e){f=a[c++];var g=a[c++],h=a[c++];e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023));}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63);}return b.join("")};
goog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,"XOR array lengths must match");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.dom.asserts={};goog.dom.asserts.assertIsLocation=function(a){if(goog.asserts.ENABLE_ASSERTS){var b=goog.dom.asserts.getWindow_(a);b&&(!a||!(a instanceof b.Location)&&a instanceof b.Element)&&goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s",goog.dom.asserts.debugStringForType_(a));}return a};
goog.dom.asserts.assertIsElementType_=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=goog.dom.asserts.getWindow_(a);c&&"undefined"!=typeof c[b]&&(a&&(a instanceof c[b]||!(a instanceof c.Location||a instanceof c.Element))||goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); got: %s",b,goog.dom.asserts.debugStringForType_(a)));}return a};goog.dom.asserts.assertIsHTMLAnchorElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAnchorElement")};
goog.dom.asserts.assertIsHTMLButtonElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLButtonElement")};goog.dom.asserts.assertIsHTMLLinkElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLLinkElement")};goog.dom.asserts.assertIsHTMLImageElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLImageElement")};goog.dom.asserts.assertIsHTMLAudioElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLAudioElement")};
goog.dom.asserts.assertIsHTMLVideoElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLVideoElement")};goog.dom.asserts.assertIsHTMLInputElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLInputElement")};goog.dom.asserts.assertIsHTMLTextAreaElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLTextAreaElement")};goog.dom.asserts.assertIsHTMLCanvasElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLCanvasElement")};
goog.dom.asserts.assertIsHTMLEmbedElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLEmbedElement")};goog.dom.asserts.assertIsHTMLFormElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFormElement")};goog.dom.asserts.assertIsHTMLFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLFrameElement")};goog.dom.asserts.assertIsHTMLIFrameElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLIFrameElement")};
goog.dom.asserts.assertIsHTMLObjectElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLObjectElement")};goog.dom.asserts.assertIsHTMLScriptElement=function(a){return goog.dom.asserts.assertIsElementType_(a,"HTMLScriptElement")};
goog.dom.asserts.debugStringForType_=function(a){if(goog.isObject(a))try{return a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a)}catch(b){return "<object could not be stringified>"}else return void 0===a?"undefined":null===a?"null":typeof a};goog.dom.asserts.getWindow_=function(a){try{var b=a&&a.ownerDocument,c=b&&(b.defaultView||b.parentWindow);c=c||goog.global;if(c.Element&&c.Location)return c}catch(d){}return null};goog.functions={};goog.functions.constant=function(a){return function(){return a}};goog.functions.FALSE=function(){return !1};goog.functions.TRUE=function(){return !0};goog.functions.NULL=function(){return null};goog.functions.identity=function(a,b){return a};goog.functions.error=function(a){return function(){throw Error(a);}};goog.functions.fail=function(a){return function(){throw a;}};
goog.functions.lock=function(a,b){b=b||0;return function(){return a.apply(this,Array.prototype.slice.call(arguments,0,b))}};goog.functions.nth=function(a){return function(){return arguments[a]}};goog.functions.partialRight=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=Array.prototype.slice.call(arguments);b.push.apply(b,c);return a.apply(this,b)}};goog.functions.withReturnValue=function(a,b){return goog.functions.sequence(a,goog.functions.constant(b))};
goog.functions.equalTo=function(a,b){return function(c){return b?a==c:a===c}};goog.functions.compose=function(a,b){var c=arguments,d=c.length;return function(){var a;d&&(a=c[d-1].apply(this,arguments));for(var b=d-2;0<=b;b--)a=c[b].call(this,a);return a}};goog.functions.sequence=function(a){var b=arguments,c=b.length;return function(){for(var a,e=0;e<c;e++)a=b[e].apply(this,arguments);return a}};
goog.functions.and=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(!b[a].apply(this,arguments))return !1;return !0}};goog.functions.or=function(a){var b=arguments,c=b.length;return function(){for(var a=0;a<c;a++)if(b[a].apply(this,arguments))return !0;return !1}};goog.functions.not=function(a){return function(){return !a.apply(this,arguments)}};
goog.functions.create=function(a,b){var c=function(){};c.prototype=a.prototype;c=new c;a.apply(c,Array.prototype.slice.call(arguments,1));return c};goog.functions.CACHE_RETURN_VALUE=!0;goog.functions.cacheReturnValue=function(a){var b=!1,c;return function(){if(!goog.functions.CACHE_RETURN_VALUE)return a();b||(c=a(),b=!0);return c}};goog.functions.once=function(a){var b=a;return function(){if(b){var a=b;b=null;a();}}};
goog.functions.debounce=function(a,b,c){var d=0;return function(e){goog.global.clearTimeout(d);var f=arguments;d=goog.global.setTimeout(function(){a.apply(c,f);},b);}};goog.functions.throttle=function(a,b,c){var d=0,e=!1,f=[],g=function(){d=0;e&&(e=!1,h());},h=function(){d=goog.global.setTimeout(g,b);a.apply(c,f);};return function(a){f=arguments;d?e=!0:h();}};goog.functions.rateLimit=function(a,b,c){var d=0,e=function(){d=0;};return function(f){d||(d=goog.global.setTimeout(e,b),a.apply(c,arguments));}};goog.dom.HtmlElement=function(){};goog.dom.TagName=function(a){this.tagName_=a;};goog.dom.TagName.prototype.toString=function(){return this.tagName_};goog.dom.TagName.A=new goog.dom.TagName("A");goog.dom.TagName.ABBR=new goog.dom.TagName("ABBR");goog.dom.TagName.ACRONYM=new goog.dom.TagName("ACRONYM");goog.dom.TagName.ADDRESS=new goog.dom.TagName("ADDRESS");goog.dom.TagName.APPLET=new goog.dom.TagName("APPLET");goog.dom.TagName.AREA=new goog.dom.TagName("AREA");goog.dom.TagName.ARTICLE=new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE=new goog.dom.TagName("ASIDE");goog.dom.TagName.AUDIO=new goog.dom.TagName("AUDIO");goog.dom.TagName.B=new goog.dom.TagName("B");goog.dom.TagName.BASE=new goog.dom.TagName("BASE");goog.dom.TagName.BASEFONT=new goog.dom.TagName("BASEFONT");goog.dom.TagName.BDI=new goog.dom.TagName("BDI");goog.dom.TagName.BDO=new goog.dom.TagName("BDO");goog.dom.TagName.BIG=new goog.dom.TagName("BIG");goog.dom.TagName.BLOCKQUOTE=new goog.dom.TagName("BLOCKQUOTE");goog.dom.TagName.BODY=new goog.dom.TagName("BODY");
goog.dom.TagName.BR=new goog.dom.TagName("BR");goog.dom.TagName.BUTTON=new goog.dom.TagName("BUTTON");goog.dom.TagName.CANVAS=new goog.dom.TagName("CANVAS");goog.dom.TagName.CAPTION=new goog.dom.TagName("CAPTION");goog.dom.TagName.CENTER=new goog.dom.TagName("CENTER");goog.dom.TagName.CITE=new goog.dom.TagName("CITE");goog.dom.TagName.CODE=new goog.dom.TagName("CODE");goog.dom.TagName.COL=new goog.dom.TagName("COL");goog.dom.TagName.COLGROUP=new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND=new goog.dom.TagName("COMMAND");goog.dom.TagName.DATA=new goog.dom.TagName("DATA");goog.dom.TagName.DATALIST=new goog.dom.TagName("DATALIST");goog.dom.TagName.DD=new goog.dom.TagName("DD");goog.dom.TagName.DEL=new goog.dom.TagName("DEL");goog.dom.TagName.DETAILS=new goog.dom.TagName("DETAILS");goog.dom.TagName.DFN=new goog.dom.TagName("DFN");goog.dom.TagName.DIALOG=new goog.dom.TagName("DIALOG");goog.dom.TagName.DIR=new goog.dom.TagName("DIR");goog.dom.TagName.DIV=new goog.dom.TagName("DIV");
goog.dom.TagName.DL=new goog.dom.TagName("DL");goog.dom.TagName.DT=new goog.dom.TagName("DT");goog.dom.TagName.EM=new goog.dom.TagName("EM");goog.dom.TagName.EMBED=new goog.dom.TagName("EMBED");goog.dom.TagName.FIELDSET=new goog.dom.TagName("FIELDSET");goog.dom.TagName.FIGCAPTION=new goog.dom.TagName("FIGCAPTION");goog.dom.TagName.FIGURE=new goog.dom.TagName("FIGURE");goog.dom.TagName.FONT=new goog.dom.TagName("FONT");goog.dom.TagName.FOOTER=new goog.dom.TagName("FOOTER");goog.dom.TagName.FORM=new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME=new goog.dom.TagName("FRAME");goog.dom.TagName.FRAMESET=new goog.dom.TagName("FRAMESET");goog.dom.TagName.H1=new goog.dom.TagName("H1");goog.dom.TagName.H2=new goog.dom.TagName("H2");goog.dom.TagName.H3=new goog.dom.TagName("H3");goog.dom.TagName.H4=new goog.dom.TagName("H4");goog.dom.TagName.H5=new goog.dom.TagName("H5");goog.dom.TagName.H6=new goog.dom.TagName("H6");goog.dom.TagName.HEAD=new goog.dom.TagName("HEAD");goog.dom.TagName.HEADER=new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP=new goog.dom.TagName("HGROUP");goog.dom.TagName.HR=new goog.dom.TagName("HR");goog.dom.TagName.HTML=new goog.dom.TagName("HTML");goog.dom.TagName.I=new goog.dom.TagName("I");goog.dom.TagName.IFRAME=new goog.dom.TagName("IFRAME");goog.dom.TagName.IMG=new goog.dom.TagName("IMG");goog.dom.TagName.INPUT=new goog.dom.TagName("INPUT");goog.dom.TagName.INS=new goog.dom.TagName("INS");goog.dom.TagName.ISINDEX=new goog.dom.TagName("ISINDEX");goog.dom.TagName.KBD=new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN=new goog.dom.TagName("KEYGEN");goog.dom.TagName.LABEL=new goog.dom.TagName("LABEL");goog.dom.TagName.LEGEND=new goog.dom.TagName("LEGEND");goog.dom.TagName.LI=new goog.dom.TagName("LI");goog.dom.TagName.LINK=new goog.dom.TagName("LINK");goog.dom.TagName.MAIN=new goog.dom.TagName("MAIN");goog.dom.TagName.MAP=new goog.dom.TagName("MAP");goog.dom.TagName.MARK=new goog.dom.TagName("MARK");goog.dom.TagName.MATH=new goog.dom.TagName("MATH");goog.dom.TagName.MENU=new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM=new goog.dom.TagName("MENUITEM");goog.dom.TagName.META=new goog.dom.TagName("META");goog.dom.TagName.METER=new goog.dom.TagName("METER");goog.dom.TagName.NAV=new goog.dom.TagName("NAV");goog.dom.TagName.NOFRAMES=new goog.dom.TagName("NOFRAMES");goog.dom.TagName.NOSCRIPT=new goog.dom.TagName("NOSCRIPT");goog.dom.TagName.OBJECT=new goog.dom.TagName("OBJECT");goog.dom.TagName.OL=new goog.dom.TagName("OL");goog.dom.TagName.OPTGROUP=new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION=new goog.dom.TagName("OPTION");goog.dom.TagName.OUTPUT=new goog.dom.TagName("OUTPUT");goog.dom.TagName.P=new goog.dom.TagName("P");goog.dom.TagName.PARAM=new goog.dom.TagName("PARAM");goog.dom.TagName.PICTURE=new goog.dom.TagName("PICTURE");goog.dom.TagName.PRE=new goog.dom.TagName("PRE");goog.dom.TagName.PROGRESS=new goog.dom.TagName("PROGRESS");goog.dom.TagName.Q=new goog.dom.TagName("Q");goog.dom.TagName.RP=new goog.dom.TagName("RP");goog.dom.TagName.RT=new goog.dom.TagName("RT");
goog.dom.TagName.RTC=new goog.dom.TagName("RTC");goog.dom.TagName.RUBY=new goog.dom.TagName("RUBY");goog.dom.TagName.S=new goog.dom.TagName("S");goog.dom.TagName.SAMP=new goog.dom.TagName("SAMP");goog.dom.TagName.SCRIPT=new goog.dom.TagName("SCRIPT");goog.dom.TagName.SECTION=new goog.dom.TagName("SECTION");goog.dom.TagName.SELECT=new goog.dom.TagName("SELECT");goog.dom.TagName.SMALL=new goog.dom.TagName("SMALL");goog.dom.TagName.SOURCE=new goog.dom.TagName("SOURCE");goog.dom.TagName.SPAN=new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE=new goog.dom.TagName("STRIKE");goog.dom.TagName.STRONG=new goog.dom.TagName("STRONG");goog.dom.TagName.STYLE=new goog.dom.TagName("STYLE");goog.dom.TagName.SUB=new goog.dom.TagName("SUB");goog.dom.TagName.SUMMARY=new goog.dom.TagName("SUMMARY");goog.dom.TagName.SUP=new goog.dom.TagName("SUP");goog.dom.TagName.SVG=new goog.dom.TagName("SVG");goog.dom.TagName.TABLE=new goog.dom.TagName("TABLE");goog.dom.TagName.TBODY=new goog.dom.TagName("TBODY");goog.dom.TagName.TD=new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE=new goog.dom.TagName("TEMPLATE");goog.dom.TagName.TEXTAREA=new goog.dom.TagName("TEXTAREA");goog.dom.TagName.TFOOT=new goog.dom.TagName("TFOOT");goog.dom.TagName.TH=new goog.dom.TagName("TH");goog.dom.TagName.THEAD=new goog.dom.TagName("THEAD");goog.dom.TagName.TIME=new goog.dom.TagName("TIME");goog.dom.TagName.TITLE=new goog.dom.TagName("TITLE");goog.dom.TagName.TR=new goog.dom.TagName("TR");goog.dom.TagName.TRACK=new goog.dom.TagName("TRACK");goog.dom.TagName.TT=new goog.dom.TagName("TT");
goog.dom.TagName.U=new goog.dom.TagName("U");goog.dom.TagName.UL=new goog.dom.TagName("UL");goog.dom.TagName.VAR=new goog.dom.TagName("VAR");goog.dom.TagName.VIDEO=new goog.dom.TagName("VIDEO");goog.dom.TagName.WBR=new goog.dom.TagName("WBR");goog.dom.tags={};goog.dom.tags.VOID_TAGS_={area:!0,base:!0,br:!0,col:!0,command:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0};goog.dom.tags.isVoidTag=function(a){return !0===goog.dom.tags.VOID_TAGS_[a]};goog.html={};goog.html.trustedtypes={};goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY=goog.TRUSTED_TYPES_POLICY_NAME?goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME+"#html"):null;goog.string={};goog.string.TypedString=function(){};goog.string.Const=function(a,b){this.stringConstValueWithSecurityContract__googStringSecurityPrivate_=a===goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_&&b||"";this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_=goog.string.Const.TYPE_MARKER_;};goog.string.Const.prototype.implementsGoogStringTypedString=!0;goog.string.Const.prototype.getTypedStringValue=function(){return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_};
goog.string.Const.prototype.toString=function(){return "Const{"+this.stringConstValueWithSecurityContract__googStringSecurityPrivate_+"}"};goog.string.Const.unwrap=function(a){if(a instanceof goog.string.Const&&a.constructor===goog.string.Const&&a.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_===goog.string.Const.TYPE_MARKER_)return a.stringConstValueWithSecurityContract__googStringSecurityPrivate_;goog.asserts.fail("expected object of type Const, got '"+a+"'");return "type_error:Const"};
goog.string.Const.from=function(a){return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_,a)};goog.string.Const.TYPE_MARKER_={};goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_={};goog.string.Const.EMPTY=goog.string.Const.from("");goog.html.SafeScript=function(){this.privateDoNotAccessOrElseSafeScriptWrappedValue_="";this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;};goog.html.SafeScript.prototype.implementsGoogStringTypedString=!0;goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeScript.fromConstant=function(a){a=goog.string.Const.unwrap(a);return 0===a.length?goog.html.SafeScript.EMPTY:goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeScript.fromConstantAndArgs=function(a,b){for(var c=[],d=1;d<arguments.length;d++)c.push(goog.html.SafeScript.stringify_(arguments[d]));return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("("+goog.string.Const.unwrap(a)+")("+c.join(", ")+");")};goog.html.SafeScript.fromJson=function(a){return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(a))};goog.html.SafeScript.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeScript.prototype.toString=function(){return "SafeScript{"+this.privateDoNotAccessOrElseSafeScriptWrappedValue_+"}"});goog.html.SafeScript.unwrap=function(a){return goog.html.SafeScript.unwrapTrustedScript(a).toString()};
goog.html.SafeScript.unwrapTrustedScript=function(a){if(a instanceof goog.html.SafeScript&&a.constructor===goog.html.SafeScript&&a.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeScriptWrappedValue_;goog.asserts.fail("expected object of type SafeScript, got '"+a+"' of type "+goog.typeOf(a));return "type_error:SafeScript"};
goog.html.SafeScript.stringify_=function(a){return JSON.stringify(a).replace(/</g,"\\x3c")};goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse=function(a){return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeScriptWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(a):a;return this};goog.html.SafeScript.EMPTY=goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");goog.fs={};goog.fs.url={};goog.fs.url.createObjectUrl=function(a){return goog.fs.url.getUrlObject_().createObjectURL(a)};goog.fs.url.revokeObjectUrl=function(a){goog.fs.url.getUrlObject_().revokeObjectURL(a);};goog.fs.url.getUrlObject_=function(){var a=goog.fs.url.findUrlObject_();if(null!=a)return a;throw Error("This browser doesn't seem to support blob URLs");};
goog.fs.url.findUrlObject_=function(){return goog.isDef(goog.global.URL)&&goog.isDef(goog.global.URL.createObjectURL)?goog.global.URL:goog.isDef(goog.global.webkitURL)&&goog.isDef(goog.global.webkitURL.createObjectURL)?goog.global.webkitURL:goog.isDef(goog.global.createObjectURL)?goog.global:null};goog.fs.url.browserSupportsObjectUrls=function(){return null!=goog.fs.url.findUrlObject_()};goog.i18n={};goog.i18n.bidi={};goog.i18n.bidi.FORCE_RTL=!1;
goog.i18n.bidi.IS_RTL=goog.i18n.bidi.FORCE_RTL||("ar"==goog.LOCALE.substring(0,2).toLowerCase()||"fa"==goog.LOCALE.substring(0,2).toLowerCase()||"he"==goog.LOCALE.substring(0,2).toLowerCase()||"iw"==goog.LOCALE.substring(0,2).toLowerCase()||"ps"==goog.LOCALE.substring(0,2).toLowerCase()||"sd"==goog.LOCALE.substring(0,2).toLowerCase()||"ug"==goog.LOCALE.substring(0,2).toLowerCase()||"ur"==goog.LOCALE.substring(0,2).toLowerCase()||"yi"==goog.LOCALE.substring(0,2).toLowerCase())&&(2==goog.LOCALE.length||
"-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))||3<=goog.LOCALE.length&&"ckb"==goog.LOCALE.substring(0,3).toLowerCase()&&(3==goog.LOCALE.length||"-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))||7<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(2,3)||"_"==goog.LOCALE.substring(2,3))&&("adlm"==goog.LOCALE.substring(3,7).toLowerCase()||"arab"==goog.LOCALE.substring(3,7).toLowerCase()||"hebr"==goog.LOCALE.substring(3,7).toLowerCase()||"nkoo"==goog.LOCALE.substring(3,
7).toLowerCase()||"rohg"==goog.LOCALE.substring(3,7).toLowerCase()||"thaa"==goog.LOCALE.substring(3,7).toLowerCase())||8<=goog.LOCALE.length&&("-"==goog.LOCALE.substring(3,4)||"_"==goog.LOCALE.substring(3,4))&&("adlm"==goog.LOCALE.substring(4,8).toLowerCase()||"arab"==goog.LOCALE.substring(4,8).toLowerCase()||"hebr"==goog.LOCALE.substring(4,8).toLowerCase()||"nkoo"==goog.LOCALE.substring(4,8).toLowerCase()||"rohg"==goog.LOCALE.substring(4,8).toLowerCase()||"thaa"==goog.LOCALE.substring(4,8).toLowerCase());
goog.i18n.bidi.Format={LRE:"\u202a",RLE:"\u202b",PDF:"\u202c",LRM:"\u200e",RLM:"\u200f"};goog.i18n.bidi.Dir={LTR:1,RTL:-1,NEUTRAL:0};goog.i18n.bidi.RIGHT="right";goog.i18n.bidi.LEFT="left";goog.i18n.bidi.I18N_RIGHT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.LEFT:goog.i18n.bidi.RIGHT;goog.i18n.bidi.I18N_LEFT=goog.i18n.bidi.IS_RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir=function(a,b){return "number"==typeof a?0<a?goog.i18n.bidi.Dir.LTR:0>a?goog.i18n.bidi.Dir.RTL:b?null:goog.i18n.bidi.Dir.NEUTRAL:null==a?null:a?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};goog.i18n.bidi.ltrChars_="A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0900-\u1fff\u200e\u2c00-\ud801\ud804-\ud839\ud83c-\udbff\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";goog.i18n.bidi.rtlChars_="\u0591-\u06ef\u06fa-\u08ff\u200f\ud802-\ud803\ud83a-\ud83b\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_=/<[^>]*>|&[^;]+;/g;goog.i18n.bidi.stripHtmlIfNeeded_=function(a,b){return b?a.replace(goog.i18n.bidi.htmlSkipReg_,""):a};goog.i18n.bidi.rtlCharReg_=new RegExp("["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.ltrCharReg_=new RegExp("["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.hasAnyRtl=function(a,b){return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.hasRtlChar=goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr=function(a,b){return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.ltrRe_=new RegExp("^["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlRe_=new RegExp("^["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.isRtlChar=function(a){return goog.i18n.bidi.rtlRe_.test(a)};goog.i18n.bidi.isLtrChar=function(a){return goog.i18n.bidi.ltrRe_.test(a)};goog.i18n.bidi.isNeutralChar=function(a){return !goog.i18n.bidi.isLtrChar(a)&&!goog.i18n.bidi.isRtlChar(a)};
goog.i18n.bidi.ltrDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.rtlChars_+"]*["+goog.i18n.bidi.ltrChars_+"]");goog.i18n.bidi.rtlDirCheckRe_=new RegExp("^[^"+goog.i18n.bidi.ltrChars_+"]*["+goog.i18n.bidi.rtlChars_+"]");goog.i18n.bidi.startsWithRtl=function(a,b){return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlText=goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr=function(a,b){return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrText=goog.i18n.bidi.startsWithLtr;goog.i18n.bidi.isRequiredLtrRe_=/^http:\/\/.*/;goog.i18n.bidi.isNeutralText=function(a,b){a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b);return goog.i18n.bidi.isRequiredLtrRe_.test(a)||!goog.i18n.bidi.hasAnyLtr(a)&&!goog.i18n.bidi.hasAnyRtl(a)};
goog.i18n.bidi.ltrExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.ltrChars_+"][^"+goog.i18n.bidi.rtlChars_+"]*$");goog.i18n.bidi.rtlExitDirCheckRe_=new RegExp("["+goog.i18n.bidi.rtlChars_+"][^"+goog.i18n.bidi.ltrChars_+"]*$");goog.i18n.bidi.endsWithLtr=function(a,b){return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isLtrExitText=goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl=function(a,b){return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(a,b))};goog.i18n.bidi.isRtlExitText=goog.i18n.bidi.endsWithRtl;goog.i18n.bidi.rtlLocalesRe_=/^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;goog.i18n.bidi.isRtlLanguage=function(a){return goog.i18n.bidi.rtlLocalesRe_.test(a)};goog.i18n.bidi.bracketGuardTextRe_=/(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText=function(a,b){b=(void 0===b?goog.i18n.bidi.hasAnyRtl(a):b)?goog.i18n.bidi.Format.RLM:goog.i18n.bidi.Format.LRM;return a.replace(goog.i18n.bidi.bracketGuardTextRe_,b+"$&"+b)};goog.i18n.bidi.enforceRtlInHtml=function(a){return "<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=rtl"):"\n<span dir=rtl>"+a+"</span>"};goog.i18n.bidi.enforceRtlInText=function(a){return goog.i18n.bidi.Format.RLE+a+goog.i18n.bidi.Format.PDF};
goog.i18n.bidi.enforceLtrInHtml=function(a){return "<"==a.charAt(0)?a.replace(/<\w+/,"$& dir=ltr"):"\n<span dir=ltr>"+a+"</span>"};goog.i18n.bidi.enforceLtrInText=function(a){return goog.i18n.bidi.Format.LRE+a+goog.i18n.bidi.Format.PDF};goog.i18n.bidi.dimensionsRe_=/:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;goog.i18n.bidi.leftRe_=/left/gi;goog.i18n.bidi.rightRe_=/right/gi;goog.i18n.bidi.tempRe_=/%%%%/g;
goog.i18n.bidi.mirrorCSS=function(a){return a.replace(goog.i18n.bidi.dimensionsRe_,":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_,"%%%%").replace(goog.i18n.bidi.rightRe_,goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_,goog.i18n.bidi.RIGHT)};goog.i18n.bidi.doubleQuoteSubstituteRe_=/([\u0591-\u05f2])"/g;goog.i18n.bidi.singleQuoteSubstituteRe_=/([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote=function(a){return a.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_,"$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_,"$1\u05f3")};goog.i18n.bidi.wordSeparatorRe_=/\s+/;goog.i18n.bidi.hasNumeralsRe_=/[\d\u06f0-\u06f9]/;goog.i18n.bidi.rtlDetectionThreshold_=.4;
goog.i18n.bidi.estimateDirection=function(a,b){var c=0,d=0,e=!1;a=goog.i18n.bidi.stripHtmlIfNeeded_(a,b).split(goog.i18n.bidi.wordSeparatorRe_);for(b=0;b<a.length;b++){var f=a[b];goog.i18n.bidi.startsWithRtl(f)?(c++,d++):goog.i18n.bidi.isRequiredLtrRe_.test(f)?e=!0:goog.i18n.bidi.hasAnyLtr(f)?d++:goog.i18n.bidi.hasNumeralsRe_.test(f)&&(e=!0);}return 0==d?e?goog.i18n.bidi.Dir.LTR:goog.i18n.bidi.Dir.NEUTRAL:c/d>goog.i18n.bidi.rtlDetectionThreshold_?goog.i18n.bidi.Dir.RTL:goog.i18n.bidi.Dir.LTR};
goog.i18n.bidi.detectRtlDirectionality=function(a,b){return goog.i18n.bidi.estimateDirection(a,b)==goog.i18n.bidi.Dir.RTL};goog.i18n.bidi.setElementDirAndAlign=function(a,b){a&&(b=goog.i18n.bidi.toDir(b))&&(a.style.textAlign=b==goog.i18n.bidi.Dir.RTL?goog.i18n.bidi.RIGHT:goog.i18n.bidi.LEFT,a.dir=b==goog.i18n.bidi.Dir.RTL?"rtl":"ltr");};
goog.i18n.bidi.setElementDirByTextDirectionality=function(a,b){switch(goog.i18n.bidi.estimateDirection(b)){case goog.i18n.bidi.Dir.LTR:a.dir="ltr";break;case goog.i18n.bidi.Dir.RTL:a.dir="rtl";break;default:a.removeAttribute("dir");}};goog.i18n.bidi.DirectionalString=function(){};goog.html.TrustedResourceUrl=function(){this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_="";this.trustedURL_=null;this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;};goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString=!0;goog.html.TrustedResourceUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString()};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.TrustedResourceUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};
goog.html.TrustedResourceUrl.prototype.cloneWithParams=function(a,b){var c=goog.html.TrustedResourceUrl.unwrap(this);c=goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(c);var d=c[3]||"";return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(c[1]+goog.html.TrustedResourceUrl.stringifyParams_("?",c[2]||"",a)+goog.html.TrustedResourceUrl.stringifyParams_("#",d,b))};
goog.DEBUG&&(goog.html.TrustedResourceUrl.prototype.toString=function(){return "TrustedResourceUrl{"+this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_+"}"});goog.html.TrustedResourceUrl.unwrap=function(a){return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(a).toString()};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL=function(a){if(a instanceof goog.html.TrustedResourceUrl&&a.constructor===goog.html.TrustedResourceUrl&&a.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;goog.asserts.fail("expected object of type TrustedResourceUrl, got '"+a+"' of type "+goog.typeOf(a));return "type_error:TrustedResourceUrl"};
goog.html.TrustedResourceUrl.unwrapTrustedURL=function(a){return a.trustedURL_?a.trustedURL_:goog.html.TrustedResourceUrl.unwrap(a)};
goog.html.TrustedResourceUrl.format=function(a,b){var c=goog.string.Const.unwrap(a);if(!goog.html.TrustedResourceUrl.BASE_URL_.test(c))throw Error("Invalid TrustedResourceUrl format: "+c);a=c.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_,function(a,e){if(!Object.prototype.hasOwnProperty.call(b,e))throw Error('Found marker, "'+e+'", in format string, "'+c+'", but no valid label mapping found in args: '+JSON.stringify(b));a=b[e];return a instanceof goog.string.Const?goog.string.Const.unwrap(a):
encodeURIComponent(String(a))});return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.TrustedResourceUrl.FORMAT_MARKER_=/%{(\w+)}/g;goog.html.TrustedResourceUrl.BASE_URL_=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i;goog.html.TrustedResourceUrl.URL_PARAM_PARSER_=/^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams=function(a,b,c,d){return goog.html.TrustedResourceUrl.format(a,b).cloneWithParams(c,d)};goog.html.TrustedResourceUrl.fromConstant=function(a){return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};goog.html.TrustedResourceUrl.fromConstants=function(a){for(var b="",c=0;c<a.length;c++)b+=goog.string.Const.unwrap(a[c]);return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.TrustedResourceUrl;b.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(a):a;goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY&&(b.trustedURL_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a));return b};
goog.html.TrustedResourceUrl.stringifyParams_=function(a,b,c){if(null==c)return b;if(goog.isString(c))return c?a+encodeURIComponent(c):"";for(var d in c){var e=c[d];e=goog.isArray(e)?e:[e];for(var f=0;f<e.length;f++){var g=e[f];null!=g&&(b||(b=a),b+=(b.length>a.length?"&":"")+encodeURIComponent(d)+"="+encodeURIComponent(String(g)));}}return b};goog.string.internal={};goog.string.internal.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.internal.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.internal.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(0,b.length))};goog.string.internal.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.internal.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};
goog.string.internal.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.internal.isEmptyOrWhitespace=function(a){return /^[\s\xa0]*$/.test(a)};goog.string.internal.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};goog.string.internal.caseInsensitiveCompare=function(a,b){a=String(a).toLowerCase();b=String(b).toLowerCase();return a<b?-1:a==b?0:1};
goog.string.internal.newLineToBr=function(a,b){return a.replace(/(\r\n|\r|\n)/g,b?"<br />":"<br>")};
goog.string.internal.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.internal.AMP_RE_,"&amp;").replace(goog.string.internal.LT_RE_,"&lt;").replace(goog.string.internal.GT_RE_,"&gt;").replace(goog.string.internal.QUOT_RE_,"&quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.internal.NULL_RE_,"&#0;");else {if(!goog.string.internal.ALL_RE_.test(a))return a;-1!=a.indexOf("&")&&(a=a.replace(goog.string.internal.AMP_RE_,"&amp;"));-1!=a.indexOf("<")&&(a=a.replace(goog.string.internal.LT_RE_,
"&lt;"));-1!=a.indexOf(">")&&(a=a.replace(goog.string.internal.GT_RE_,"&gt;"));-1!=a.indexOf('"')&&(a=a.replace(goog.string.internal.QUOT_RE_,"&quot;"));-1!=a.indexOf("'")&&(a=a.replace(goog.string.internal.SINGLE_QUOTE_RE_,"&#39;"));-1!=a.indexOf("\x00")&&(a=a.replace(goog.string.internal.NULL_RE_,"&#0;"));}return a};goog.string.internal.AMP_RE_=/&/g;goog.string.internal.LT_RE_=/</g;goog.string.internal.GT_RE_=/>/g;goog.string.internal.QUOT_RE_=/"/g;goog.string.internal.SINGLE_QUOTE_RE_=/'/g;
goog.string.internal.NULL_RE_=/\x00/g;goog.string.internal.ALL_RE_=/[\x00&<>"']/;goog.string.internal.whitespaceEscape=function(a,b){return goog.string.internal.newLineToBr(a.replace(/  /g," &#160;"),b)};goog.string.internal.contains=function(a,b){return -1!=a.indexOf(b)};goog.string.internal.caseInsensitiveContains=function(a,b){return goog.string.internal.contains(a.toLowerCase(),b.toLowerCase())};
goog.string.internal.compareVersions=function(a,b){var c=0;a=goog.string.internal.trim(String(a)).split(".");b=goog.string.internal.trim(String(b)).split(".");for(var d=Math.max(a.length,b.length),e=0;0==c&&e<d;e++){var f=a[e]||"",g=b[e]||"";do{f=/(\d*)(\D*)(.*)/.exec(f)||["","","",""];g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];if(0==f[0].length&&0==g[0].length)break;c=0==f[1].length?0:parseInt(f[1],10);var h=0==g[1].length?0:parseInt(g[1],10);c=goog.string.internal.compareElements_(c,h)||goog.string.internal.compareElements_(0==
f[2].length,0==g[2].length)||goog.string.internal.compareElements_(f[2],g[2]);f=f[3];g=g[3];}while(0==c)}return c};goog.string.internal.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.html.SafeUrl=function(){this.privateDoNotAccessOrElseSafeUrlWrappedValue_="";this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;};goog.html.SafeUrl.INNOCUOUS_STRING="about:invalid#zClosurez";goog.html.SafeUrl.prototype.implementsGoogStringTypedString=!0;goog.html.SafeUrl.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString()};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeUrl.prototype.getDirection=function(){return goog.i18n.bidi.Dir.LTR};goog.DEBUG&&(goog.html.SafeUrl.prototype.toString=function(){return "SafeUrl{"+this.privateDoNotAccessOrElseSafeUrlWrappedValue_+"}"});goog.html.SafeUrl.unwrap=function(a){return goog.html.SafeUrl.unwrapTrustedURL(a).toString()};
goog.html.SafeUrl.unwrapTrustedURL=function(a){if(a instanceof goog.html.SafeUrl&&a.constructor===goog.html.SafeUrl&&a.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeUrlWrappedValue_;goog.asserts.fail("expected object of type SafeUrl, got '"+a+"' of type "+goog.typeOf(a));return "type_error:SafeUrl"};goog.html.SafeUrl.fromConstant=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(a))};
goog.html.SAFE_MIME_TYPE_PATTERN_=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime))(?:;\w+=(?:\w+|"[\w;=]+"))*$/i;goog.html.SafeUrl.isSafeMimeType=function(a){return goog.html.SAFE_MIME_TYPE_PATTERN_.test(a)};goog.html.SafeUrl.fromBlob=function(a){a=goog.html.SAFE_MIME_TYPE_PATTERN_.test(a.type)?goog.fs.url.createObjectUrl(a):goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.DATA_URL_PATTERN_=/^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;goog.html.SafeUrl.fromDataUrl=function(a){a=a.replace(/(%0A|%0D)/g,"");var b=a.match(goog.html.DATA_URL_PATTERN_);b=b&&goog.html.SAFE_MIME_TYPE_PATTERN_.test(b[1]);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b?a:goog.html.SafeUrl.INNOCUOUS_STRING)};goog.html.SafeUrl.fromTelUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"tel:")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SIP_URL_PATTERN_=/^sip[s]?:[+a-z0-9_.!$%&'*\/=^`{|}~-]+@([a-z0-9-]+\.)+[a-z0-9]{2,63}$/i;goog.html.SafeUrl.fromSipUrl=function(a){goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(a))||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromFacebookMessengerUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"fb-messenger://share")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.fromWhatsAppUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"whatsapp://send")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeUrl.fromSmsUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"sms:")&&goog.html.SafeUrl.isSmsUrlBodyValid_(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.isSmsUrlBodyValid_=function(a){var b=a.indexOf("#");0<b&&(a=a.substring(0,b));b=a.match(/[?&]body=/gi);if(!b)return !0;if(1<b.length)return !1;a=a.match(/[?&]body=([^&]*)/)[1];if(!a)return !0;try{decodeURIComponent(a);}catch(c){return !1}return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(a)};goog.html.SafeUrl.fromSshUrl=function(a){goog.string.internal.caseInsensitiveStartsWith(a,"ssh://")||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeChromeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeFirefoxExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//,a,b)};goog.html.SafeUrl.sanitizeEdgeExtensionUrl=function(a,b){return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//,a,b)};
goog.html.SafeUrl.sanitizeExtensionUrl_=function(a,b,c){(a=a.exec(b))?(a=a[1],-1==(c instanceof goog.string.Const?[goog.string.Const.unwrap(c)]:c.map(function(a){return goog.string.Const.unwrap(a)})).indexOf(a)&&(b=goog.html.SafeUrl.INNOCUOUS_STRING)):b=goog.html.SafeUrl.INNOCUOUS_STRING;return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};goog.html.SafeUrl.fromTrustedResourceUrl=function(a){return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(a))};
goog.html.SAFE_URL_PATTERN_=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;goog.html.SafeUrl.SAFE_URL_PATTERN=goog.html.SAFE_URL_PATTERN_;goog.html.SafeUrl.sanitize=function(a){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);goog.html.SAFE_URL_PATTERN_.test(a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.sanitizeAssertUnchanged=function(a,b){if(a instanceof goog.html.SafeUrl)return a;a="object"==typeof a&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);if(b&&/^data:/i.test(a)&&(b=goog.html.SafeUrl.fromDataUrl(a),b.getTypedStringValue()==a))return b;goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(a),"%s does not match the safe URL pattern",a)||(a=goog.html.SafeUrl.INNOCUOUS_STRING);return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse=function(a){var b=new goog.html.SafeUrl;b.privateDoNotAccessOrElseSafeUrlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createURL(a):a;return b};goog.html.SafeUrl.ABOUT_BLANK=goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");goog.html.SafeStyle=function(){this.privateDoNotAccessOrElseSafeStyleWrappedValue_="";this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;};goog.html.SafeStyle.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyle.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyle.EMPTY;goog.asserts.assert(goog.string.internal.endsWith(a,";"),"Last character of style string is not ';': "+a);goog.asserts.assert(goog.string.internal.contains(a,":"),"Style string must contain at least one ':', to specify a \"name: value\" pair: "+a);return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(a)};
goog.html.SafeStyle.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleWrappedValue_};goog.DEBUG&&(goog.html.SafeStyle.prototype.toString=function(){return "SafeStyle{"+this.privateDoNotAccessOrElseSafeStyleWrappedValue_+"}"});
goog.html.SafeStyle.unwrap=function(a){if(a instanceof goog.html.SafeStyle&&a.constructor===goog.html.SafeStyle&&a.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleWrappedValue_;goog.asserts.fail("expected object of type SafeStyle, got '"+a+"' of type "+goog.typeOf(a));return "type_error:SafeStyle"};goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse=function(a){return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(a)};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleWrappedValue_=a;return this};goog.html.SafeStyle.EMPTY=goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");goog.html.SafeStyle.INNOCUOUS_STRING="zClosurez";
goog.html.SafeStyle.create=function(a){var b="",c;for(c in a){if(!/^[-_a-zA-Z0-9]+$/.test(c))throw Error("Name allows only [-_a-zA-Z0-9], got: "+c);var d=a[c];null!=d&&(d=goog.isArray(d)?goog.array.map(d,goog.html.SafeStyle.sanitizePropertyValue_).join(" "):goog.html.SafeStyle.sanitizePropertyValue_(d),b+=c+":"+d+";");}return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};
goog.html.SafeStyle.sanitizePropertyValue_=function(a){if(a instanceof goog.html.SafeUrl)return 'url("'+goog.html.SafeUrl.unwrap(a).replace(/</g,"%3c").replace(/[\\"]/g,"\\$&")+'")';a=a instanceof goog.string.Const?goog.string.Const.unwrap(a):goog.html.SafeStyle.sanitizePropertyValueString_(String(a));if(/[{;}]/.test(a))throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.",[a]);return a};
goog.html.SafeStyle.sanitizePropertyValueString_=function(a){var b=a.replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_,"$1").replace(goog.html.SafeStyle.URL_RE_,"url");if(goog.html.SafeStyle.VALUE_RE_.test(b)){if(goog.html.SafeStyle.COMMENT_RE_.test(a))return goog.asserts.fail("String value disallows comments, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedQuotes_(a))return goog.asserts.fail("String value requires balanced quotes, got: "+
a),goog.html.SafeStyle.INNOCUOUS_STRING;if(!goog.html.SafeStyle.hasBalancedSquareBrackets_(a))return goog.asserts.fail("String value requires balanced square brackets and one identifier per pair of brackets, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING}else return goog.asserts.fail("String value allows only "+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+" and simple functions, got: "+a),goog.html.SafeStyle.INNOCUOUS_STRING;return goog.html.SafeStyle.sanitizeUrl_(a)};
goog.html.SafeStyle.hasBalancedQuotes_=function(a){for(var b=!0,c=!0,d=0;d<a.length;d++){var e=a.charAt(d);"'"==e&&c?b=!b:'"'==e&&b&&(c=!c);}return b&&c};goog.html.SafeStyle.hasBalancedSquareBrackets_=function(a){for(var b=!0,c=/^[-_a-zA-Z0-9]$/,d=0;d<a.length;d++){var e=a.charAt(d);if("]"==e){if(b)return !1;b=!0;}else if("["==e){if(!b)return !1;b=!1;}else if(!b&&!c.test(e))return !1}return b};goog.html.SafeStyle.VALUE_ALLOWED_CHARS_="[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_=new RegExp("^"+goog.html.SafeStyle.VALUE_ALLOWED_CHARS_+"+$");goog.html.SafeStyle.URL_RE_=/\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;goog.html.SafeStyle.FUNCTIONS_RE_=/\b(hsl|hsla|rgb|rgba|matrix|calc|minmax|fit-content|repeat|(rotate|scale|translate)(X|Y|Z|3d)?)\([-+*/0-9a-z.%\[\], ]+\)/g;goog.html.SafeStyle.COMMENT_RE_=/\/\*/;
goog.html.SafeStyle.sanitizeUrl_=function(a){return a.replace(goog.html.SafeStyle.URL_RE_,function(a,c,d,e){var b="";d=d.replace(/^(['"])(.*)\1$/,function(a,c,d){b=c;return d});a=goog.html.SafeUrl.sanitize(d).getTypedStringValue();return c+b+a+b+e})};goog.html.SafeStyle.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyle.unwrap(a);};goog.array.forEach(arguments,c);return b?goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b):goog.html.SafeStyle.EMPTY};goog.html.SafeStyleSheet=function(){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_="";this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;};goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString=!0;goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};
goog.html.SafeStyleSheet.createRule=function(a,b){if(goog.string.internal.contains(a,"<"))throw Error("Selector does not allow '<', got: "+a);var c=a.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g,"");if(!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(c))throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: "+a);if(!goog.html.SafeStyleSheet.hasBalancedBrackets_(c))throw Error("() and [] in selector must be balanced, got: "+a);b instanceof goog.html.SafeStyle||(b=goog.html.SafeStyle.create(b));
a=a+"{"+goog.html.SafeStyle.unwrap(b).replace(/</g,"\\3C ")+"}";return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.hasBalancedBrackets_=function(a){for(var b={"(":")","[":"]"},c=[],d=0;d<a.length;d++){var e=a[d];if(b[e])c.push(b[e]);else if(goog.object.contains(b,e)&&c.pop()!=e)return !1}return 0==c.length};
goog.html.SafeStyleSheet.concat=function(a){var b="",c=function(a){goog.isArray(a)?goog.array.forEach(a,c):b+=goog.html.SafeStyleSheet.unwrap(a);};goog.array.forEach(arguments,c);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.SafeStyleSheet.fromConstant=function(a){a=goog.string.Const.unwrap(a);if(0===a.length)return goog.html.SafeStyleSheet.EMPTY;goog.asserts.assert(!goog.string.internal.contains(a,"<"),"Forbidden '<' character in style sheet string: "+a);return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(a)};goog.html.SafeStyleSheet.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_};
goog.DEBUG&&(goog.html.SafeStyleSheet.prototype.toString=function(){return "SafeStyleSheet{"+this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_+"}"});
goog.html.SafeStyleSheet.unwrap=function(a){if(a instanceof goog.html.SafeStyleSheet&&a.constructor===goog.html.SafeStyleSheet&&a.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;goog.asserts.fail("expected object of type SafeStyleSheet, got '"+a+"' of type "+goog.typeOf(a));return "type_error:SafeStyleSheet"};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse=function(a){return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(a)};goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a){this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_=a;return this};goog.html.SafeStyleSheet.EMPTY=goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:""};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_();};
goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.internal.caseInsensitiveContains(b,a)};
goog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=/(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g,c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.browser.matchEdgeHtml_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};goog.labs.userAgent.browser.matchEdgeChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("Edg/")};
goog.labs.userAgent.browser.matchOperaChromium_=function(){return goog.labs.userAgent.util.matchUserAgent("OPR")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")||goog.labs.userAgent.util.matchUserAgent("FxiOS")};
goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdgeHtml_()||goog.labs.userAgent.browser.matchEdgeChromium_()||goog.labs.userAgent.browser.matchOperaChromium_()||goog.labs.userAgent.browser.matchFirefox_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))};
goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")};goog.labs.userAgent.browser.matchIosWebview_=function(){return (goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&!goog.labs.userAgent.browser.matchFirefox_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")};
goog.labs.userAgent.browser.matchChrome_=function(){return (goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchEdgeHtml_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};
goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdgeHtml_;goog.labs.userAgent.browser.isEdgeChromium=goog.labs.userAgent.browser.matchEdgeChromium_;goog.labs.userAgent.browser.isOperaChromium=goog.labs.userAgent.browser.matchOperaChromium_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")};
goog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||""}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);b=goog.labs.userAgent.util.extractVersionTuples(b);var c={};goog.array.forEach(b,function(a){c[a[0]]=a[1];});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a(["Version","Opera"]):goog.labs.userAgent.browser.isEdge()?a(["Edge"]):
goog.labs.userAgent.browser.isEdgeChromium()?a(["Edg"]):goog.labs.userAgent.browser.isChrome()?a(["Chrome","CriOS"]):(b=b[2])&&b[1]||""};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};
goog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\d\.]*)/.exec(a);if(b&&b[1])return b[1];b="";var c=/MSIE +([\d\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\/(\d.\d)/.exec(a),"7.0"==c[1])if(a&&a[1])switch(a[1]){case "4.0":b="8.0";break;case "5.0":b="9.0";break;case "6.0":b="10.0";break;case "7.0":b="11.0";}else b="7.0";else b=c[1];return b};goog.html.SafeHtml=function(){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_="";this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_=goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;this.dir_=null;};goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString=!0;goog.html.SafeHtml.prototype.getDirection=function(){return this.dir_};goog.html.SafeHtml.prototype.implementsGoogStringTypedString=!0;goog.html.SafeHtml.prototype.getTypedStringValue=function(){return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString()};
goog.DEBUG&&(goog.html.SafeHtml.prototype.toString=function(){return "SafeHtml{"+this.privateDoNotAccessOrElseSafeHtmlWrappedValue_+"}"});goog.html.SafeHtml.unwrap=function(a){return goog.html.SafeHtml.unwrapTrustedHTML(a).toString()};
goog.html.SafeHtml.unwrapTrustedHTML=function(a){if(a instanceof goog.html.SafeHtml&&a.constructor===goog.html.SafeHtml&&a.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_===goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_)return a.privateDoNotAccessOrElseSafeHtmlWrappedValue_;goog.asserts.fail("expected object of type SafeHtml, got '"+a+"' of type "+goog.typeOf(a));return "type_error:SafeHtml"};
goog.html.SafeHtml.htmlEscape=function(a){if(a instanceof goog.html.SafeHtml)return a;var b="object"==typeof a,c=null;b&&a.implementsGoogI18nBidiDirectionalString&&(c=a.getDirection());a=b&&a.implementsGoogStringTypedString?a.getTypedStringValue():String(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(a),c)};
goog.html.SafeHtml.htmlEscapePreservingNewlines=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(a)),a.getDirection())};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces=function(a){if(a instanceof goog.html.SafeHtml)return a;a=goog.html.SafeHtml.htmlEscape(a);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(a)),a.getDirection())};goog.html.SafeHtml.from=goog.html.SafeHtml.htmlEscape;goog.html.SafeHtml.VALID_NAMES_IN_TAG_=/^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_={action:!0,cite:!0,data:!0,formaction:!0,href:!0,manifest:!0,poster:!0,src:!0};goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_={APPLET:!0,BASE:!0,EMBED:!0,IFRAME:!0,LINK:!0,MATH:!0,META:!0,OBJECT:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};goog.html.SafeHtml.create=function(a,b,c){goog.html.SafeHtml.verifyTagName(String(a));return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(a),b,c)};
goog.html.SafeHtml.verifyTagName=function(a){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(a))throw Error("Invalid tag name <"+a+">.");if(a.toUpperCase()in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_)throw Error("Tag name <"+a+"> is not allowed for SafeHtml.");};
goog.html.SafeHtml.createIframe=function(a,b,c,d){a&&goog.html.TrustedResourceUrl.unwrap(a);var e={};e.src=a||null;e.srcdoc=b&&goog.html.SafeHtml.unwrap(b);a=goog.html.SafeHtml.combineAttributes(e,{sandbox:""},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.createSandboxIframe=function(a,b,c,d){if(!goog.html.SafeHtml.canUseSandboxIframe())throw Error("The browser does not support sandboxed iframes.");var e={};e.src=a?goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a)):null;e.srcdoc=b||null;e.sandbox="";a=goog.html.SafeHtml.combineAttributes(e,{},c);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe",a,d)};
goog.html.SafeHtml.canUseSandboxIframe=function(){return goog.global.HTMLIFrameElement&&"sandbox"in goog.global.HTMLIFrameElement.prototype};goog.html.SafeHtml.createScriptSrc=function(a,b){goog.html.TrustedResourceUrl.unwrap(a);a=goog.html.SafeHtml.combineAttributes({src:a},{},b);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",a)};
goog.html.SafeHtml.createScript=function(a,b){for(var c in b){var d=c.toLowerCase();if("language"==d||"src"==d||"text"==d||"type"==d)throw Error('Cannot set "'+d+'" attribute');}c="";a=goog.array.concat(a);for(d=0;d<a.length;d++)c+=goog.html.SafeScript.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script",b,a)};
goog.html.SafeHtml.createStyle=function(a,b){b=goog.html.SafeHtml.combineAttributes({type:"text/css"},{},b);var c="";a=goog.array.concat(a);for(var d=0;d<a.length;d++)c+=goog.html.SafeStyleSheet.unwrap(a[d]);a=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(c,goog.i18n.bidi.Dir.NEUTRAL);return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style",b,a)};
goog.html.SafeHtml.createMetaRefresh=function(a,b){a=goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(a));(goog.labs.userAgent.browser.isIE()||goog.labs.userAgent.browser.isEdge())&&goog.string.internal.contains(a,";")&&(a="'"+a.replace(/'/g,"%27")+"'");return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta",{"http-equiv":"refresh",content:(b||0)+"; url="+a})};
goog.html.SafeHtml.getAttrNameAndValue_=function(a,b,c){if(c instanceof goog.string.Const)c=goog.string.Const.unwrap(c);else if("style"==b.toLowerCase())c=goog.html.SafeHtml.getStyleValue_(c);else {if(/^on/i.test(b))throw Error('Attribute "'+b+'" requires goog.string.Const value, "'+c+'" given.');if(b.toLowerCase()in goog.html.SafeHtml.URL_ATTRIBUTES_)if(c instanceof goog.html.TrustedResourceUrl)c=goog.html.TrustedResourceUrl.unwrap(c);else if(c instanceof goog.html.SafeUrl)c=goog.html.SafeUrl.unwrap(c);
else if(goog.isString(c))c=goog.html.SafeUrl.sanitize(c).getTypedStringValue();else throw Error('Attribute "'+b+'" on tag "'+a+'" requires goog.html.SafeUrl, goog.string.Const, or string, value "'+c+'" given.');}c.implementsGoogStringTypedString&&(c=c.getTypedStringValue());goog.asserts.assert(goog.isString(c)||goog.isNumber(c),"String or number value expected, got "+typeof c+" with value: "+c);return b+'="'+goog.string.internal.htmlEscape(String(c))+'"'};
goog.html.SafeHtml.getStyleValue_=function(a){if(!goog.isObject(a))throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, '+typeof a+" given: "+a);a instanceof goog.html.SafeStyle||(a=goog.html.SafeStyle.create(a));return goog.html.SafeStyle.unwrap(a)};goog.html.SafeHtml.createWithDir=function(a,b,c,d){b=goog.html.SafeHtml.create(b,c,d);b.dir_=a;return b};
goog.html.SafeHtml.join=function(a,b){a=goog.html.SafeHtml.htmlEscape(a);var c=a.getDirection(),d=[],e=function(a){goog.isArray(a)?goog.array.forEach(a,e):(a=goog.html.SafeHtml.htmlEscape(a),d.push(goog.html.SafeHtml.unwrap(a)),a=a.getDirection(),c==goog.i18n.bidi.Dir.NEUTRAL?c=a:a!=goog.i18n.bidi.Dir.NEUTRAL&&c!=a&&(c=null));};goog.array.forEach(b,e);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(d.join(goog.html.SafeHtml.unwrap(a)),c)};
goog.html.SafeHtml.concat=function(a){return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY,Array.prototype.slice.call(arguments))};goog.html.SafeHtml.concatWithDir=function(a,b){var c=goog.html.SafeHtml.concat(goog.array.slice(arguments,1));c.dir_=a;return c};goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_={};goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse=function(a,b){return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(a,b)};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_=function(a,b){this.privateDoNotAccessOrElseSafeHtmlWrappedValue_=goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY?goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(a):a;this.dir_=b;return this};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse=function(a,b,c){var d=null;var e="<"+a+goog.html.SafeHtml.stringifyAttributes(a,b);goog.isDefAndNotNull(c)?goog.isArray(c)||(c=[c]):c=[];goog.dom.tags.isVoidTag(a.toLowerCase())?(goog.asserts.assert(!c.length,"Void tag <"+a+"> does not allow content."),e+=">"):(d=goog.html.SafeHtml.concat(c),e+=">"+goog.html.SafeHtml.unwrap(d)+"</"+a+">",d=d.getDirection());(a=b&&b.dir)&&(d=/^(ltr|rtl|auto)$/i.test(a)?goog.i18n.bidi.Dir.NEUTRAL:
null);return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(e,d)};goog.html.SafeHtml.stringifyAttributes=function(a,b){var c="";if(b)for(var d in b){if(!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(d))throw Error('Invalid attribute name "'+d+'".');var e=b[d];goog.isDefAndNotNull(e)&&(c+=" "+goog.html.SafeHtml.getAttrNameAndValue_(a,d,e));}return c};
goog.html.SafeHtml.combineAttributes=function(a,b,c){var d={},e;for(e in a)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=a[e];for(e in b)goog.asserts.assert(e.toLowerCase()==e,"Must be lower case"),d[e]=b[e];for(e in c){var f=e.toLowerCase();if(f in a)throw Error('Cannot override "'+f+'" attribute, got "'+e+'" with value "'+c[e]+'"');f in b&&delete d[f];d[e]=c[e];}return d};
goog.html.SafeHtml.DOCTYPE_HTML=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.EMPTY=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("",goog.i18n.bidi.Dir.NEUTRAL);goog.html.SafeHtml.BR=goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>",goog.i18n.bidi.Dir.NEUTRAL);goog.html.uncheckedconversions={};goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract=function(a,b,c){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(b,c||null)};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(b)};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract=function(a,b){goog.asserts.assertString(goog.string.Const.unwrap(a),"must provide justification");goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(a)),"must provide non-empty justification");return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(b)};goog.dom.safe={};goog.dom.safe.InsertAdjacentHtmlPosition={AFTERBEGIN:"afterbegin",AFTEREND:"afterend",BEFOREBEGIN:"beforebegin",BEFOREEND:"beforeend"};goog.dom.safe.insertAdjacentHtml=function(a,b,c){a.insertAdjacentHTML(b,goog.html.SafeHtml.unwrapTrustedHTML(c));};goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_={MATH:!0,SCRIPT:!0,STYLE:!0,SVG:!0,TEMPLATE:!0};
goog.dom.safe.isInnerHtmlCleanupRecursive_=goog.functions.cacheReturnValue(function(){if(goog.DEBUG&&"undefined"===typeof document)return !1;var a=document.createElement("div"),b=document.createElement("div");b.appendChild(document.createElement("div"));a.appendChild(b);if(goog.DEBUG&&!a.firstChild)return !1;b=a.firstChild.firstChild;a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);return !b.parentElement});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse=function(a,b){if(goog.dom.safe.isInnerHtmlCleanupRecursive_())for(;a.lastChild;)a.removeChild(a.lastChild);a.innerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b);};
goog.dom.safe.setInnerHtml=function(a,b){if(goog.asserts.ENABLE_ASSERTS){var c=a.tagName.toUpperCase();if(goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[c])throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of "+a.tagName+".");}goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(a,b);};goog.dom.safe.setOuterHtml=function(a,b){a.outerHTML=goog.html.SafeHtml.unwrapTrustedHTML(b);};
goog.dom.safe.setFormElementAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLFormElement(a).action=goog.html.SafeUrl.unwrapTrustedURL(b);};goog.dom.safe.setButtonFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLButtonElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b);};
goog.dom.safe.setInputFormAction=function(a,b){b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);goog.dom.asserts.assertIsHTMLInputElement(a).formAction=goog.html.SafeUrl.unwrapTrustedURL(b);};goog.dom.safe.setStyle=function(a,b){a.style.cssText=goog.html.SafeStyle.unwrap(b);};goog.dom.safe.documentWrite=function(a,b){a.write(goog.html.SafeHtml.unwrapTrustedHTML(b));};
goog.dom.safe.setAnchorHref=function(a,b){goog.dom.asserts.assertIsHTMLAnchorElement(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b);};goog.dom.safe.setImageSrc=function(a,b){goog.dom.asserts.assertIsHTMLImageElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:image\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c);}a.src=goog.html.SafeUrl.unwrapTrustedURL(b);};
goog.dom.safe.setAudioSrc=function(a,b){goog.dom.asserts.assertIsHTMLAudioElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:audio\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c);}a.src=goog.html.SafeUrl.unwrapTrustedURL(b);};goog.dom.safe.setVideoSrc=function(a,b){goog.dom.asserts.assertIsHTMLVideoElement(a);if(!(b instanceof goog.html.SafeUrl)){var c=/^data:video\//i.test(b);b=goog.html.SafeUrl.sanitizeAssertUnchanged(b,c);}a.src=goog.html.SafeUrl.unwrapTrustedURL(b);};
goog.dom.safe.setEmbedSrc=function(a,b){goog.dom.asserts.assertIsHTMLEmbedElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);};goog.dom.safe.setFrameSrc=function(a,b){goog.dom.asserts.assertIsHTMLFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b);};goog.dom.safe.setIframeSrc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedURL(b);};
goog.dom.safe.setIframeSrcdoc=function(a,b){goog.dom.asserts.assertIsHTMLIFrameElement(a);a.srcdoc=goog.html.SafeHtml.unwrapTrustedHTML(b);};
goog.dom.safe.setLinkHrefAndRel=function(a,b,c){goog.dom.asserts.assertIsHTMLLinkElement(a);a.rel=c;goog.string.internal.caseInsensitiveContains(c,"stylesheet")?(goog.asserts.assert(b instanceof goog.html.TrustedResourceUrl,'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'),a.href=goog.html.TrustedResourceUrl.unwrapTrustedURL(b)):a.href=b instanceof goog.html.TrustedResourceUrl?goog.html.TrustedResourceUrl.unwrapTrustedURL(b):b instanceof goog.html.SafeUrl?goog.html.SafeUrl.unwrapTrustedURL(b):
goog.html.SafeUrl.unwrapTrustedURL(goog.html.SafeUrl.sanitizeAssertUnchanged(b));};goog.dom.safe.setObjectData=function(a,b){goog.dom.asserts.assertIsHTMLObjectElement(a);a.data=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);};goog.dom.safe.setScriptSrc=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.src=goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b);};
goog.dom.safe.setScriptContent=function(a,b){goog.dom.asserts.assertIsHTMLScriptElement(a);a.text=goog.html.SafeScript.unwrapTrustedScript(b);(b=goog.getScriptNonce())&&a.setAttribute("nonce",b);};goog.dom.safe.setLocationHref=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.href=goog.html.SafeUrl.unwrapTrustedURL(b);};
goog.dom.safe.assignLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.assign(goog.html.SafeUrl.unwrapTrustedURL(b));};goog.dom.safe.replaceLocation=function(a,b){goog.dom.asserts.assertIsLocation(a);b=b instanceof goog.html.SafeUrl?b:goog.html.SafeUrl.sanitizeAssertUnchanged(b);a.replace(goog.html.SafeUrl.unwrapTrustedURL(b));};
goog.dom.safe.openInWindow=function(a,b,c,d,e){a=a instanceof goog.html.SafeUrl?a:goog.html.SafeUrl.sanitizeAssertUnchanged(a);return (b||goog.global).open(goog.html.SafeUrl.unwrapTrustedURL(a),c?goog.string.Const.unwrap(c):"",d,e)};goog.dom.safe.parseFromStringHtml=function(a,b){return goog.dom.safe.parseFromString(a,b,"text/html")};goog.dom.safe.parseFromString=function(a,b,c){return a.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(b),c)};
goog.dom.safe.createImageFromBlob=function(a){if(!/^image\/.*/g.test(a.type))throw Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");var b=goog.global.URL.createObjectURL(a);a=new goog.global.Image;a.onload=function(){goog.global.URL.revokeObjectURL(b);};goog.dom.safe.setImageSrc(a,goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."),b));return a};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:"\u00a0"};goog.string.startsWith=goog.string.internal.startsWith;goog.string.endsWith=goog.string.internal.endsWith;goog.string.caseInsensitiveStartsWith=goog.string.internal.caseInsensitiveStartsWith;goog.string.caseInsensitiveEndsWith=goog.string.internal.caseInsensitiveEndsWith;goog.string.caseInsensitiveEquals=goog.string.internal.caseInsensitiveEquals;
goog.string.subs=function(a,b){for(var c=a.split("%s"),d="",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join("%s")};goog.string.collapseWhitespace=function(a){return a.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")};goog.string.isEmptyOrWhitespace=goog.string.internal.isEmptyOrWhitespace;goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};
goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return !/[^\t\n\r ]/.test(a)};goog.string.isAlpha=function(a){return !/[^a-zA-Z]/.test(a)};goog.string.isNumeric=function(a){return !/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return !/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return " "==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&" "<=a&&"~">=a||"\u0080"<=a&&"\ufffd">=a};
goog.string.stripNewlines=function(a){return a.replace(/(\r\n|\r|\n)+/g," ")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\r\n|\r|\n)/g,"\n")};goog.string.normalizeWhitespace=function(a){return a.replace(/\xa0|\s/g," ")};goog.string.normalizeSpaces=function(a){return a.replace(/\xa0|[ \t]+/g," ")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")};goog.string.trim=goog.string.internal.trim;
goog.string.trimLeft=function(a){return a.replace(/^[\s\xa0]+/,"")};goog.string.trimRight=function(a){return a.replace(/[\s\xa0]+$/,"")};goog.string.caseInsensitiveCompare=goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return -1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\D+/g)};
goog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\d+|\.\d+|\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\+/g," "))};goog.string.newLineToBr=goog.string.internal.newLineToBr;
goog.string.htmlEscape=function(a,b){a=goog.string.internal.htmlEscape(a,b);goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,"&#101;"));return a};goog.string.E_RE_=/e/g;goog.string.unescapeEntities=function(a){return goog.string.contains(a,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};
goog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,"&")?goog.string.unescapeEntitiesUsingDom_(a,b):a};
goog.string.unescapeEntitiesUsingDom_=function(a,b){var c={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};var d=b?b.createElement("div"):goog.global.document.createElement("div");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var e=c[a];if(e)return e;"#"==b.charAt(0)&&(b=Number("0"+b.substr(1)),isNaN(b)||(e=String.fromCharCode(b)));e||(goog.dom.safe.setInnerHtml(d,goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."),
a+" ")),e=d.firstChild.nodeValue.slice(0,-1));return c[a]=e})};goog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case "amp":return "&";case "lt":return "<";case "gt":return ">";case "quot":return '"';default:return "#"!=c.charAt(0)||(c=Number("0"+c.substr(1)),isNaN(c))?a:String.fromCharCode(c)}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g," &#160;"),b)};
goog.string.preserveSpaces=function(a){return a.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+"...");c&&(a=goog.string.htmlEscape(a));return a};
goog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+"..."+a.substring(e);}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+"..."+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={"\x00":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\x0B":"\\x0B",'"':'\\"',"\\":"\\\\","<":"\\u003C"};goog.string.jsEscapeCache_={"'":"\\'"};
goog.string.quote=function(a){a=String(a);for(var b=['"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d));}b.push('"');return b.join("")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join("")};
goog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b=a.charCodeAt(0);if(31<b&&127>b)var c=a;else {if(256>b){if(c="\\x",16>b||256<b)c+="0";}else c="\\u",4096>b&&(c+="0");c+=b.toString(16).toUpperCase();}return goog.string.jsEscapeCache_[a]=c};goog.string.contains=goog.string.internal.contains;goog.string.caseInsensitiveContains=goog.string.internal.caseInsensitiveContains;
goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){return a.replace(b,"")};goog.string.removeAll=function(a,b){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,"")};goog.string.replaceAll=function(a,b,c){b=new RegExp(goog.string.regExpEscape(b),"g");return a.replace(b,c.replace(/\$/g,"$$$$"))};
goog.string.regExpEscape=function(a){return String(a).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};goog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(".");-1==c&&(c=a.length);return goog.string.repeat("0",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?"":String(a)};
goog.string.buildString=function(a){return Array.prototype.join.call(arguments,"")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};goog.string.compareVersions=goog.string.internal.compareVersions;goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;
goog.string.createUniqueString=function(){return "goog_"+goog.string.uniqueStringCounter_++};goog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return /^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return /^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\-([a-z])/g,function(a,c){return c.toUpperCase()})};
goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,"-$1").toLowerCase()};goog.string.toTitleCase=function(a,b){b=goog.isString(b)?goog.string.regExpEscape(b):"\\s";return a.replace(new RegExp("(^"+(b?"|["+b+"]+":"")+")([a-z])","g"),function(a,b,e){return b+e.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};
goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};goog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.lastComponent=function(a,b){if(b)"string"==typeof b&&(b=[b]);else return a;for(var c=-1,d=0;d<b.length;d++)if(""!=b[d]){var e=a.lastIndexOf(b[d]);e>c&&(c=e);}return -1==c?a:a.slice(c+1)};
goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f];}return d[b.length]};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")};
goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};
goog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){a=goog.labs.userAgent.util.extractVersionTuples(a);var b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return "Gecko"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,"Firefox"):b[1];a=a[0];var c;if(a&&(c=a[2])&&(c=/Trident\/([^\s;]+)/.exec(c)))return c[1]}return ""};
goog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if("Edge"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){return (a=goog.array.find(a,function(a){return b==a[0]}))&&a[1]||""};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")};
goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")};
goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")};goog.labs.userAgent.platform.isChromecast=function(){return goog.labs.userAgent.util.matchUserAgent("CrKey")};goog.labs.userAgent.platform.isKaiOS=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("KaiOS")};goog.labs.userAgent.platform.isGo2Phone=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("GAFP")};
goog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b="";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:"0.0"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,".")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,"."):"10"):goog.labs.userAgent.platform.isKaiOS()?(b=/(?:KaiOS)\/(\S+)/i,
b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isAndroid()?(b=/Android\s+([^\);]+)(\)|;)/,b=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||""};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.reflect={};goog.reflect.object=function(a,b){return b};goog.reflect.objectProperty=function(a,b){return a};goog.reflect.sinkValue=function(a){goog.reflect.sinkValue[" "](a);return a};goog.reflect.sinkValue[" "]=goog.nullFunction;goog.reflect.canAccessProperty=function(a,b){try{return goog.reflect.sinkValue(a[b]),!0}catch(c){}return !1};goog.reflect.cache=function(a,b,c,d){d=d?d(b):b;return Object.prototype.hasOwnProperty.call(a,d)?a[d]:a[d]=c(b)};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};
goog.userAgent.getNavigatorTyped=function(){return goog.global.navigator||null};goog.userAgent.getNavigator=function(){return goog.userAgent.getNavigatorTyped()};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")};
goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;goog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigatorTyped();return a&&a.platform||""};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;
goog.userAgent.ASSUME_IPAD=!1;goog.userAgent.ASSUME_IPOD=!1;goog.userAgent.ASSUME_KAIOS=!1;goog.userAgent.ASSUME_GO2PHONE=!1;goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigatorTyped();return !!a&&goog.string.contains(a.appVersion||"","X11")};
goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIpod();goog.userAgent.IOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD||goog.userAgent.ASSUME_IPOD:goog.labs.userAgent.platform.isIos();goog.userAgent.KAIOS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_KAIOS:goog.labs.userAgent.platform.isKaiOS();goog.userAgent.GO2PHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_GO2PHONE:goog.labs.userAgent.platform.isGo2Phone();
goog.userAgent.determineVersion_=function(){var a="",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:"");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),null!=b&&b>parseFloat(a))?String(b):a};
goog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return /rv:([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.EDGE)return /Edge\/([\d\.]+)/.exec(a);if(goog.userAgent.IE)return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return /WebKit\/(\S+)/.exec(a);if(goog.userAgent.OPERA)return /(?:Version)[ \/]?(\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};
goog.userAgent.VERSION=goog.userAgent.determineVersion_();goog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_,a,function(){return 0<=goog.string.compareVersions(goog.userAgent.VERSION,a)})};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){if(goog.global.document&&goog.userAgent.IE)return goog.userAgent.getDocumentMode_()}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;
goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.DEFAULT_ALPHABET_COMMON_="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"+/=";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_+"-_.";goog.crypt.base64.Alphabet={DEFAULT:0,NO_PADDING:1,WEBSAFE:2,WEBSAFE_DOT_PADDING:3,WEBSAFE_NO_PADDING:4};goog.crypt.base64.paddingChars_="=.";
goog.crypt.base64.isPadding_=function(a){return goog.string.contains(goog.crypt.base64.paddingChars_,a)};goog.crypt.base64.byteToCharMaps_={};goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob;
goog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),"encodeByteArray takes an array as a parameter");void 0===b&&(b=goog.crypt.base64.Alphabet.DEFAULT);goog.crypt.base64.init_();b=goog.crypt.base64.byteToCharMaps_[b];for(var c=[],d=0;d<a.length;d+=3){var e=a[d],f=d+1<a.length,g=f?a[d+1]:0,h=d+2<a.length,k=h?a[d+2]:0,l=e>>2;e=(e&3)<<4|g>>4;g=(g&15)<<2|k>>6;k&=63;h||(k=64,f||(g=64));c.push(b[l],b[e],b[g]||"",b[k]||"");}return c.join("")};
goog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c="";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a);});return c};
goog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a);});return c};
goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var b=a.length,c=3*b/4;c%3?c=Math.floor(c):goog.crypt.base64.isPadding_(a[b-1])&&(c=goog.crypt.base64.isPadding_(a[b-2])?c-2:c-1);var d=new Uint8Array(c),e=0;goog.crypt.base64.decodeStringInternal_(a,function(a){d[e++]=a;});return d.subarray(0,e)};
goog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error("Unknown base64 encoding at char: "+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h));}};
goog.crypt.base64.init_=function(){if(!goog.crypt.base64.charToByteMap_){goog.crypt.base64.charToByteMap_={};for(var a=goog.crypt.base64.DEFAULT_ALPHABET_COMMON_.split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));goog.crypt.base64.byteToCharMaps_[c]=d;for(var e=0;e<d.length;e++){var f=d[e],g=goog.crypt.base64.charToByteMap_[f];void 0===g?goog.crypt.base64.charToByteMap_[f]=e:goog.asserts.assert(g===e);}}}};jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a;};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a;};
jspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c;};
jspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648);else if(isNaN(a))jspb.utils.split64High=0,jspb.utils.split64Low=2147483647;else if(a>jspb.BinaryConstants.FLOAT32_MAX)jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0;else if(a<jspb.BinaryConstants.FLOAT32_MIN)a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|
a)>>>0;else {var c=Math.floor(Math.log(a)/Math.LN2);a*=Math.pow(2,-c);a=Math.round(a*jspb.BinaryConstants.TWO_TO_23);16777216<=a&&++c;jspb.utils.split64High=0;jspb.utils.split64Low=(b<<31|c+127<<23|a&8388607)>>>0;}};
jspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0;}else {c=
a;var d=0;if(2<=c)for(;2<=c&&1023>d;)d++,c/=2;else for(;1>c&&-1022<d;)c*=2,d--;c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c;}};
jspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0;};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+(a>>>0)};
jspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));a=jspb.utils.joinUint64(a,b);return c?-a:a};jspb.utils.toZigzag64=function(a,b,c){var d=b>>31;return c(a<<1^d,(b<<1|a>>>31)^d)};jspb.utils.joinZigzag64=function(a,b){return jspb.utils.fromZigzag64(a,b,jspb.utils.joinInt64)};jspb.utils.fromZigzag64=function(a,b,c){var d=-(a&1);return c((a>>>1|b<<31)^d,b>>>1^d)};
jspb.utils.joinFloat32=function(a,b){b=2*(a>>31)+1;var c=a>>>23&255;a&=8388607;return 255==c?a?NaN:Infinity*b:0==c?b*Math.pow(2,-149)*a:b*Math.pow(2,c-150)*(a+Math.pow(2,23))};jspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047;a=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?a?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*a:c*Math.pow(2,d-1075)*(a+jspb.BinaryConstants.TWO_TO_52)};
jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS="0123456789abcdef".split("");jspb.utils.ZERO_CHAR_CODE_=48;jspb.utils.A_CHAR_CODE_=97;
jspb.utils.joinUnsignedDecimalString=function(a,b){function c(a,b){a=a?String(a):"";return b?"0000000".slice(a.length)+a:a}if(2097151>=b)return ""+jspb.utils.joinUint64(a,b);var d=(a>>>24|b<<8)>>>0&16777215;b=b>>16&65535;a=(a&16777215)+6777216*d+6710656*b;d+=8147497*b;b*=2;1E7<=a&&(d+=Math.floor(a/1E7),a%=1E7);1E7<=d&&(b+=Math.floor(d/1E7),d%=1E7);return c(b,0)+c(d,b)+c(a,1)};
jspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);a=jspb.utils.joinUnsignedDecimalString(a,b);return c?"-"+a:a};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(a,c):jspb.utils.joinUnsignedDecimalString(a,c)};
jspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};
jspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++)b=a*e[c]+b,e[c]=b&255,b>>>=8;}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255;}goog.asserts.assert(0<a.length);var d=!1;"-"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,a.charCodeAt(f)-jspb.utils.ZERO_CHAR_CODE_);d&&(c(),b(1,1));return goog.crypt.byteArrayToString(e)};jspb.utils.splitDecimalString=function(a){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));};
jspb.utils.toHexDigit_=function(a){return String.fromCharCode(10>a?jspb.utils.ZERO_CHAR_CODE_+a:jspb.utils.A_CHAR_CODE_-10+a)};jspb.utils.fromHexCharCode_=function(a){return a>=jspb.utils.A_CHAR_CODE_?a-jspb.utils.A_CHAR_CODE_+10:a-jspb.utils.ZERO_CHAR_CODE_};jspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]="0";b[1]="x";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.toHexDigit_(d>>4);b[2*c+3]=jspb.utils.toHexDigit_(d&15);}return b.join("")};
jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert("0"==a[0]);goog.asserts.assert("x"==a[1]);for(var b="",c=0;8>c;c++){var d=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+2)),e=jspb.utils.fromHexCharCode_(a.charCodeAt(2*c+3));b=String.fromCharCode(16*d+e)+b;}return b};
jspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;return b?jspb.utils.joinInt64(a,c):jspb.utils.joinUint64(a,c)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};
jspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7;}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7;}if(a[b++]!=g)break;f++;b+=e;}return f};
jspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};
jspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7;}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g;}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+="\\x",16>a[c]&&(b+="0"),b+=a[c].toString(16);}return b+'"'};
jspb.utils.debugScalarToTextFormat=function(a){return "string"===typeof a?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error("Conversion error: string contains codepoint outside of byte range");b[c]=d;}return b};
jspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||"undefined"!=typeof Buffer&&a.constructor===Buffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Type not convertible to Uint8Array.");return new Uint8Array(0)};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c);};jspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this);};
jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1;};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};
jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=void 0!==b?b:0;this.end_=void 0!==c?this.start_+c:this.bytes_.length;this.cursor_=this.start_;};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};jspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a;};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_;};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};
jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a;};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};
jspb.BinaryDecoder.prototype.readSplitVarint64=function(a){for(var b=128,c=0,d=0,e=0;4>e&&128<=b;e++)b=this.bytes_[this.cursor_++],c|=(b&127)<<7*e;128<=b&&(b=this.bytes_[this.cursor_++],c|=(b&127)<<28,d|=(b&127)>>4);if(128<=b)for(e=0;5>e&&128<=b;e++)b=this.bytes_[this.cursor_++],d|=(b&127)<<7*e+3;if(128>b)return a(c>>>0,d>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid.");this.error_=!0;};
jspb.BinaryDecoder.prototype.readSplitZigzagVarint64=function(a){return this.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryDecoder.prototype.readSplitFixed64=function(a){var b=this.bytes_,c=this.cursor_;this.cursor_+=8;for(var d=0,e=0,f=c+7;f>=c;f--)d=d<<8|b[f],e=e<<8|b[f+4];return a(d,e)};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++;};
jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--;};
jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a=this.bytes_;var b=a[this.cursor_+0];var c=b&127;if(128>b)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+1];c|=(b&127)<<7;if(128>b)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+2];c|=(b&127)<<14;if(128>b)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;b=a[this.cursor_+3];c|=(b&127)<<21;if(128>b)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=
this.end_),c;b=a[this.cursor_+4];c|=(b&15)<<28;if(128>b)return this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;this.cursor_+=5;128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&128<=a[this.cursor_++]&&goog.asserts.assert(!1);goog.asserts.assert(this.cursor_<=this.end_);return c};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};
jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinUint64)};jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinUnsignedDecimalString)};
jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64(jspb.utils.joinInt64)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64(jspb.utils.joinZigzag64)};jspb.BinaryDecoder.prototype.readZigzagVarintHash64=function(){return this.readSplitZigzagVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readSplitZigzagVarint64(jspb.utils.joinSignedDecimalString)};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};jspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};
jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return (a<<0|b<<8|c<<16|d<<24)>>>0};jspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};
jspb.BinaryDecoder.prototype.readUint64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUnsignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};
jspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return (a<<0|b<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};
jspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readInt64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinSignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};
jspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return !!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};
jspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[],e="";c<a;){var f=b[c++];if(128>f)d.push(f);else if(192>f)continue;else if(224>f){var g=b[c++];d.push((f&31)<<6|g&63);}else if(240>f){g=b[c++];var h=b[c++];d.push((f&15)<<12|(g&63)<<6|h&63);}else if(248>f){g=b[c++];h=b[c++];var k=b[c++];f=(f&7)<<18|(g&63)<<12|(h&63)<<6|k&63;f-=65536;d.push((f>>10&1023)+55296,(f&1023)+56320);}8192<=d.length&&(e+=String.fromCharCode.apply(null,d),d.length=0);}e+=goog.crypt.byteArrayToString(d);
this.cursor_=c;return e};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64(jspb.utils.joinHash64)};
jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6];a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;};jspb.BinaryReader.instanceCache_=[];
jspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;
jspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this);};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};
jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isDelimited=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};
jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};jspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;};
jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a);};
jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return !1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3;a&=7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail("Invalid wire type: %s (at position %s)",
a,this.fieldCursor_),this.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return !0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_);};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader();};
jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint();};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else {var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a);}};
jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4);};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8);};
jspb.BinaryReader.prototype.skipGroup=function(){var a=this.nextField_;do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP){this.nextField_!=a&&(goog.asserts.fail("Unmatched end-group tag"),this.error_=!0);break}this.skipField();}while(1)};
jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.");}};
jspb.BinaryReader.prototype.registerReadCallback=function(a,b){null===this.readCallbacks_&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b;};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(null!==this.readCallbacks_);a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};
jspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();
case b.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case b.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();
default:goog.asserts.fail("Invalid field type in readAny()");}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32();d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c);};
jspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0);};
jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a;a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};
jspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};
jspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};
jspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};
jspb.BinaryReader.prototype.readSint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};
jspb.BinaryReader.prototype.readFixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32().toString()};
jspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};
jspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return !!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};
jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};
jspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readSintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarintHash64()};jspb.BinaryReader.prototype.readSplitVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(a)};
jspb.BinaryReader.prototype.readSplitZigzagVarint64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSplitVarint64(function(b,c){return jspb.utils.fromZigzag64(b,c,a)})};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};
jspb.BinaryReader.prototype.readSplitFixed64=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readSplitFixed64(a)};jspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var b=this.decoder_.readUnsignedVarint32();b=this.decoder_.getCursor()+b;for(var c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};
jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};
jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};
jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};
jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};
jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};
jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.BinaryEncoder=function(){this.buffer_=[];};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};
jspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a);};
jspb.BinaryEncoder.prototype.writeSplitFixed64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);this.writeUint32(a);this.writeUint32(b);};
jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a);};
jspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else {for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1);}};
jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0);};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(a){this.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(a));};jspb.BinaryEncoder.prototype.writeZigzagVarintHash64=function(a){var b=this;jspb.utils.splitHash64(a);jspb.utils.toZigzag64(jspb.utils.split64Low,jspb.utils.split64High,function(a,d){b.writeSplitVarint64(a>>>0,d>>>0);});};
jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255);};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);};
jspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255);};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255);};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);};
jspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255);};
jspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeInt64String=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(+a>=-jspb.BinaryConstants.TWO_TO_63&&+a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low);};
jspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(Infinity===a||-Infinity===a||isNaN(a)||a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High);};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert("boolean"===typeof a||"number"===typeof a);this.buffer_.push(a?1:0);};
jspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a);};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a);};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High);};
jspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.buffer_.push(d);else if(2048>d)this.buffer_.push(d>>6|192),this.buffer_.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var e=a.charCodeAt(c+1);56320<=e&&57343>=e&&(d=1024*(d-55296)+e-56320+65536,this.buffer_.push(d>>18|240),this.buffer_.push(d>>12&63|128),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128),c++);}else this.buffer_.push(d>>
12|224),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128);}return this.buffer_.length-b};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b;};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};
jspb.arith.UInt64.prototype.msb=function(){return !!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return !!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};
jspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){var c=a&65535;a>>>=16;var d=b&65535,e=b>>>16;b=c*d+65536*(c*e&65535)+65536*(a*d&65535);for(c=a*e+(c*e>>>16)+(a*d>>>16);4294967296<=b;)b-=4294967296,c+=1;return new jspb.arith.UInt64(b>>>0,c>>>0)};
jspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};
jspb.arith.UInt64.prototype.div=function(a){if(0==a)return [];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return [b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a="",b=this;!b.zero();){b=b.div(10);var c=b[0];a=b[1].lo+a;b=c;}""==a&&(a="0");return a};
jspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if("0">a[d]||"9"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c);}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b;};
jspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};
jspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return (a?"-":"")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&"-"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[];};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length;};
jspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop();b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++;};
jspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c));};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c);};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[];};
jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length;}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(a){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),a)};
jspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a));};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop());};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b);};
jspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");
break;case d.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail("Invalid field type in writeAny()");}};
jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b));};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b));};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b));};
jspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b));};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b));};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b));};
jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(b));};jspb.BinaryWriter.prototype.writeZigzagVarintHash64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarintHash64(b));};
jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b));};jspb.BinaryWriter.prototype.writeInt32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b));};
jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b));};jspb.BinaryWriter.prototype.writeInt64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi));};
jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b));};jspb.BinaryWriter.prototype.writeUint32String=function(a,b){null!=b&&(b=parseInt(b,10),goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b));};jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b));};
jspb.BinaryWriter.prototype.writeUint64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(b.lo,b.hi));};jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b));};
jspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b));};jspb.BinaryWriter.prototype.writeSintHash64=function(a,b){null!=b&&this.writeZigzagVarintHash64_(a,b);};jspb.BinaryWriter.prototype.writeSint64String=function(a,b){null!=b&&this.writeZigzagVarint64String_(a,b);};
jspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b));};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b));};
jspb.BinaryWriter.prototype.writeFixed64String=function(a,b){null!=b&&(b=jspb.arith.UInt64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi));};jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b));};
jspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b));};jspb.BinaryWriter.prototype.writeSfixed64String=function(a,b){null!=b&&(b=jspb.arith.Int64.fromString(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(b.lo,b.hi));};
jspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b));};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b));};
jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert("boolean"===typeof b||"number"===typeof b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b));};jspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b));};
jspb.BinaryWriter.prototype.writeString=function(a,b){null!=b&&(a=this.beginDelimited_(a),this.encoder_.writeString(b),this.endDelimited_(a));};jspb.BinaryWriter.prototype.writeBytes=function(a,b){null!=b&&(b=jspb.utils.byteSourceToUint8Array(b),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),this.appendUint8Array_(b));};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a));};
jspb.BinaryWriter.prototype.writeMessageSet=function(a,b,c){null!=b&&(this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.START_GROUP),this.writeFieldHeader_(2,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(a),a=this.beginDelimited_(3),c(b,this),this.endDelimited_(a),this.writeFieldHeader_(1,jspb.BinaryConstants.WireType.END_GROUP));};
jspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP));};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b));};
jspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b));};jspb.BinaryWriter.prototype.writeSplitFixed64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(b,c);};
jspb.BinaryWriter.prototype.writeSplitVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(b,c);};jspb.BinaryWriter.prototype.writeSplitZigzagVarint64=function(a,b,c){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);var d=this.encoder_;jspb.utils.toZigzag64(b,c,function(a,b){d.writeSplitVarint64(a>>>0,b>>>0);});};
jspb.BinaryWriter.prototype.writeRepeatedInt32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedInt64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedSplitFixed64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitFixed64(a,c(b[e]),d(b[e]));};jspb.BinaryWriter.prototype.writeRepeatedSplitVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitVarint64(a,c(b[e]),d(b[e]));};jspb.BinaryWriter.prototype.writeRepeatedSplitZigzagVarint64=function(a,b,c,d){if(null!=b)for(var e=0;e<b.length;e++)this.writeSplitZigzagVarint64(a,c(b[e]),d(b[e]));};
jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedUint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedSint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedSint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64String_(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedSintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarintHash64_(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64String(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64String(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c]);};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e);}};
jspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP);};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c]);};
jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c]);};jspb.BinaryWriter.prototype.writePackedInt32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(b[c]);this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint32(parseInt(b[c],10));this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedInt64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeSignedVarint64(b[c]);this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedSplitFixed64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitFixed64(c(b[e]),d(b[e]));this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedSplitVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=0;e<b.length;e++)this.encoder_.writeSplitVarint64(c(b[e]),d(b[e]));this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedSplitZigzagVarint64=function(a,b,c,d){if(null!=b){a=this.beginDelimited_(a);for(var e=this.encoder_,f=0;f<b.length;f++)jspb.utils.toZigzag64(c(b[f]),d(b[f]),function(a,b){e.writeSplitVarint64(a>>>0,b>>>0);});this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.Int64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi);}this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedUint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(b[c]);this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint32(parseInt(b[c],10));this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedUint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeUnsignedVarint64(b[c]);this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++){var d=jspb.arith.UInt64.fromString(b[c]);this.encoder_.writeSplitVarint64(d.lo,d.hi);}this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedSint32=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint32(b[c]);this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedSint64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarint64(b[c]);this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedSint64String=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(jspb.utils.decimalStringToHash64(b[c]));this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedSintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeZigzagVarintHash64(b[c]);this.endDelimited_(a);}};
jspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeUint32(b[a]);};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeUint64(b[a]);};
jspb.BinaryWriter.prototype.writePackedFixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++){var c=jspb.arith.UInt64.fromString(b[a]);this.encoder_.writeSplitFixed64(c.lo,c.hi);}};
jspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeInt32(b[a]);};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64(b[a]);};
jspb.BinaryWriter.prototype.writePackedSfixed64String=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeInt64String(b[a]);};jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*b.length),a=0;a<b.length;a++)this.encoder_.writeFloat(b[a]);};
jspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeDouble(b[a]);};jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(b.length),a=0;a<b.length;a++)this.encoder_.writeBool(b[a]);};
jspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeEnum(b[c]);this.endDelimited_(a);}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length)for(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*b.length),a=0;a<b.length;a++)this.encoder_.writeFixedHash64(b[a]);};
jspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){a=this.beginDelimited_(a);for(var c=0;c<b.length;c++)this.encoder_.writeVarintHash64(b[c]);this.endDelimited_(a);}};jspb.Map=function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_();};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1]);}this.arrClean=!0;};
jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray();}}}else {this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value]);}this.arrClean=!0;}return this.arr_};
jspb.Map.prototype.toObject=function(a,b){for(var c=this.toArray(),d=[],e=0;e<c.length;e++){var f=this.map_[c[e][0].toString()];this.wrapEntry_(f);var g=f.valueWrapper;g?(goog.asserts.assert(b),d.push([f.key,b(a,g)])):d.push([f.key,f.value]);}return d};jspb.Map.fromObject=function(a,b,c){b=new jspb.Map([],b);for(var d=0;d<a.length;d++){var e=a[d][0],f=c(a[d][1]);b.set(e,f);}return b};jspb.Map.ArrayIteratorIterable_=function(a){this.idx_=0;this.arr_=a;};
jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};"undefined"!=typeof Symbol&&(jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1;};
jspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value]);}return a};jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)]);}return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return new jspb.Map.ArrayIteratorIterable_(a)};jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return new jspb.Map.ArrayIteratorIterable_(a)};
jspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this);}};jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};
jspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage();}};
jspb.Map.deserializeBinary=function(a,b,c,d,e,f,g){for(;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(goog.asserts.assert(e),g||(g=new a.valueCtor_),d.call(b,g,e)):g=d.call(b));}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g);};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};
jspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0;};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e;};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f;};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return !!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;
jspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};jspb.Message.hiddenES6Property_=function(){};jspb.Message.getFieldNumber_=function(a,b){return b-a.arrayIndexOffset_};
jspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=null;b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.initPivotAndExtensionObject_(a,d);a.convertedPrimitiveFields_={};jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(a.repeatedFields=e);if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[c]=
a.extensionObject_[c]||jspb.Message.EMPTY_LIST_SENTINEL_);if(f&&f.length)for(b=0;b<f.length;b++)jspb.Message.computeOneofCase(a,f[b]);};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(a){return jspb.Message.ASSUME_LOCAL_ARRAYS?a instanceof Array:Array.isArray(a)};jspb.Message.isExtensionObject_=function(a){return null!==a&&"object"==typeof a&&!jspb.Message.isArray_(a)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)};
jspb.Message.initPivotAndExtensionObject_=function(a,b){var c=a.array.length,d=-1;if(c&&(d=c-1,c=a.array[d],jspb.Message.isExtensionObject_(c))){a.pivot_=jspb.Message.getFieldNumber_(a,d);a.extensionObject_=c;return}-1<b?(a.pivot_=Math.max(b,jspb.Message.getFieldNumber_(a,d+1)),a.extensionObject_=null):a.pivot_=Number.MAX_VALUE;};jspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={});};
jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};jspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(null!=h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h;}}};
jspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var h=d.call(a,g);if(null!=h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
else f.binaryWriterFn.call(b,g.fieldIndex,h);}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];if(f){c=f.fieldInfo;if(!f.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");if(c.isMessageType()){var g=new c.ctor;f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn);}else g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g);}else b.skipField();};
jspb.Message.getField=function(a,b){if(b<a.pivot_){b=jspb.Message.getIndex_(a,b);var c=a.array[b];return c===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[b]=[]:c}if(a.extensionObject_)return c=a.extensionObject_[b],c===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:c};jspb.Message.getRepeatedField=function(a,b){return jspb.Message.getField(a,b)};jspb.Message.getOptionalFloatingPointField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:+a};
jspb.Message.getBooleanField=function(a,b){a=jspb.Message.getField(a,b);return null==a?a:!!a};jspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedPrimitiveFields_[b]=!0;}return c};
jspb.Message.getRepeatedBooleanField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedPrimitiveFields_||(a.convertedPrimitiveFields_={});if(!a.convertedPrimitiveFields_[b]){for(var d=0;d<c.length;d++)c[d]=!!c[d];a.convertedPrimitiveFields_[b]=!0;}return c};
jspb.Message.bytesAsB64=function(a){if(null==a||"string"===typeof a)return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if("string"===typeof a)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(a));return null};
jspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return a.length&&"string"!==typeof a[0]?goog.array.map(a,jspb.Message.bytesAsB64):a};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return !a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};
jspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(a)+" expected "+b);});}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getBooleanFieldWithDefault=function(a,b,c){a=jspb.Message.getBooleanField(a,b);return null==a?c:a};
jspb.Message.getFloatingPointFieldWithDefault=function(a,b,c){a=jspb.Message.getOptionalFloatingPointField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;jspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];var e=jspb.Message.getField(a,b);if(!e){if(c)return;e=[];jspb.Message.setField(a,b,e);}return a.wrappers_[b]=new jspb.Map(e,d)};
jspb.Message.setField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[b]=c);return a};jspb.Message.setProto3IntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setProto3FloatField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3BooleanField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,!1)};jspb.Message.setProto3StringField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3BytesField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"")};jspb.Message.setProto3EnumField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};
jspb.Message.setProto3StringIntField=function(a,b,c){return jspb.Message.setFieldIgnoringDefault_(a,b,c,"0")};jspb.Message.setFieldIgnoringDefault_=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);c!==d?jspb.Message.setField(a,b,c):b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=null:(jspb.Message.maybeInitEmptyExtensionObject_(a),delete a.extensionObject_[b]);return a};
jspb.Message.addToRepeatedField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);b=jspb.Message.getRepeatedField(a,b);void 0!=d?b.splice(d,0,c):b.push(c);return a};jspb.Message.setOneofField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));return jspb.Message.setField(a,b,d)};
jspb.Message.computeOneofCase=function(a,b){for(var c,d,e=0;e<b.length;e++){var f=b[e],g=jspb.Message.getField(a,f);null!=g&&(c=f,d=g,jspb.Message.setField(a,f,void 0));}return c?(jspb.Message.setField(a,c,d),c):0};jspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e);}return a.wrappers_[c]};
jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};jspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getRepeatedField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e;}};
jspb.Message.setWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};jspb.Message.setOneofWrapperField=function(a,b,c,d){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;return jspb.Message.setOneofField(a,b,c,e)};
jspb.Message.setRepeatedWrapperField=function(a,b,c){goog.asserts.assertInstanceof(a,jspb.Message);a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;return jspb.Message.setField(a,b,d)};
jspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getRepeatedField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};
jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(Array.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray();}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()});
jspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return !this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};
jspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};
jspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error("Messages have different types.");var c=a.toArray();b=b.toArray();var d=[],e=0,f=c.length>b.length?c.length:b.length;a.getJsPbMessageId()&&(d[0]=a.getJsPbMessageId(),e=1);for(;e<f;e++)jspb.Message.compareFields(c[e],b[e])||(d[e]=b[e]);return new a.constructor(d)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};
jspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return !1;return !0};
jspb.Message.compareFields=function(a,b){if(a==b)return !0;if(!goog.isObject(a)||!goog.isObject(b))return "number"===typeof a&&isNaN(a)||"number"===typeof b&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return !1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return !1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return !1;return !0}if(a.constructor===Array){var d=void 0,e=void 0,f=Math.max(a.length,b.length);for(c=0;c<f;c++){var g=a[c],h=b[c];g&&
g.constructor==Object&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return !1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error("Invalid type in JSPB array");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};
jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};
jspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,"Copy source and target message should have the same type.");a=jspb.Message.clone(a);for(var c=b.toArray(),d=a.toArray(),e=c.length=0;e<d.length;e++)c[e]=d[e];b.wrappers_=a.wrappers_;b.extensionObject_=a.extensionObject_;};
jspb.Message.clone_=function(a){if(Array.isArray(a)){for(var b=Array(a.length),c=0;c<a.length;c++){var d=a[c];null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d);}return b}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);b={};for(c in a)d=a[c],null!=d&&(b[c]="object"==typeof d?jspb.Message.clone_(goog.asserts.assert(d)):d);return b};jspb.Message.registerMessageType=function(a,b){b.messageId=a;};jspb.Message.messageSetExtensions={};
jspb.Message.messageSetExtensionsBinary={};jspb.Export={};(exports.Map=jspb.Map,exports.Message=jspb.Message,exports.BinaryReader=jspb.BinaryReader,exports.BinaryWriter=jspb.BinaryWriter,exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo,exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo,exports.exportSymbol=goog.exportSymbol,exports.inherits=goog.inherits,exports.object={extend:goog.object.extend},exports.typeOf=goog.typeOf);
});

var descriptor_pb = createCommonjsModule$1(function (module, exports) {
// source: google/protobuf/descriptor.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.google.protobuf.DescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.DescriptorProto.ExtensionRange', null, global);
goog.exportSymbol('proto.google.protobuf.DescriptorProto.ReservedRange', null, global);
goog.exportSymbol('proto.google.protobuf.EnumDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.EnumDescriptorProto.EnumReservedRange', null, global);
goog.exportSymbol('proto.google.protobuf.EnumOptions', null, global);
goog.exportSymbol('proto.google.protobuf.EnumValueDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.EnumValueOptions', null, global);
goog.exportSymbol('proto.google.protobuf.ExtensionRangeOptions', null, global);
goog.exportSymbol('proto.google.protobuf.FieldDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.FieldDescriptorProto.Label', null, global);
goog.exportSymbol('proto.google.protobuf.FieldDescriptorProto.Type', null, global);
goog.exportSymbol('proto.google.protobuf.FieldOptions', null, global);
goog.exportSymbol('proto.google.protobuf.FieldOptions.CType', null, global);
goog.exportSymbol('proto.google.protobuf.FieldOptions.JSType', null, global);
goog.exportSymbol('proto.google.protobuf.FileDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.FileDescriptorSet', null, global);
goog.exportSymbol('proto.google.protobuf.FileOptions', null, global);
goog.exportSymbol('proto.google.protobuf.FileOptions.OptimizeMode', null, global);
goog.exportSymbol('proto.google.protobuf.GeneratedCodeInfo', null, global);
goog.exportSymbol('proto.google.protobuf.GeneratedCodeInfo.Annotation', null, global);
goog.exportSymbol('proto.google.protobuf.MessageOptions', null, global);
goog.exportSymbol('proto.google.protobuf.MethodDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.MethodOptions', null, global);
goog.exportSymbol('proto.google.protobuf.MethodOptions.IdempotencyLevel', null, global);
goog.exportSymbol('proto.google.protobuf.OneofDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.OneofOptions', null, global);
goog.exportSymbol('proto.google.protobuf.ServiceDescriptorProto', null, global);
goog.exportSymbol('proto.google.protobuf.ServiceOptions', null, global);
goog.exportSymbol('proto.google.protobuf.SourceCodeInfo', null, global);
goog.exportSymbol('proto.google.protobuf.SourceCodeInfo.Location', null, global);
goog.exportSymbol('proto.google.protobuf.UninterpretedOption', null, global);
goog.exportSymbol('proto.google.protobuf.UninterpretedOption.NamePart', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.FileDescriptorSet = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.FileDescriptorSet.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.FileDescriptorSet, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.FileDescriptorSet.displayName = 'proto.google.protobuf.FileDescriptorSet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.FileDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.FileDescriptorProto.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.FileDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.FileDescriptorProto.displayName = 'proto.google.protobuf.FileDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.DescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.DescriptorProto.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.DescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.DescriptorProto.displayName = 'proto.google.protobuf.DescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.DescriptorProto.ExtensionRange = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.DescriptorProto.ExtensionRange, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.DescriptorProto.ExtensionRange.displayName = 'proto.google.protobuf.DescriptorProto.ExtensionRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.DescriptorProto.ReservedRange = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.DescriptorProto.ReservedRange, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.DescriptorProto.ReservedRange.displayName = 'proto.google.protobuf.DescriptorProto.ReservedRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.ExtensionRangeOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.ExtensionRangeOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.ExtensionRangeOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.ExtensionRangeOptions.displayName = 'proto.google.protobuf.ExtensionRangeOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.ExtensionRangeOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.ExtensionRangeOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.FieldDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.FieldDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.FieldDescriptorProto.displayName = 'proto.google.protobuf.FieldDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.OneofDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.OneofDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.OneofDescriptorProto.displayName = 'proto.google.protobuf.OneofDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.EnumDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.EnumDescriptorProto.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.EnumDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.EnumDescriptorProto.displayName = 'proto.google.protobuf.EnumDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.displayName = 'proto.google.protobuf.EnumDescriptorProto.EnumReservedRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.EnumValueDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.EnumValueDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.EnumValueDescriptorProto.displayName = 'proto.google.protobuf.EnumValueDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.ServiceDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.ServiceDescriptorProto.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.ServiceDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.ServiceDescriptorProto.displayName = 'proto.google.protobuf.ServiceDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.MethodDescriptorProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.MethodDescriptorProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.MethodDescriptorProto.displayName = 'proto.google.protobuf.MethodDescriptorProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.FileOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.FileOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.FileOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.FileOptions.displayName = 'proto.google.protobuf.FileOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.FileOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.FileOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.MessageOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.MessageOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.MessageOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.MessageOptions.displayName = 'proto.google.protobuf.MessageOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.MessageOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.MessageOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.FieldOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.FieldOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.FieldOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.FieldOptions.displayName = 'proto.google.protobuf.FieldOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.FieldOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.FieldOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.OneofOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.OneofOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.OneofOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.OneofOptions.displayName = 'proto.google.protobuf.OneofOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.OneofOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.OneofOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.EnumOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.EnumOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.EnumOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.EnumOptions.displayName = 'proto.google.protobuf.EnumOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.EnumOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.EnumOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.EnumValueOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.EnumValueOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.EnumValueOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.EnumValueOptions.displayName = 'proto.google.protobuf.EnumValueOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.EnumValueOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.EnumValueOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.ServiceOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.ServiceOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.ServiceOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.ServiceOptions.displayName = 'proto.google.protobuf.ServiceOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.ServiceOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.ServiceOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.MethodOptions = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, 500, proto.google.protobuf.MethodOptions.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.MethodOptions, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.MethodOptions.displayName = 'proto.google.protobuf.MethodOptions';
}

/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldInfo>}
 */
proto.google.protobuf.MethodOptions.extensions = {};


/**
 * The extensions registered with this message class. This is a map of
 * extension field number to fieldInfo object.
 *
 * For example:
 *     { 123: {fieldIndex: 123, fieldName: {my_field_name: 0}, ctor: proto.example.MyMessage} }
 *
 * fieldName contains the JsCompiler renamed field name property so that it
 * works in OPTIMIZED mode.
 *
 * @type {!Object<number, jspb.ExtensionFieldBinaryInfo>}
 */
proto.google.protobuf.MethodOptions.extensionsBinary = {};

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.UninterpretedOption = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.UninterpretedOption.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.UninterpretedOption, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.UninterpretedOption.displayName = 'proto.google.protobuf.UninterpretedOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.UninterpretedOption.NamePart = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.UninterpretedOption.NamePart, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.UninterpretedOption.NamePart.displayName = 'proto.google.protobuf.UninterpretedOption.NamePart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.SourceCodeInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.SourceCodeInfo.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.SourceCodeInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.SourceCodeInfo.displayName = 'proto.google.protobuf.SourceCodeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.SourceCodeInfo.Location = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.SourceCodeInfo.Location.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.SourceCodeInfo.Location, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.SourceCodeInfo.Location.displayName = 'proto.google.protobuf.SourceCodeInfo.Location';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.GeneratedCodeInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.GeneratedCodeInfo.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.GeneratedCodeInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.GeneratedCodeInfo.displayName = 'proto.google.protobuf.GeneratedCodeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_, null);
};
goog.inherits(proto.google.protobuf.GeneratedCodeInfo.Annotation, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.GeneratedCodeInfo.Annotation.displayName = 'proto.google.protobuf.GeneratedCodeInfo.Annotation';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.FileDescriptorSet.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.FileDescriptorSet.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.FileDescriptorSet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.FileDescriptorSet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileDescriptorSet.toObject = function(includeInstance, msg) {
  var obj = {
    fileList: googleProtobuf.Message.toObjectList(msg.getFileList(),
    proto.google.protobuf.FileDescriptorProto.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.FileDescriptorSet}
 */
proto.google.protobuf.FileDescriptorSet.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.FileDescriptorSet;
  return proto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.FileDescriptorSet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.FileDescriptorSet}
 */
proto.google.protobuf.FileDescriptorSet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.FileDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader);
      msg.addFile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.FileDescriptorSet.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.FileDescriptorSet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileDescriptorSet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FileDescriptorProto file = 1;
 * @return {!Array<!proto.google.protobuf.FileDescriptorProto>}
 */
proto.google.protobuf.FileDescriptorSet.prototype.getFileList = function() {
  return /** @type{!Array<!proto.google.protobuf.FileDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.FileDescriptorProto, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.FileDescriptorProto>} value
 * @return {!proto.google.protobuf.FileDescriptorSet} returns this
*/
proto.google.protobuf.FileDescriptorSet.prototype.setFileList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.FileDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FileDescriptorProto}
 */
proto.google.protobuf.FileDescriptorSet.prototype.addFile = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.FileDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorSet} returns this
 */
proto.google.protobuf.FileDescriptorSet.prototype.clearFileList = function() {
  return this.setFileList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.FileDescriptorProto.repeatedFields_ = [3,10,11,4,5,6,7];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.FileDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.FileDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.FileDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    pb_package: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    dependencyList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    publicDependencyList: (f = googleProtobuf.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    weakDependencyList: (f = googleProtobuf.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    messageTypeList: googleProtobuf.Message.toObjectList(msg.getMessageTypeList(),
    proto.google.protobuf.DescriptorProto.toObject, includeInstance),
    enumTypeList: googleProtobuf.Message.toObjectList(msg.getEnumTypeList(),
    proto.google.protobuf.EnumDescriptorProto.toObject, includeInstance),
    serviceList: googleProtobuf.Message.toObjectList(msg.getServiceList(),
    proto.google.protobuf.ServiceDescriptorProto.toObject, includeInstance),
    extensionList: googleProtobuf.Message.toObjectList(msg.getExtensionList(),
    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),
    options: (f = msg.getOptions()) && proto.google.protobuf.FileOptions.toObject(includeInstance, f),
    sourceCodeInfo: (f = msg.getSourceCodeInfo()) && proto.google.protobuf.SourceCodeInfo.toObject(includeInstance, f),
    syntax: (f = googleProtobuf.Message.getField(msg, 12)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.FileDescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.FileDescriptorProto;
  return proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.FileDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.FileDescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPackage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addDependency(value);
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPublicDependency(values[i]);
      }
      break;
    case 11:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addWeakDependency(values[i]);
      }
      break;
    case 4:
      var value = new proto.google.protobuf.DescriptorProto;
      reader.readMessage(value,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader);
      msg.addMessageType(value);
      break;
    case 5:
      var value = new proto.google.protobuf.EnumDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader);
      msg.addEnumType(value);
      break;
    case 6:
      var value = new proto.google.protobuf.ServiceDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader);
      msg.addService(value);
      break;
    case 7:
      var value = new proto.google.protobuf.FieldDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 8:
      var value = new proto.google.protobuf.FileOptions;
      reader.readMessage(value,proto.google.protobuf.FileOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 9:
      var value = new proto.google.protobuf.SourceCodeInfo;
      reader.readMessage(value,proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader);
      msg.setSourceCodeInfo(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSyntax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.FileDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.FileDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDependencyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getPublicDependencyList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      10,
      f
    );
  }
  f = message.getWeakDependencyList();
  if (f.length > 0) {
    writer.writeRepeatedInt32(
      11,
      f
    );
  }
  f = message.getMessageTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.protobuf.DescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getEnumTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getServiceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.FileOptions.serializeBinaryToWriter
    );
  }
  f = message.getSourceCodeInfo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string package = 2;
 * @return {string}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getPackage = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setPackage = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearPackage = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileDescriptorProto.prototype.hasPackage = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated string dependency = 3;
 * @return {!Array<string>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getDependencyList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setDependencyList = function(value) {
  return googleProtobuf.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.addDependency = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearDependencyList = function() {
  return this.setDependencyList([]);
};


/**
 * repeated int32 public_dependency = 10;
 * @return {!Array<number>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getPublicDependencyList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setPublicDependencyList = function(value) {
  return googleProtobuf.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.addPublicDependency = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearPublicDependencyList = function() {
  return this.setPublicDependencyList([]);
};


/**
 * repeated int32 weak_dependency = 11;
 * @return {!Array<number>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getWeakDependencyList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setWeakDependencyList = function(value) {
  return googleProtobuf.Message.setField(this, 11, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.addWeakDependency = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearWeakDependencyList = function() {
  return this.setWeakDependencyList([]);
};


/**
 * repeated DescriptorProto message_type = 4;
 * @return {!Array<!proto.google.protobuf.DescriptorProto>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getMessageTypeList = function() {
  return /** @type{!Array<!proto.google.protobuf.DescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto, 4));
};


/**
 * @param {!Array<!proto.google.protobuf.DescriptorProto>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setMessageTypeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.protobuf.DescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.DescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.prototype.addMessageType = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.DescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearMessageTypeList = function() {
  return this.setMessageTypeList([]);
};


/**
 * repeated EnumDescriptorProto enum_type = 5;
 * @return {!Array<!proto.google.protobuf.EnumDescriptorProto>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getEnumTypeList = function() {
  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto, 5));
};


/**
 * @param {!Array<!proto.google.protobuf.EnumDescriptorProto>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setEnumTypeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.protobuf.EnumDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.EnumDescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.prototype.addEnumType = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.protobuf.EnumDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearEnumTypeList = function() {
  return this.setEnumTypeList([]);
};


/**
 * repeated ServiceDescriptorProto service = 6;
 * @return {!Array<!proto.google.protobuf.ServiceDescriptorProto>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getServiceList = function() {
  return /** @type{!Array<!proto.google.protobuf.ServiceDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.ServiceDescriptorProto, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.ServiceDescriptorProto>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setServiceList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.ServiceDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.ServiceDescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.prototype.addService = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.ServiceDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearServiceList = function() {
  return this.setServiceList([]);
};


/**
 * repeated FieldDescriptorProto extension = 7;
 * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 7));
};


/**
 * @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setExtensionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FieldDescriptorProto}
 */
proto.google.protobuf.FileDescriptorProto.prototype.addExtension$ = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * optional FileOptions options = 8;
 * @return {?proto.google.protobuf.FileOptions}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.FileOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.FileOptions, 8));
};


/**
 * @param {?proto.google.protobuf.FileOptions|undefined} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};


/**
 * optional SourceCodeInfo source_code_info = 9;
 * @return {?proto.google.protobuf.SourceCodeInfo}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getSourceCodeInfo = function() {
  return /** @type{?proto.google.protobuf.SourceCodeInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.SourceCodeInfo, 9));
};


/**
 * @param {?proto.google.protobuf.SourceCodeInfo|undefined} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
*/
proto.google.protobuf.FileDescriptorProto.prototype.setSourceCodeInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearSourceCodeInfo = function() {
  return this.setSourceCodeInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileDescriptorProto.prototype.hasSourceCodeInfo = function() {
  return googleProtobuf.Message.getField(this, 9) != null;
};


/**
 * optional string syntax = 12;
 * @return {string}
 */
proto.google.protobuf.FileDescriptorProto.prototype.getSyntax = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.setSyntax = function(value) {
  return googleProtobuf.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileDescriptorProto} returns this
 */
proto.google.protobuf.FileDescriptorProto.prototype.clearSyntax = function() {
  return googleProtobuf.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileDescriptorProto.prototype.hasSyntax = function() {
  return googleProtobuf.Message.getField(this, 12) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.DescriptorProto.repeatedFields_ = [2,6,3,4,5,8,9,10];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.DescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.DescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.DescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    fieldList: googleProtobuf.Message.toObjectList(msg.getFieldList(),
    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),
    extensionList: googleProtobuf.Message.toObjectList(msg.getExtensionList(),
    proto.google.protobuf.FieldDescriptorProto.toObject, includeInstance),
    nestedTypeList: googleProtobuf.Message.toObjectList(msg.getNestedTypeList(),
    proto.google.protobuf.DescriptorProto.toObject, includeInstance),
    enumTypeList: googleProtobuf.Message.toObjectList(msg.getEnumTypeList(),
    proto.google.protobuf.EnumDescriptorProto.toObject, includeInstance),
    extensionRangeList: googleProtobuf.Message.toObjectList(msg.getExtensionRangeList(),
    proto.google.protobuf.DescriptorProto.ExtensionRange.toObject, includeInstance),
    oneofDeclList: googleProtobuf.Message.toObjectList(msg.getOneofDeclList(),
    proto.google.protobuf.OneofDescriptorProto.toObject, includeInstance),
    options: (f = msg.getOptions()) && proto.google.protobuf.MessageOptions.toObject(includeInstance, f),
    reservedRangeList: googleProtobuf.Message.toObjectList(msg.getReservedRangeList(),
    proto.google.protobuf.DescriptorProto.ReservedRange.toObject, includeInstance),
    reservedNameList: (f = googleProtobuf.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.DescriptorProto}
 */
proto.google.protobuf.DescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.DescriptorProto;
  return proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.DescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.DescriptorProto}
 */
proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.FieldDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    case 6:
      var value = new proto.google.protobuf.FieldDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader);
      msg.addExtension$(value);
      break;
    case 3:
      var value = new proto.google.protobuf.DescriptorProto;
      reader.readMessage(value,proto.google.protobuf.DescriptorProto.deserializeBinaryFromReader);
      msg.addNestedType(value);
      break;
    case 4:
      var value = new proto.google.protobuf.EnumDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader);
      msg.addEnumType(value);
      break;
    case 5:
      var value = new proto.google.protobuf.DescriptorProto.ExtensionRange;
      reader.readMessage(value,proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader);
      msg.addExtensionRange(value);
      break;
    case 8:
      var value = new proto.google.protobuf.OneofDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader);
      msg.addOneofDecl(value);
      break;
    case 7:
      var value = new proto.google.protobuf.MessageOptions;
      reader.readMessage(value,proto.google.protobuf.MessageOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 9:
      var value = new proto.google.protobuf.DescriptorProto.ReservedRange;
      reader.readMessage(value,proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader);
      msg.addReservedRange(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addReservedName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.DescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.DescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.DescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getExtensionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getNestedTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.google.protobuf.DescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getEnumTypeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getExtensionRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter
    );
  }
  f = message.getOneofDeclList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.protobuf.MessageOptions.serializeBinaryToWriter
    );
  }
  f = message.getReservedRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter
    );
  }
  f = message.getReservedNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.DescriptorProto.ExtensionRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    end: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    options: (f = msg.getOptions()) && proto.google.protobuf.ExtensionRangeOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.DescriptorProto.ExtensionRange;
  return proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    case 3:
      var value = new proto.google.protobuf.ExtensionRangeOptions;
      reader.readMessage(value,proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 start = 1;
 * @return {number}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getStart = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setStart = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearStart = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasStart = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int32 end = 2;
 * @return {number}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getEnd = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setEnd = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearEnd = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasEnd = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional ExtensionRangeOptions options = 3;
 * @return {?proto.google.protobuf.ExtensionRangeOptions}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.ExtensionRangeOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.ExtensionRangeOptions, 3));
};


/**
 * @param {?proto.google.protobuf.ExtensionRangeOptions|undefined} value
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
*/
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange} returns this
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.ExtensionRange.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.DescriptorProto.ReservedRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.ReservedRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    end: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.DescriptorProto.ReservedRange;
  return proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.DescriptorProto.ReservedRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.DescriptorProto.ReservedRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 start = 1;
 * @return {number}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.getStart = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange} returns this
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.setStart = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange} returns this
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearStart = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasStart = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int32 end = 2;
 * @return {number}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.getEnd = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange} returns this
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.setEnd = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange} returns this
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.clearEnd = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.ReservedRange.prototype.hasEnd = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.DescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated FieldDescriptorProto field = 2;
 * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}
 */
proto.google.protobuf.DescriptorProto.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setFieldList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FieldDescriptorProto}
 */
proto.google.protobuf.DescriptorProto.prototype.addField = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};


/**
 * repeated FieldDescriptorProto extension = 6;
 * @return {!Array<!proto.google.protobuf.FieldDescriptorProto>}
 */
proto.google.protobuf.DescriptorProto.prototype.getExtensionList = function() {
  return /** @type{!Array<!proto.google.protobuf.FieldDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.FieldDescriptorProto, 6));
};


/**
 * @param {!Array<!proto.google.protobuf.FieldDescriptorProto>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setExtensionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.google.protobuf.FieldDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.FieldDescriptorProto}
 */
proto.google.protobuf.DescriptorProto.prototype.addExtension$ = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.google.protobuf.FieldDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearExtensionList = function() {
  return this.setExtensionList([]);
};


/**
 * repeated DescriptorProto nested_type = 3;
 * @return {!Array<!proto.google.protobuf.DescriptorProto>}
 */
proto.google.protobuf.DescriptorProto.prototype.getNestedTypeList = function() {
  return /** @type{!Array<!proto.google.protobuf.DescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.DescriptorProto>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setNestedTypeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.DescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.DescriptorProto}
 */
proto.google.protobuf.DescriptorProto.prototype.addNestedType = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.DescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearNestedTypeList = function() {
  return this.setNestedTypeList([]);
};


/**
 * repeated EnumDescriptorProto enum_type = 4;
 * @return {!Array<!proto.google.protobuf.EnumDescriptorProto>}
 */
proto.google.protobuf.DescriptorProto.prototype.getEnumTypeList = function() {
  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto, 4));
};


/**
 * @param {!Array<!proto.google.protobuf.EnumDescriptorProto>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setEnumTypeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.protobuf.EnumDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.EnumDescriptorProto}
 */
proto.google.protobuf.DescriptorProto.prototype.addEnumType = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.EnumDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearEnumTypeList = function() {
  return this.setEnumTypeList([]);
};


/**
 * repeated ExtensionRange extension_range = 5;
 * @return {!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>}
 */
proto.google.protobuf.DescriptorProto.prototype.getExtensionRangeList = function() {
  return /** @type{!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto.ExtensionRange, 5));
};


/**
 * @param {!Array<!proto.google.protobuf.DescriptorProto.ExtensionRange>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setExtensionRangeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.google.protobuf.DescriptorProto.ExtensionRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.DescriptorProto.ExtensionRange}
 */
proto.google.protobuf.DescriptorProto.prototype.addExtensionRange = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.google.protobuf.DescriptorProto.ExtensionRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearExtensionRangeList = function() {
  return this.setExtensionRangeList([]);
};


/**
 * repeated OneofDescriptorProto oneof_decl = 8;
 * @return {!Array<!proto.google.protobuf.OneofDescriptorProto>}
 */
proto.google.protobuf.DescriptorProto.prototype.getOneofDeclList = function() {
  return /** @type{!Array<!proto.google.protobuf.OneofDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.OneofDescriptorProto, 8));
};


/**
 * @param {!Array<!proto.google.protobuf.OneofDescriptorProto>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setOneofDeclList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.google.protobuf.OneofDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.OneofDescriptorProto}
 */
proto.google.protobuf.DescriptorProto.prototype.addOneofDecl = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.google.protobuf.OneofDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearOneofDeclList = function() {
  return this.setOneofDeclList([]);
};


/**
 * optional MessageOptions options = 7;
 * @return {?proto.google.protobuf.MessageOptions}
 */
proto.google.protobuf.DescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.MessageOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.MessageOptions, 7));
};


/**
 * @param {?proto.google.protobuf.MessageOptions|undefined} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.DescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 7) != null;
};


/**
 * repeated ReservedRange reserved_range = 9;
 * @return {!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>}
 */
proto.google.protobuf.DescriptorProto.prototype.getReservedRangeList = function() {
  return /** @type{!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.DescriptorProto.ReservedRange, 9));
};


/**
 * @param {!Array<!proto.google.protobuf.DescriptorProto.ReservedRange>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
*/
proto.google.protobuf.DescriptorProto.prototype.setReservedRangeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.google.protobuf.DescriptorProto.ReservedRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.DescriptorProto.ReservedRange}
 */
proto.google.protobuf.DescriptorProto.prototype.addReservedRange = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.google.protobuf.DescriptorProto.ReservedRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearReservedRangeList = function() {
  return this.setReservedRangeList([]);
};


/**
 * repeated string reserved_name = 10;
 * @return {!Array<string>}
 */
proto.google.protobuf.DescriptorProto.prototype.getReservedNameList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.setReservedNameList = function(value) {
  return googleProtobuf.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.addReservedName = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.DescriptorProto} returns this
 */
proto.google.protobuf.DescriptorProto.prototype.clearReservedNameList = function() {
  return this.setReservedNameList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.ExtensionRangeOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.ExtensionRangeOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.ExtensionRangeOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.ExtensionRangeOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ExtensionRangeOptions.toObject = function(includeInstance, msg) {
  var obj = {
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.ExtensionRangeOptions.extensions, proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.ExtensionRangeOptions}
 */
proto.google.protobuf.ExtensionRangeOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.ExtensionRangeOptions;
  return proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.ExtensionRangeOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.ExtensionRangeOptions}
 */
proto.google.protobuf.ExtensionRangeOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.ExtensionRangeOptions.extensionsBinary,
        proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension,
        proto.google.protobuf.ExtensionRangeOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.ExtensionRangeOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.ExtensionRangeOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ExtensionRangeOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.ExtensionRangeOptions.extensionsBinary, proto.google.protobuf.ExtensionRangeOptions.prototype.getExtension);
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.ExtensionRangeOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.ExtensionRangeOptions} returns this
*/
proto.google.protobuf.ExtensionRangeOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.ExtensionRangeOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.ExtensionRangeOptions} returns this
 */
proto.google.protobuf.ExtensionRangeOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.FieldDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.FieldDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FieldDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    number: (f = googleProtobuf.Message.getField(msg, 3)) == null ? undefined : f,
    label: (f = googleProtobuf.Message.getField(msg, 4)) == null ? undefined : f,
    type: (f = googleProtobuf.Message.getField(msg, 5)) == null ? undefined : f,
    typeName: (f = googleProtobuf.Message.getField(msg, 6)) == null ? undefined : f,
    extendee: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    defaultValue: (f = googleProtobuf.Message.getField(msg, 7)) == null ? undefined : f,
    oneofIndex: (f = googleProtobuf.Message.getField(msg, 9)) == null ? undefined : f,
    jsonName: (f = googleProtobuf.Message.getField(msg, 10)) == null ? undefined : f,
    options: (f = msg.getOptions()) && proto.google.protobuf.FieldOptions.toObject(includeInstance, f),
    proto3Optional: (f = googleProtobuf.Message.getBooleanField(msg, 17)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.FieldDescriptorProto}
 */
proto.google.protobuf.FieldDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.FieldDescriptorProto;
  return proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.FieldDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.FieldDescriptorProto}
 */
proto.google.protobuf.FieldDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    case 4:
      var value = /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (reader.readEnum());
      msg.setLabel(value);
      break;
    case 5:
      var value = /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTypeName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultValue(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOneofIndex(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonName(value);
      break;
    case 8:
      var value = new proto.google.protobuf.FieldOptions;
      reader.readMessage(value,proto.google.protobuf.FieldOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProto3Optional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.FieldDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FieldDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (googleProtobuf.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (googleProtobuf.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.protobuf.FieldOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.protobuf.FieldDescriptorProto.Type = {
  TYPE_DOUBLE: 1,
  TYPE_FLOAT: 2,
  TYPE_INT64: 3,
  TYPE_UINT64: 4,
  TYPE_INT32: 5,
  TYPE_FIXED64: 6,
  TYPE_FIXED32: 7,
  TYPE_BOOL: 8,
  TYPE_STRING: 9,
  TYPE_GROUP: 10,
  TYPE_MESSAGE: 11,
  TYPE_BYTES: 12,
  TYPE_UINT32: 13,
  TYPE_ENUM: 14,
  TYPE_SFIXED32: 15,
  TYPE_SFIXED64: 16,
  TYPE_SINT32: 17,
  TYPE_SINT64: 18
};

/**
 * @enum {number}
 */
proto.google.protobuf.FieldDescriptorProto.Label = {
  LABEL_OPTIONAL: 1,
  LABEL_REQUIRED: 2,
  LABEL_REPEATED: 3
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int32 number = 3;
 * @return {number}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getNumber = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setNumber = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearNumber = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasNumber = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional Label label = 4;
 * @return {!proto.google.protobuf.FieldDescriptorProto.Label}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getLabel = function() {
  return /** @type {!proto.google.protobuf.FieldDescriptorProto.Label} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 1));
};


/**
 * @param {!proto.google.protobuf.FieldDescriptorProto.Label} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setLabel = function(value) {
  return googleProtobuf.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearLabel = function() {
  return googleProtobuf.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasLabel = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional Type type = 5;
 * @return {!proto.google.protobuf.FieldDescriptorProto.Type}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getType = function() {
  return /** @type {!proto.google.protobuf.FieldDescriptorProto.Type} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 1));
};


/**
 * @param {!proto.google.protobuf.FieldDescriptorProto.Type} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setType = function(value) {
  return googleProtobuf.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearType = function() {
  return googleProtobuf.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasType = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional string type_name = 6;
 * @return {string}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getTypeName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setTypeName = function(value) {
  return googleProtobuf.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearTypeName = function() {
  return googleProtobuf.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasTypeName = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};


/**
 * optional string extendee = 2;
 * @return {string}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getExtendee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setExtendee = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearExtendee = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasExtendee = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string default_value = 7;
 * @return {string}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getDefaultValue = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setDefaultValue = function(value) {
  return googleProtobuf.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearDefaultValue = function() {
  return googleProtobuf.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasDefaultValue = function() {
  return googleProtobuf.Message.getField(this, 7) != null;
};


/**
 * optional int32 oneof_index = 9;
 * @return {number}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getOneofIndex = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setOneofIndex = function(value) {
  return googleProtobuf.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearOneofIndex = function() {
  return googleProtobuf.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasOneofIndex = function() {
  return googleProtobuf.Message.getField(this, 9) != null;
};


/**
 * optional string json_name = 10;
 * @return {string}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getJsonName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setJsonName = function(value) {
  return googleProtobuf.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearJsonName = function() {
  return googleProtobuf.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasJsonName = function() {
  return googleProtobuf.Message.getField(this, 10) != null;
};


/**
 * optional FieldOptions options = 8;
 * @return {?proto.google.protobuf.FieldOptions}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.FieldOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.FieldOptions, 8));
};


/**
 * @param {?proto.google.protobuf.FieldOptions|undefined} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
*/
proto.google.protobuf.FieldDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};


/**
 * optional bool proto3_optional = 17;
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.getProto3Optional = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.setProto3Optional = function(value) {
  return googleProtobuf.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldDescriptorProto} returns this
 */
proto.google.protobuf.FieldDescriptorProto.prototype.clearProto3Optional = function() {
  return googleProtobuf.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldDescriptorProto.prototype.hasProto3Optional = function() {
  return googleProtobuf.Message.getField(this, 17) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.OneofDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.OneofDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.OneofDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    options: (f = msg.getOptions()) && proto.google.protobuf.OneofOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.OneofDescriptorProto}
 */
proto.google.protobuf.OneofDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.OneofDescriptorProto;
  return proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.OneofDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.OneofDescriptorProto}
 */
proto.google.protobuf.OneofDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.OneofOptions;
      reader.readMessage(value,proto.google.protobuf.OneofOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.OneofDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.OneofDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.protobuf.OneofOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.OneofDescriptorProto} returns this
 */
proto.google.protobuf.OneofDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.OneofDescriptorProto} returns this
 */
proto.google.protobuf.OneofDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional OneofOptions options = 2;
 * @return {?proto.google.protobuf.OneofOptions}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.OneofOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.OneofOptions, 2));
};


/**
 * @param {?proto.google.protobuf.OneofOptions|undefined} value
 * @return {!proto.google.protobuf.OneofDescriptorProto} returns this
*/
proto.google.protobuf.OneofDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.OneofDescriptorProto} returns this
 */
proto.google.protobuf.OneofDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.OneofDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.EnumDescriptorProto.repeatedFields_ = [2,4,5];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.EnumDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.EnumDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    valueList: googleProtobuf.Message.toObjectList(msg.getValueList(),
    proto.google.protobuf.EnumValueDescriptorProto.toObject, includeInstance),
    options: (f = msg.getOptions()) && proto.google.protobuf.EnumOptions.toObject(includeInstance, f),
    reservedRangeList: googleProtobuf.Message.toObjectList(msg.getReservedRangeList(),
    proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject, includeInstance),
    reservedNameList: (f = googleProtobuf.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.EnumDescriptorProto}
 */
proto.google.protobuf.EnumDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.EnumDescriptorProto;
  return proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.EnumDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.EnumDescriptorProto}
 */
proto.google.protobuf.EnumDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.EnumValueDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader);
      msg.addValue(value);
      break;
    case 3:
      var value = new proto.google.protobuf.EnumOptions;
      reader.readMessage(value,proto.google.protobuf.EnumOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 4:
      var value = new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;
      reader.readMessage(value,proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader);
      msg.addReservedRange(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addReservedName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.EnumDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValueList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.EnumOptions.serializeBinaryToWriter
    );
  }
  f = message.getReservedRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter
    );
  }
  f = message.getReservedNameList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    start: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    end: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.EnumDescriptorProto.EnumReservedRange;
  return proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 start = 1;
 * @return {number}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getStart = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} returns this
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setStart = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} returns this
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearStart = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasStart = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int32 end = 2;
 * @return {number}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.getEnd = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} returns this
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.setEnd = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange} returns this
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.clearEnd = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumDescriptorProto.EnumReservedRange.prototype.hasEnd = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated EnumValueDescriptorProto value = 2;
 * @return {!Array<!proto.google.protobuf.EnumValueDescriptorProto>}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.getValueList = function() {
  return /** @type{!Array<!proto.google.protobuf.EnumValueDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumValueDescriptorProto, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.EnumValueDescriptorProto>} value
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
*/
proto.google.protobuf.EnumDescriptorProto.prototype.setValueList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.EnumValueDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.EnumValueDescriptorProto}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.addValue = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.EnumValueDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.clearValueList = function() {
  return this.setValueList([]);
};


/**
 * optional EnumOptions options = 3;
 * @return {?proto.google.protobuf.EnumOptions}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.EnumOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.EnumOptions, 3));
};


/**
 * @param {?proto.google.protobuf.EnumOptions|undefined} value
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
*/
proto.google.protobuf.EnumDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * repeated EnumReservedRange reserved_range = 4;
 * @return {!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.getReservedRangeList = function() {
  return /** @type{!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, 4));
};


/**
 * @param {!Array<!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange>} value
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
*/
proto.google.protobuf.EnumDescriptorProto.prototype.setReservedRangeList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.EnumDescriptorProto.EnumReservedRange}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.addReservedRange = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.protobuf.EnumDescriptorProto.EnumReservedRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.clearReservedRangeList = function() {
  return this.setReservedRangeList([]);
};


/**
 * repeated string reserved_name = 5;
 * @return {!Array<string>}
 */
proto.google.protobuf.EnumDescriptorProto.prototype.getReservedNameList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.setReservedNameList = function(value) {
  return googleProtobuf.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.addReservedName = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.EnumDescriptorProto} returns this
 */
proto.google.protobuf.EnumDescriptorProto.prototype.clearReservedNameList = function() {
  return this.setReservedNameList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.EnumValueDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.EnumValueDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumValueDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    number: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    options: (f = msg.getOptions()) && proto.google.protobuf.EnumValueOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.EnumValueDescriptorProto}
 */
proto.google.protobuf.EnumValueDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.EnumValueDescriptorProto;
  return proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.EnumValueDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.EnumValueDescriptorProto}
 */
proto.google.protobuf.EnumValueDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumber(value);
      break;
    case 3:
      var value = new proto.google.protobuf.EnumValueOptions;
      reader.readMessage(value,proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.EnumValueDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumValueDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int32 number = 2;
 * @return {number}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.getNumber = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.setNumber = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.clearNumber = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.hasNumber = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional EnumValueOptions options = 3;
 * @return {?proto.google.protobuf.EnumValueOptions}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.EnumValueOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.EnumValueOptions, 3));
};


/**
 * @param {?proto.google.protobuf.EnumValueOptions|undefined} value
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
*/
proto.google.protobuf.EnumValueDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.EnumValueDescriptorProto} returns this
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumValueDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.ServiceDescriptorProto.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.ServiceDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.ServiceDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ServiceDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    methodList: googleProtobuf.Message.toObjectList(msg.getMethodList(),
    proto.google.protobuf.MethodDescriptorProto.toObject, includeInstance),
    options: (f = msg.getOptions()) && proto.google.protobuf.ServiceOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.ServiceDescriptorProto}
 */
proto.google.protobuf.ServiceDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.ServiceDescriptorProto;
  return proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.ServiceDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.ServiceDescriptorProto}
 */
proto.google.protobuf.ServiceDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.protobuf.MethodDescriptorProto;
      reader.readMessage(value,proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader);
      msg.addMethod(value);
      break;
    case 3:
      var value = new proto.google.protobuf.ServiceOptions;
      reader.readMessage(value,proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.ServiceDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ServiceDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethodList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.protobuf.ServiceOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated MethodDescriptorProto method = 2;
 * @return {!Array<!proto.google.protobuf.MethodDescriptorProto>}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.getMethodList = function() {
  return /** @type{!Array<!proto.google.protobuf.MethodDescriptorProto>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.MethodDescriptorProto, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.MethodDescriptorProto>} value
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
*/
proto.google.protobuf.ServiceDescriptorProto.prototype.setMethodList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.MethodDescriptorProto=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.MethodDescriptorProto}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.addMethod = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.MethodDescriptorProto, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.clearMethodList = function() {
  return this.setMethodList([]);
};


/**
 * optional ServiceOptions options = 3;
 * @return {?proto.google.protobuf.ServiceOptions}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.ServiceOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.ServiceOptions, 3));
};


/**
 * @param {?proto.google.protobuf.ServiceOptions|undefined} value
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
*/
proto.google.protobuf.ServiceDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.ServiceDescriptorProto} returns this
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.ServiceDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.MethodDescriptorProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.MethodDescriptorProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MethodDescriptorProto.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    inputType: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    outputType: (f = googleProtobuf.Message.getField(msg, 3)) == null ? undefined : f,
    options: (f = msg.getOptions()) && proto.google.protobuf.MethodOptions.toObject(includeInstance, f),
    clientStreaming: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 5, false),
    serverStreaming: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.MethodDescriptorProto}
 */
proto.google.protobuf.MethodDescriptorProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.MethodDescriptorProto;
  return proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.MethodDescriptorProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.MethodDescriptorProto}
 */
proto.google.protobuf.MethodDescriptorProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputType(value);
      break;
    case 4:
      var value = new proto.google.protobuf.MethodOptions;
      reader.readMessage(value,proto.google.protobuf.MethodOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClientStreaming(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setServerStreaming(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.MethodDescriptorProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MethodDescriptorProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.protobuf.MethodOptions.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.setName = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearName = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasName = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string input_type = 2;
 * @return {string}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getInputType = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.setInputType = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearInputType = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasInputType = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string output_type = 3;
 * @return {string}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getOutputType = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.setOutputType = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearOutputType = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasOutputType = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional MethodOptions options = 4;
 * @return {?proto.google.protobuf.MethodOptions}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getOptions = function() {
  return /** @type{?proto.google.protobuf.MethodOptions} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.protobuf.MethodOptions, 4));
};


/**
 * @param {?proto.google.protobuf.MethodOptions|undefined} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
*/
proto.google.protobuf.MethodDescriptorProto.prototype.setOptions = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasOptions = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional bool client_streaming = 5;
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getClientStreaming = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.setClientStreaming = function(value) {
  return googleProtobuf.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearClientStreaming = function() {
  return googleProtobuf.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasClientStreaming = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional bool server_streaming = 6;
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.getServerStreaming = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.setServerStreaming = function(value) {
  return googleProtobuf.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodDescriptorProto} returns this
 */
proto.google.protobuf.MethodDescriptorProto.prototype.clearServerStreaming = function() {
  return googleProtobuf.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodDescriptorProto.prototype.hasServerStreaming = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.FileOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.FileOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.FileOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.FileOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    javaPackage: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    javaOuterClassname: (f = googleProtobuf.Message.getField(msg, 8)) == null ? undefined : f,
    javaMultipleFiles: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 10, false),
    javaGenerateEqualsAndHash: (f = googleProtobuf.Message.getBooleanField(msg, 20)) == null ? undefined : f,
    javaStringCheckUtf8: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 27, false),
    optimizeFor: googleProtobuf.Message.getFieldWithDefault(msg, 9, 1),
    goPackage: (f = googleProtobuf.Message.getField(msg, 11)) == null ? undefined : f,
    ccGenericServices: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 16, false),
    javaGenericServices: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 17, false),
    pyGenericServices: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 18, false),
    phpGenericServices: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 42, false),
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 23, false),
    ccEnableArenas: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 31, true),
    objcClassPrefix: (f = googleProtobuf.Message.getField(msg, 36)) == null ? undefined : f,
    csharpNamespace: (f = googleProtobuf.Message.getField(msg, 37)) == null ? undefined : f,
    swiftPrefix: (f = googleProtobuf.Message.getField(msg, 39)) == null ? undefined : f,
    phpClassPrefix: (f = googleProtobuf.Message.getField(msg, 40)) == null ? undefined : f,
    phpNamespace: (f = googleProtobuf.Message.getField(msg, 41)) == null ? undefined : f,
    phpMetadataNamespace: (f = googleProtobuf.Message.getField(msg, 44)) == null ? undefined : f,
    rubyPackage: (f = googleProtobuf.Message.getField(msg, 45)) == null ? undefined : f,
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.FileOptions.extensions, proto.google.protobuf.FileOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.FileOptions}
 */
proto.google.protobuf.FileOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.FileOptions;
  return proto.google.protobuf.FileOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.FileOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.FileOptions}
 */
proto.google.protobuf.FileOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJavaPackage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setJavaOuterClassname(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJavaMultipleFiles(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJavaGenerateEqualsAndHash(value);
      break;
    case 27:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJavaStringCheckUtf8(value);
      break;
    case 9:
      var value = /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (reader.readEnum());
      msg.setOptimizeFor(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoPackage(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcGenericServices(value);
      break;
    case 17:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJavaGenericServices(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPyGenericServices(value);
      break;
    case 42:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPhpGenericServices(value);
      break;
    case 23:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 31:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCcEnableArenas(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setObjcClassPrefix(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setCsharpNamespace(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setSwiftPrefix(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhpClassPrefix(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhpNamespace(value);
      break;
    case 44:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhpMetadataNamespace(value);
      break;
    case 45:
      var value = /** @type {string} */ (reader.readString());
      msg.setRubyPackage(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.FileOptions.extensionsBinary,
        proto.google.protobuf.FileOptions.prototype.getExtension,
        proto.google.protobuf.FileOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.FileOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.FileOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.FileOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FileOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 20));
  if (f != null) {
    writer.writeBool(
      20,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 27));
  if (f != null) {
    writer.writeBool(
      27,
      f
    );
  }
  f = /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (googleProtobuf.Message.getField(message, 9));
  if (f != null) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 16));
  if (f != null) {
    writer.writeBool(
      16,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 17));
  if (f != null) {
    writer.writeBool(
      17,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 18));
  if (f != null) {
    writer.writeBool(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 42));
  if (f != null) {
    writer.writeBool(
      42,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 23));
  if (f != null) {
    writer.writeBool(
      23,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 31));
  if (f != null) {
    writer.writeBool(
      31,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 36));
  if (f != null) {
    writer.writeString(
      36,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 37));
  if (f != null) {
    writer.writeString(
      37,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 39));
  if (f != null) {
    writer.writeString(
      39,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 40));
  if (f != null) {
    writer.writeString(
      40,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 41));
  if (f != null) {
    writer.writeString(
      41,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 44));
  if (f != null) {
    writer.writeString(
      44,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 45));
  if (f != null) {
    writer.writeString(
      45,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.FileOptions.extensionsBinary, proto.google.protobuf.FileOptions.prototype.getExtension);
};


/**
 * @enum {number}
 */
proto.google.protobuf.FileOptions.OptimizeMode = {
  SPEED: 1,
  CODE_SIZE: 2,
  LITE_RUNTIME: 3
};

/**
 * optional string java_package = 1;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getJavaPackage = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaPackage = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaPackage = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaPackage = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string java_outer_classname = 8;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getJavaOuterClassname = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaOuterClassname = function(value) {
  return googleProtobuf.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaOuterClassname = function() {
  return googleProtobuf.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaOuterClassname = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};


/**
 * optional bool java_multiple_files = 10;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getJavaMultipleFiles = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaMultipleFiles = function(value) {
  return googleProtobuf.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaMultipleFiles = function() {
  return googleProtobuf.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaMultipleFiles = function() {
  return googleProtobuf.Message.getField(this, 10) != null;
};


/**
 * optional bool java_generate_equals_and_hash = 20;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getJavaGenerateEqualsAndHash = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 20, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaGenerateEqualsAndHash = function(value) {
  return googleProtobuf.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaGenerateEqualsAndHash = function() {
  return googleProtobuf.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaGenerateEqualsAndHash = function() {
  return googleProtobuf.Message.getField(this, 20) != null;
};


/**
 * optional bool java_string_check_utf8 = 27;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getJavaStringCheckUtf8 = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 27, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaStringCheckUtf8 = function(value) {
  return googleProtobuf.Message.setField(this, 27, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaStringCheckUtf8 = function() {
  return googleProtobuf.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaStringCheckUtf8 = function() {
  return googleProtobuf.Message.getField(this, 27) != null;
};


/**
 * optional OptimizeMode optimize_for = 9;
 * @return {!proto.google.protobuf.FileOptions.OptimizeMode}
 */
proto.google.protobuf.FileOptions.prototype.getOptimizeFor = function() {
  return /** @type {!proto.google.protobuf.FileOptions.OptimizeMode} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, 1));
};


/**
 * @param {!proto.google.protobuf.FileOptions.OptimizeMode} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setOptimizeFor = function(value) {
  return googleProtobuf.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearOptimizeFor = function() {
  return googleProtobuf.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasOptimizeFor = function() {
  return googleProtobuf.Message.getField(this, 9) != null;
};


/**
 * optional string go_package = 11;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getGoPackage = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setGoPackage = function(value) {
  return googleProtobuf.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearGoPackage = function() {
  return googleProtobuf.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasGoPackage = function() {
  return googleProtobuf.Message.getField(this, 11) != null;
};


/**
 * optional bool cc_generic_services = 16;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getCcGenericServices = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setCcGenericServices = function(value) {
  return googleProtobuf.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearCcGenericServices = function() {
  return googleProtobuf.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasCcGenericServices = function() {
  return googleProtobuf.Message.getField(this, 16) != null;
};


/**
 * optional bool java_generic_services = 17;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getJavaGenericServices = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 17, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setJavaGenericServices = function(value) {
  return googleProtobuf.Message.setField(this, 17, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearJavaGenericServices = function() {
  return googleProtobuf.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasJavaGenericServices = function() {
  return googleProtobuf.Message.getField(this, 17) != null;
};


/**
 * optional bool py_generic_services = 18;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getPyGenericServices = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 18, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setPyGenericServices = function(value) {
  return googleProtobuf.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearPyGenericServices = function() {
  return googleProtobuf.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasPyGenericServices = function() {
  return googleProtobuf.Message.getField(this, 18) != null;
};


/**
 * optional bool php_generic_services = 42;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getPhpGenericServices = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 42, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setPhpGenericServices = function(value) {
  return googleProtobuf.Message.setField(this, 42, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearPhpGenericServices = function() {
  return googleProtobuf.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasPhpGenericServices = function() {
  return googleProtobuf.Message.getField(this, 42) != null;
};


/**
 * optional bool deprecated = 23;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 23, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 23, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 23) != null;
};


/**
 * optional bool cc_enable_arenas = 31;
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.getCcEnableArenas = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 31, true));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setCcEnableArenas = function(value) {
  return googleProtobuf.Message.setField(this, 31, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearCcEnableArenas = function() {
  return googleProtobuf.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasCcEnableArenas = function() {
  return googleProtobuf.Message.getField(this, 31) != null;
};


/**
 * optional string objc_class_prefix = 36;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getObjcClassPrefix = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 36, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setObjcClassPrefix = function(value) {
  return googleProtobuf.Message.setField(this, 36, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearObjcClassPrefix = function() {
  return googleProtobuf.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasObjcClassPrefix = function() {
  return googleProtobuf.Message.getField(this, 36) != null;
};


/**
 * optional string csharp_namespace = 37;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getCsharpNamespace = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setCsharpNamespace = function(value) {
  return googleProtobuf.Message.setField(this, 37, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearCsharpNamespace = function() {
  return googleProtobuf.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasCsharpNamespace = function() {
  return googleProtobuf.Message.getField(this, 37) != null;
};


/**
 * optional string swift_prefix = 39;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getSwiftPrefix = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 39, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setSwiftPrefix = function(value) {
  return googleProtobuf.Message.setField(this, 39, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearSwiftPrefix = function() {
  return googleProtobuf.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasSwiftPrefix = function() {
  return googleProtobuf.Message.getField(this, 39) != null;
};


/**
 * optional string php_class_prefix = 40;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getPhpClassPrefix = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setPhpClassPrefix = function(value) {
  return googleProtobuf.Message.setField(this, 40, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearPhpClassPrefix = function() {
  return googleProtobuf.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasPhpClassPrefix = function() {
  return googleProtobuf.Message.getField(this, 40) != null;
};


/**
 * optional string php_namespace = 41;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getPhpNamespace = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 41, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setPhpNamespace = function(value) {
  return googleProtobuf.Message.setField(this, 41, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearPhpNamespace = function() {
  return googleProtobuf.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasPhpNamespace = function() {
  return googleProtobuf.Message.getField(this, 41) != null;
};


/**
 * optional string php_metadata_namespace = 44;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getPhpMetadataNamespace = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 44, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setPhpMetadataNamespace = function(value) {
  return googleProtobuf.Message.setField(this, 44, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearPhpMetadataNamespace = function() {
  return googleProtobuf.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasPhpMetadataNamespace = function() {
  return googleProtobuf.Message.getField(this, 44) != null;
};


/**
 * optional string ruby_package = 45;
 * @return {string}
 */
proto.google.protobuf.FileOptions.prototype.getRubyPackage = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 45, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.setRubyPackage = function(value) {
  return googleProtobuf.Message.setField(this, 45, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearRubyPackage = function() {
  return googleProtobuf.Message.setField(this, 45, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FileOptions.prototype.hasRubyPackage = function() {
  return googleProtobuf.Message.getField(this, 45) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.FileOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.FileOptions} returns this
*/
proto.google.protobuf.FileOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.FileOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FileOptions} returns this
 */
proto.google.protobuf.FileOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.MessageOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.MessageOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.MessageOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.MessageOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MessageOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageSetWireFormat: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false),
    noStandardDescriptorAccessor: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false),
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false),
    mapEntry: (f = googleProtobuf.Message.getBooleanField(msg, 7)) == null ? undefined : f,
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.MessageOptions.extensions, proto.google.protobuf.MessageOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.MessageOptions}
 */
proto.google.protobuf.MessageOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.MessageOptions;
  return proto.google.protobuf.MessageOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.MessageOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.MessageOptions}
 */
proto.google.protobuf.MessageOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMessageSetWireFormat(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoStandardDescriptorAccessor(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMapEntry(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.MessageOptions.extensionsBinary,
        proto.google.protobuf.MessageOptions.prototype.getExtension,
        proto.google.protobuf.MessageOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.MessageOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.MessageOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.MessageOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MessageOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.MessageOptions.extensionsBinary, proto.google.protobuf.MessageOptions.prototype.getExtension);
};


/**
 * optional bool message_set_wire_format = 1;
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.getMessageSetWireFormat = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.setMessageSetWireFormat = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.clearMessageSetWireFormat = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.hasMessageSetWireFormat = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional bool no_standard_descriptor_accessor = 2;
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.getNoStandardDescriptorAccessor = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.setNoStandardDescriptorAccessor = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.clearNoStandardDescriptorAccessor = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.hasNoStandardDescriptorAccessor = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional bool deprecated = 3;
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional bool map_entry = 7;
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.getMapEntry = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.setMapEntry = function(value) {
  return googleProtobuf.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.clearMapEntry = function() {
  return googleProtobuf.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MessageOptions.prototype.hasMapEntry = function() {
  return googleProtobuf.Message.getField(this, 7) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.MessageOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.MessageOptions} returns this
*/
proto.google.protobuf.MessageOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.MessageOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.MessageOptions} returns this
 */
proto.google.protobuf.MessageOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.FieldOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.FieldOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.FieldOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.FieldOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FieldOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    ctype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    packed: (f = googleProtobuf.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    jstype: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    lazy: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 5, false),
    unverifiedLazy: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 15, false),
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false),
    weak: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 10, false),
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.FieldOptions.extensions, proto.google.protobuf.FieldOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.FieldOptions}
 */
proto.google.protobuf.FieldOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.FieldOptions;
  return proto.google.protobuf.FieldOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.FieldOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.FieldOptions}
 */
proto.google.protobuf.FieldOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.protobuf.FieldOptions.CType} */ (reader.readEnum());
      msg.setCtype(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPacked(value);
      break;
    case 6:
      var value = /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (reader.readEnum());
      msg.setJstype(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLazy(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnverifiedLazy(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWeak(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.FieldOptions.extensionsBinary,
        proto.google.protobuf.FieldOptions.prototype.getExtension,
        proto.google.protobuf.FieldOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.FieldOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.FieldOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.FieldOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.FieldOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!proto.google.protobuf.FieldOptions.CType} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (googleProtobuf.Message.getField(message, 6));
  if (f != null) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.FieldOptions.extensionsBinary, proto.google.protobuf.FieldOptions.prototype.getExtension);
};


/**
 * @enum {number}
 */
proto.google.protobuf.FieldOptions.CType = {
  STRING: 0,
  CORD: 1,
  STRING_PIECE: 2
};

/**
 * @enum {number}
 */
proto.google.protobuf.FieldOptions.JSType = {
  JS_NORMAL: 0,
  JS_STRING: 1,
  JS_NUMBER: 2
};

/**
 * optional CType ctype = 1;
 * @return {!proto.google.protobuf.FieldOptions.CType}
 */
proto.google.protobuf.FieldOptions.prototype.getCtype = function() {
  return /** @type {!proto.google.protobuf.FieldOptions.CType} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.google.protobuf.FieldOptions.CType} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setCtype = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearCtype = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasCtype = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional bool packed = 2;
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.getPacked = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setPacked = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearPacked = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasPacked = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional JSType jstype = 6;
 * @return {!proto.google.protobuf.FieldOptions.JSType}
 */
proto.google.protobuf.FieldOptions.prototype.getJstype = function() {
  return /** @type {!proto.google.protobuf.FieldOptions.JSType} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.google.protobuf.FieldOptions.JSType} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setJstype = function(value) {
  return googleProtobuf.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearJstype = function() {
  return googleProtobuf.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasJstype = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};


/**
 * optional bool lazy = 5;
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.getLazy = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setLazy = function(value) {
  return googleProtobuf.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearLazy = function() {
  return googleProtobuf.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasLazy = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional bool unverified_lazy = 15;
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.getUnverifiedLazy = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setUnverifiedLazy = function(value) {
  return googleProtobuf.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearUnverifiedLazy = function() {
  return googleProtobuf.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasUnverifiedLazy = function() {
  return googleProtobuf.Message.getField(this, 15) != null;
};


/**
 * optional bool deprecated = 3;
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional bool weak = 10;
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.getWeak = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.setWeak = function(value) {
  return googleProtobuf.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearWeak = function() {
  return googleProtobuf.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.FieldOptions.prototype.hasWeak = function() {
  return googleProtobuf.Message.getField(this, 10) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.FieldOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.FieldOptions} returns this
*/
proto.google.protobuf.FieldOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.FieldOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.FieldOptions} returns this
 */
proto.google.protobuf.FieldOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.OneofOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.OneofOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.OneofOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.OneofOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.OneofOptions.toObject = function(includeInstance, msg) {
  var obj = {
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.OneofOptions.extensions, proto.google.protobuf.OneofOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.OneofOptions}
 */
proto.google.protobuf.OneofOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.OneofOptions;
  return proto.google.protobuf.OneofOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.OneofOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.OneofOptions}
 */
proto.google.protobuf.OneofOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.OneofOptions.extensionsBinary,
        proto.google.protobuf.OneofOptions.prototype.getExtension,
        proto.google.protobuf.OneofOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.OneofOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.OneofOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.OneofOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.OneofOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.OneofOptions.extensionsBinary, proto.google.protobuf.OneofOptions.prototype.getExtension);
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.OneofOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.OneofOptions} returns this
*/
proto.google.protobuf.OneofOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.OneofOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.OneofOptions} returns this
 */
proto.google.protobuf.OneofOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.EnumOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.EnumOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.EnumOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.EnumOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    allowAlias: (f = googleProtobuf.Message.getBooleanField(msg, 2)) == null ? undefined : f,
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false),
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.EnumOptions.extensions, proto.google.protobuf.EnumOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.EnumOptions}
 */
proto.google.protobuf.EnumOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.EnumOptions;
  return proto.google.protobuf.EnumOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.EnumOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.EnumOptions}
 */
proto.google.protobuf.EnumOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAllowAlias(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.EnumOptions.extensionsBinary,
        proto.google.protobuf.EnumOptions.prototype.getExtension,
        proto.google.protobuf.EnumOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.EnumOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.EnumOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.EnumOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.EnumOptions.extensionsBinary, proto.google.protobuf.EnumOptions.prototype.getExtension);
};


/**
 * optional bool allow_alias = 2;
 * @return {boolean}
 */
proto.google.protobuf.EnumOptions.prototype.getAllowAlias = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.EnumOptions} returns this
 */
proto.google.protobuf.EnumOptions.prototype.setAllowAlias = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumOptions} returns this
 */
proto.google.protobuf.EnumOptions.prototype.clearAllowAlias = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumOptions.prototype.hasAllowAlias = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional bool deprecated = 3;
 * @return {boolean}
 */
proto.google.protobuf.EnumOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.EnumOptions} returns this
 */
proto.google.protobuf.EnumOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumOptions} returns this
 */
proto.google.protobuf.EnumOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.EnumOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.EnumOptions} returns this
*/
proto.google.protobuf.EnumOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.EnumOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.EnumOptions} returns this
 */
proto.google.protobuf.EnumOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.EnumValueOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.EnumValueOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.EnumValueOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.EnumValueOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumValueOptions.toObject = function(includeInstance, msg) {
  var obj = {
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false),
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.EnumValueOptions.extensions, proto.google.protobuf.EnumValueOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.EnumValueOptions}
 */
proto.google.protobuf.EnumValueOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.EnumValueOptions;
  return proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.EnumValueOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.EnumValueOptions}
 */
proto.google.protobuf.EnumValueOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.EnumValueOptions.extensionsBinary,
        proto.google.protobuf.EnumValueOptions.prototype.getExtension,
        proto.google.protobuf.EnumValueOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.EnumValueOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.EnumValueOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.EnumValueOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.EnumValueOptions.extensionsBinary, proto.google.protobuf.EnumValueOptions.prototype.getExtension);
};


/**
 * optional bool deprecated = 1;
 * @return {boolean}
 */
proto.google.protobuf.EnumValueOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.EnumValueOptions} returns this
 */
proto.google.protobuf.EnumValueOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.EnumValueOptions} returns this
 */
proto.google.protobuf.EnumValueOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.EnumValueOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.EnumValueOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.EnumValueOptions} returns this
*/
proto.google.protobuf.EnumValueOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.EnumValueOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.EnumValueOptions} returns this
 */
proto.google.protobuf.EnumValueOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.ServiceOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.ServiceOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.ServiceOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.ServiceOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ServiceOptions.toObject = function(includeInstance, msg) {
  var obj = {
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 33, false),
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.ServiceOptions.extensions, proto.google.protobuf.ServiceOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.ServiceOptions}
 */
proto.google.protobuf.ServiceOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.ServiceOptions;
  return proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.ServiceOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.ServiceOptions}
 */
proto.google.protobuf.ServiceOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.ServiceOptions.extensionsBinary,
        proto.google.protobuf.ServiceOptions.prototype.getExtension,
        proto.google.protobuf.ServiceOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.ServiceOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.ServiceOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.ServiceOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.ServiceOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 33));
  if (f != null) {
    writer.writeBool(
      33,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.ServiceOptions.extensionsBinary, proto.google.protobuf.ServiceOptions.prototype.getExtension);
};


/**
 * optional bool deprecated = 33;
 * @return {boolean}
 */
proto.google.protobuf.ServiceOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.ServiceOptions} returns this
 */
proto.google.protobuf.ServiceOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.ServiceOptions} returns this
 */
proto.google.protobuf.ServiceOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.ServiceOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 33) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.ServiceOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.ServiceOptions} returns this
*/
proto.google.protobuf.ServiceOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.ServiceOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.ServiceOptions} returns this
 */
proto.google.protobuf.ServiceOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.MethodOptions.repeatedFields_ = [999];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.MethodOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.MethodOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.MethodOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MethodOptions.toObject = function(includeInstance, msg) {
  var obj = {
    deprecated: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 33, false),
    idempotencyLevel: googleProtobuf.Message.getFieldWithDefault(msg, 34, 0),
    uninterpretedOptionList: googleProtobuf.Message.toObjectList(msg.getUninterpretedOptionList(),
    proto.google.protobuf.UninterpretedOption.toObject, includeInstance)
  };

  googleProtobuf.Message.toObjectExtension(/** @type {!jspb.Message} */ (msg), obj,
      proto.google.protobuf.MethodOptions.extensions, proto.google.protobuf.MethodOptions.prototype.getExtension,
      includeInstance);
  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.MethodOptions}
 */
proto.google.protobuf.MethodOptions.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.MethodOptions;
  return proto.google.protobuf.MethodOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.MethodOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.MethodOptions}
 */
proto.google.protobuf.MethodOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 33:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 34:
      var value = /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (reader.readEnum());
      msg.setIdempotencyLevel(value);
      break;
    case 999:
      var value = new proto.google.protobuf.UninterpretedOption;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader);
      msg.addUninterpretedOption(value);
      break;
    default:
      googleProtobuf.Message.readBinaryExtension(msg, reader,
        proto.google.protobuf.MethodOptions.extensionsBinary,
        proto.google.protobuf.MethodOptions.prototype.getExtension,
        proto.google.protobuf.MethodOptions.prototype.setExtension);
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.MethodOptions.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.MethodOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.MethodOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.MethodOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 33));
  if (f != null) {
    writer.writeBool(
      33,
      f
    );
  }
  f = /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (googleProtobuf.Message.getField(message, 34));
  if (f != null) {
    writer.writeEnum(
      34,
      f
    );
  }
  f = message.getUninterpretedOptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      999,
      f,
      proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter
    );
  }
  googleProtobuf.Message.serializeBinaryExtensions(message, writer,
    proto.google.protobuf.MethodOptions.extensionsBinary, proto.google.protobuf.MethodOptions.prototype.getExtension);
};


/**
 * @enum {number}
 */
proto.google.protobuf.MethodOptions.IdempotencyLevel = {
  IDEMPOTENCY_UNKNOWN: 0,
  NO_SIDE_EFFECTS: 1,
  IDEMPOTENT: 2
};

/**
 * optional bool deprecated = 33;
 * @return {boolean}
 */
proto.google.protobuf.MethodOptions.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 33, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.MethodOptions} returns this
 */
proto.google.protobuf.MethodOptions.prototype.setDeprecated = function(value) {
  return googleProtobuf.Message.setField(this, 33, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodOptions} returns this
 */
proto.google.protobuf.MethodOptions.prototype.clearDeprecated = function() {
  return googleProtobuf.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodOptions.prototype.hasDeprecated = function() {
  return googleProtobuf.Message.getField(this, 33) != null;
};


/**
 * optional IdempotencyLevel idempotency_level = 34;
 * @return {!proto.google.protobuf.MethodOptions.IdempotencyLevel}
 */
proto.google.protobuf.MethodOptions.prototype.getIdempotencyLevel = function() {
  return /** @type {!proto.google.protobuf.MethodOptions.IdempotencyLevel} */ (googleProtobuf.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {!proto.google.protobuf.MethodOptions.IdempotencyLevel} value
 * @return {!proto.google.protobuf.MethodOptions} returns this
 */
proto.google.protobuf.MethodOptions.prototype.setIdempotencyLevel = function(value) {
  return googleProtobuf.Message.setField(this, 34, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.MethodOptions} returns this
 */
proto.google.protobuf.MethodOptions.prototype.clearIdempotencyLevel = function() {
  return googleProtobuf.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.MethodOptions.prototype.hasIdempotencyLevel = function() {
  return googleProtobuf.Message.getField(this, 34) != null;
};


/**
 * repeated UninterpretedOption uninterpreted_option = 999;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption>}
 */
proto.google.protobuf.MethodOptions.prototype.getUninterpretedOptionList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption, 999));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption>} value
 * @return {!proto.google.protobuf.MethodOptions} returns this
*/
proto.google.protobuf.MethodOptions.prototype.setUninterpretedOptionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 999, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.MethodOptions.prototype.addUninterpretedOption = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 999, opt_value, proto.google.protobuf.UninterpretedOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.MethodOptions} returns this
 */
proto.google.protobuf.MethodOptions.prototype.clearUninterpretedOptionList = function() {
  return this.setUninterpretedOptionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.UninterpretedOption.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.UninterpretedOption.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.UninterpretedOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.UninterpretedOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.UninterpretedOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    nameList: googleProtobuf.Message.toObjectList(msg.getNameList(),
    proto.google.protobuf.UninterpretedOption.NamePart.toObject, includeInstance),
    identifierValue: (f = googleProtobuf.Message.getField(msg, 3)) == null ? undefined : f,
    positiveIntValue: (f = googleProtobuf.Message.getField(msg, 4)) == null ? undefined : f,
    negativeIntValue: (f = googleProtobuf.Message.getField(msg, 5)) == null ? undefined : f,
    doubleValue: (f = googleProtobuf.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    stringValue: msg.getStringValue_asB64(),
    aggregateValue: (f = googleProtobuf.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.UninterpretedOption.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.UninterpretedOption;
  return proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.UninterpretedOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.UninterpretedOption}
 */
proto.google.protobuf.UninterpretedOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.google.protobuf.UninterpretedOption.NamePart;
      reader.readMessage(value,proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader);
      msg.addName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentifierValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPositiveIntValue(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNegativeIntValue(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setStringValue(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAggregateValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.UninterpretedOption.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.UninterpretedOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.UninterpretedOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNameList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getField(message, 7));
  if (f != null) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.UninterpretedOption.NamePart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.UninterpretedOption.NamePart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.UninterpretedOption.NamePart.toObject = function(includeInstance, msg) {
  var f, obj = {
    namePart: (f = googleProtobuf.Message.getField(msg, 1)) == null ? undefined : f,
    isExtension: (f = googleProtobuf.Message.getBooleanField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart}
 */
proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.UninterpretedOption.NamePart;
  return proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.UninterpretedOption.NamePart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart}
 */
proto.google.protobuf.UninterpretedOption.NamePart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamePart(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsExtension(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.UninterpretedOption.NamePart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.UninterpretedOption.NamePart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * required string name_part = 1;
 * @return {string}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.getNamePart = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart} returns this
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.setNamePart = function(value) {
  return googleProtobuf.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart} returns this
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.clearNamePart = function() {
  return googleProtobuf.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.hasNamePart = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * required bool is_extension = 2;
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.getIsExtension = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart} returns this
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.setIsExtension = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart} returns this
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.clearIsExtension = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.NamePart.prototype.hasIsExtension = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated NamePart name = 2;
 * @return {!Array<!proto.google.protobuf.UninterpretedOption.NamePart>}
 */
proto.google.protobuf.UninterpretedOption.prototype.getNameList = function() {
  return /** @type{!Array<!proto.google.protobuf.UninterpretedOption.NamePart>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.UninterpretedOption.NamePart, 2));
};


/**
 * @param {!Array<!proto.google.protobuf.UninterpretedOption.NamePart>} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
*/
proto.google.protobuf.UninterpretedOption.prototype.setNameList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.protobuf.UninterpretedOption.NamePart=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.UninterpretedOption.NamePart}
 */
proto.google.protobuf.UninterpretedOption.prototype.addName = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.protobuf.UninterpretedOption.NamePart, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearNameList = function() {
  return this.setNameList([]);
};


/**
 * optional string identifier_value = 3;
 * @return {string}
 */
proto.google.protobuf.UninterpretedOption.prototype.getIdentifierValue = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setIdentifierValue = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearIdentifierValue = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasIdentifierValue = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional uint64 positive_int_value = 4;
 * @return {number}
 */
proto.google.protobuf.UninterpretedOption.prototype.getPositiveIntValue = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setPositiveIntValue = function(value) {
  return googleProtobuf.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearPositiveIntValue = function() {
  return googleProtobuf.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasPositiveIntValue = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional int64 negative_int_value = 5;
 * @return {number}
 */
proto.google.protobuf.UninterpretedOption.prototype.getNegativeIntValue = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setNegativeIntValue = function(value) {
  return googleProtobuf.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearNegativeIntValue = function() {
  return googleProtobuf.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasNegativeIntValue = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional double double_value = 6;
 * @return {number}
 */
proto.google.protobuf.UninterpretedOption.prototype.getDoubleValue = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setDoubleValue = function(value) {
  return googleProtobuf.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearDoubleValue = function() {
  return googleProtobuf.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasDoubleValue = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};


/**
 * optional bytes string_value = 7;
 * @return {!(string|Uint8Array)}
 */
proto.google.protobuf.UninterpretedOption.prototype.getStringValue = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes string_value = 7;
 * This is a type-conversion wrapper around `getStringValue()`
 * @return {string}
 */
proto.google.protobuf.UninterpretedOption.prototype.getStringValue_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getStringValue()));
};


/**
 * optional bytes string_value = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getStringValue()`
 * @return {!Uint8Array}
 */
proto.google.protobuf.UninterpretedOption.prototype.getStringValue_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getStringValue()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setStringValue = function(value) {
  return googleProtobuf.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearStringValue = function() {
  return googleProtobuf.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasStringValue = function() {
  return googleProtobuf.Message.getField(this, 7) != null;
};


/**
 * optional string aggregate_value = 8;
 * @return {string}
 */
proto.google.protobuf.UninterpretedOption.prototype.getAggregateValue = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.setAggregateValue = function(value) {
  return googleProtobuf.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.UninterpretedOption} returns this
 */
proto.google.protobuf.UninterpretedOption.prototype.clearAggregateValue = function() {
  return googleProtobuf.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.UninterpretedOption.prototype.hasAggregateValue = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.SourceCodeInfo.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.SourceCodeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.SourceCodeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.SourceCodeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.SourceCodeInfo.toObject = function(includeInstance, msg) {
  var obj = {
    locationList: googleProtobuf.Message.toObjectList(msg.getLocationList(),
    proto.google.protobuf.SourceCodeInfo.Location.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.SourceCodeInfo}
 */
proto.google.protobuf.SourceCodeInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.SourceCodeInfo;
  return proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.SourceCodeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.SourceCodeInfo}
 */
proto.google.protobuf.SourceCodeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.SourceCodeInfo.Location;
      reader.readMessage(value,proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader);
      msg.addLocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.SourceCodeInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.SourceCodeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.SourceCodeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.SourceCodeInfo.Location.repeatedFields_ = [1,2,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.SourceCodeInfo.Location.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.SourceCodeInfo.Location} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.SourceCodeInfo.Location.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    spanList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    leadingComments: (f = googleProtobuf.Message.getField(msg, 3)) == null ? undefined : f,
    trailingComments: (f = googleProtobuf.Message.getField(msg, 4)) == null ? undefined : f,
    leadingDetachedCommentsList: (f = googleProtobuf.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location}
 */
proto.google.protobuf.SourceCodeInfo.Location.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.SourceCodeInfo.Location;
  return proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.SourceCodeInfo.Location} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location}
 */
proto.google.protobuf.SourceCodeInfo.Location.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPath(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSpan(values[i]);
      }
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeadingComments(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTrailingComments(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addLeadingDetachedComments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.SourceCodeInfo.Location} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.SourceCodeInfo.Location.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = message.getSpanList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLeadingDetachedCommentsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
};


/**
 * repeated int32 path = 1;
 * @return {!Array<number>}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.getPathList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.setPathList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.addPath = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.clearPathList = function() {
  return this.setPathList([]);
};


/**
 * repeated int32 span = 2;
 * @return {!Array<number>}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.getSpanList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.setSpanList = function(value) {
  return googleProtobuf.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.addSpan = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.clearSpanList = function() {
  return this.setSpanList([]);
};


/**
 * optional string leading_comments = 3;
 * @return {string}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingComments = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingComments = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingComments = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.hasLeadingComments = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string trailing_comments = 4;
 * @return {string}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.getTrailingComments = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.setTrailingComments = function(value) {
  return googleProtobuf.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.clearTrailingComments = function() {
  return googleProtobuf.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.hasTrailingComments = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * repeated string leading_detached_comments = 6;
 * @return {!Array<string>}
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.getLeadingDetachedCommentsList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.setLeadingDetachedCommentsList = function(value) {
  return googleProtobuf.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.addLeadingDetachedComments = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.SourceCodeInfo.Location} returns this
 */
proto.google.protobuf.SourceCodeInfo.Location.prototype.clearLeadingDetachedCommentsList = function() {
  return this.setLeadingDetachedCommentsList([]);
};


/**
 * repeated Location location = 1;
 * @return {!Array<!proto.google.protobuf.SourceCodeInfo.Location>}
 */
proto.google.protobuf.SourceCodeInfo.prototype.getLocationList = function() {
  return /** @type{!Array<!proto.google.protobuf.SourceCodeInfo.Location>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.SourceCodeInfo.Location, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.SourceCodeInfo.Location>} value
 * @return {!proto.google.protobuf.SourceCodeInfo} returns this
*/
proto.google.protobuf.SourceCodeInfo.prototype.setLocationList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.SourceCodeInfo.Location=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.SourceCodeInfo.Location}
 */
proto.google.protobuf.SourceCodeInfo.prototype.addLocation = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.SourceCodeInfo.Location, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.SourceCodeInfo} returns this
 */
proto.google.protobuf.SourceCodeInfo.prototype.clearLocationList = function() {
  return this.setLocationList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.GeneratedCodeInfo.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.GeneratedCodeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.GeneratedCodeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.GeneratedCodeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.GeneratedCodeInfo.toObject = function(includeInstance, msg) {
  var obj = {
    annotationList: googleProtobuf.Message.toObjectList(msg.getAnnotationList(),
    proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.GeneratedCodeInfo}
 */
proto.google.protobuf.GeneratedCodeInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.GeneratedCodeInfo;
  return proto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.GeneratedCodeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.GeneratedCodeInfo}
 */
proto.google.protobuf.GeneratedCodeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.protobuf.GeneratedCodeInfo.Annotation;
      reader.readMessage(value,proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader);
      msg.addAnnotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.GeneratedCodeInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.GeneratedCodeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.GeneratedCodeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnnotationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.toObject = function(includeInstance, msg) {
  var f, obj = {
    pathList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    sourceFile: (f = googleProtobuf.Message.getField(msg, 2)) == null ? undefined : f,
    begin: (f = googleProtobuf.Message.getField(msg, 3)) == null ? undefined : f,
    end: (f = googleProtobuf.Message.getField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.GeneratedCodeInfo.Annotation;
  return proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPath(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceFile(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBegin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEnd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPathList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (googleProtobuf.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated int32 path = 1;
 * @return {!Array<number>}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getPathList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setPathList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.addPath = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearPathList = function() {
  return this.setPathList([]);
};


/**
 * optional string source_file = 2;
 * @return {string}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getSourceFile = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setSourceFile = function(value) {
  return googleProtobuf.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearSourceFile = function() {
  return googleProtobuf.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasSourceFile = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional int32 begin = 3;
 * @return {number}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getBegin = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setBegin = function(value) {
  return googleProtobuf.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearBegin = function() {
  return googleProtobuf.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasBegin = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional int32 end = 4;
 * @return {number}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.getEnd = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.setEnd = function(value) {
  return googleProtobuf.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.clearEnd = function() {
  return googleProtobuf.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.protobuf.GeneratedCodeInfo.Annotation.prototype.hasEnd = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * repeated Annotation annotation = 1;
 * @return {!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>}
 */
proto.google.protobuf.GeneratedCodeInfo.prototype.getAnnotationList = function() {
  return /** @type{!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.protobuf.GeneratedCodeInfo.Annotation, 1));
};


/**
 * @param {!Array<!proto.google.protobuf.GeneratedCodeInfo.Annotation>} value
 * @return {!proto.google.protobuf.GeneratedCodeInfo} returns this
*/
proto.google.protobuf.GeneratedCodeInfo.prototype.setAnnotationList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.protobuf.GeneratedCodeInfo.Annotation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.GeneratedCodeInfo.Annotation}
 */
proto.google.protobuf.GeneratedCodeInfo.prototype.addAnnotation = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.protobuf.GeneratedCodeInfo.Annotation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.protobuf.GeneratedCodeInfo} returns this
 */
proto.google.protobuf.GeneratedCodeInfo.prototype.clearAnnotationList = function() {
  return this.setAnnotationList([]);
};


goog.object.extend(exports, proto.google.protobuf);
});

var gogo_pb = createCommonjsModule$1(function (module, exports) {
// source: gogoproto/gogo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, descriptor_pb);
goog.exportSymbol('proto.gogoproto.benchgen', null, global);
goog.exportSymbol('proto.gogoproto.benchgenAll', null, global);
goog.exportSymbol('proto.gogoproto.castkey', null, global);
goog.exportSymbol('proto.gogoproto.casttype', null, global);
goog.exportSymbol('proto.gogoproto.castvalue', null, global);
goog.exportSymbol('proto.gogoproto.compare', null, global);
goog.exportSymbol('proto.gogoproto.compareAll', null, global);
goog.exportSymbol('proto.gogoproto.customname', null, global);
goog.exportSymbol('proto.gogoproto.customtype', null, global);
goog.exportSymbol('proto.gogoproto.description', null, global);
goog.exportSymbol('proto.gogoproto.descriptionAll', null, global);
goog.exportSymbol('proto.gogoproto.embed', null, global);
goog.exportSymbol('proto.gogoproto.enumCustomname', null, global);
goog.exportSymbol('proto.gogoproto.enumStringer', null, global);
goog.exportSymbol('proto.gogoproto.enumStringerAll', null, global);
goog.exportSymbol('proto.gogoproto.enumdecl', null, global);
goog.exportSymbol('proto.gogoproto.enumdeclAll', null, global);
goog.exportSymbol('proto.gogoproto.enumvalueCustomname', null, global);
goog.exportSymbol('proto.gogoproto.equal', null, global);
goog.exportSymbol('proto.gogoproto.equalAll', null, global);
goog.exportSymbol('proto.gogoproto.face', null, global);
goog.exportSymbol('proto.gogoproto.faceAll', null, global);
goog.exportSymbol('proto.gogoproto.gogoprotoImport', null, global);
goog.exportSymbol('proto.gogoproto.goprotoEnumPrefix', null, global);
goog.exportSymbol('proto.gogoproto.goprotoEnumPrefixAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoEnumStringer', null, global);
goog.exportSymbol('proto.gogoproto.goprotoEnumStringerAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoExtensionsMap', null, global);
goog.exportSymbol('proto.gogoproto.goprotoExtensionsMapAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoGetters', null, global);
goog.exportSymbol('proto.gogoproto.goprotoGettersAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoRegistration', null, global);
goog.exportSymbol('proto.gogoproto.goprotoSizecache', null, global);
goog.exportSymbol('proto.gogoproto.goprotoSizecacheAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoStringer', null, global);
goog.exportSymbol('proto.gogoproto.goprotoStringerAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoUnkeyed', null, global);
goog.exportSymbol('proto.gogoproto.goprotoUnkeyedAll', null, global);
goog.exportSymbol('proto.gogoproto.goprotoUnrecognized', null, global);
goog.exportSymbol('proto.gogoproto.goprotoUnrecognizedAll', null, global);
goog.exportSymbol('proto.gogoproto.gostring', null, global);
goog.exportSymbol('proto.gogoproto.gostringAll', null, global);
goog.exportSymbol('proto.gogoproto.jsontag', null, global);
goog.exportSymbol('proto.gogoproto.marshaler', null, global);
goog.exportSymbol('proto.gogoproto.marshalerAll', null, global);
goog.exportSymbol('proto.gogoproto.messagename', null, global);
goog.exportSymbol('proto.gogoproto.messagenameAll', null, global);
goog.exportSymbol('proto.gogoproto.moretags', null, global);
goog.exportSymbol('proto.gogoproto.nullable', null, global);
goog.exportSymbol('proto.gogoproto.onlyone', null, global);
goog.exportSymbol('proto.gogoproto.onlyoneAll', null, global);
goog.exportSymbol('proto.gogoproto.populate', null, global);
goog.exportSymbol('proto.gogoproto.populateAll', null, global);
goog.exportSymbol('proto.gogoproto.protosizer', null, global);
goog.exportSymbol('proto.gogoproto.protosizerAll', null, global);
goog.exportSymbol('proto.gogoproto.sizer', null, global);
goog.exportSymbol('proto.gogoproto.sizerAll', null, global);
goog.exportSymbol('proto.gogoproto.stableMarshaler', null, global);
goog.exportSymbol('proto.gogoproto.stableMarshalerAll', null, global);
goog.exportSymbol('proto.gogoproto.stdduration', null, global);
goog.exportSymbol('proto.gogoproto.stdtime', null, global);
goog.exportSymbol('proto.gogoproto.stringer', null, global);
goog.exportSymbol('proto.gogoproto.stringerAll', null, global);
goog.exportSymbol('proto.gogoproto.testgen', null, global);
goog.exportSymbol('proto.gogoproto.testgenAll', null, global);
goog.exportSymbol('proto.gogoproto.typedecl', null, global);
goog.exportSymbol('proto.gogoproto.typedeclAll', null, global);
goog.exportSymbol('proto.gogoproto.unmarshaler', null, global);
goog.exportSymbol('proto.gogoproto.unmarshalerAll', null, global);
goog.exportSymbol('proto.gogoproto.unsafeMarshaler', null, global);
goog.exportSymbol('proto.gogoproto.unsafeMarshalerAll', null, global);
goog.exportSymbol('proto.gogoproto.unsafeUnmarshaler', null, global);
goog.exportSymbol('proto.gogoproto.unsafeUnmarshalerAll', null, global);
goog.exportSymbol('proto.gogoproto.verboseEqual', null, global);
goog.exportSymbol('proto.gogoproto.verboseEqualAll', null, global);
goog.exportSymbol('proto.gogoproto.wktpointer', null, global);

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoEnumPrefix`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoEnumPrefix = new googleProtobuf.ExtensionFieldInfo(
    62001,
    {goprotoEnumPrefix: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumOptions.extensionsBinary[62001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoEnumPrefix,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumOptions.extensions[62001] = proto.gogoproto.goprotoEnumPrefix;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoEnumStringer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoEnumStringer = new googleProtobuf.ExtensionFieldInfo(
    62021,
    {goprotoEnumStringer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumOptions.extensionsBinary[62021] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoEnumStringer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumOptions.extensions[62021] = proto.gogoproto.goprotoEnumStringer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumStringer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.enumStringer = new googleProtobuf.ExtensionFieldInfo(
    62022,
    {enumStringer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumOptions.extensionsBinary[62022] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumStringer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumOptions.extensions[62022] = proto.gogoproto.enumStringer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumCustomname`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.enumCustomname = new googleProtobuf.ExtensionFieldInfo(
    62023,
    {enumCustomname: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumOptions.extensionsBinary[62023] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumCustomname,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumOptions.extensions[62023] = proto.gogoproto.enumCustomname;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumdecl`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.enumdecl = new googleProtobuf.ExtensionFieldInfo(
    62024,
    {enumdecl: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumOptions.extensionsBinary[62024] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumdecl,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumOptions.extensions[62024] = proto.gogoproto.enumdecl;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumvalueCustomname`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.enumvalueCustomname = new googleProtobuf.ExtensionFieldInfo(
    66001,
    {enumvalueCustomname: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.EnumValueOptions.extensionsBinary[66001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumvalueCustomname,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.EnumValueOptions.extensions[66001] = proto.gogoproto.enumvalueCustomname;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoGettersAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoGettersAll = new googleProtobuf.ExtensionFieldInfo(
    63001,
    {goprotoGettersAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoGettersAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63001] = proto.gogoproto.goprotoGettersAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoEnumPrefixAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoEnumPrefixAll = new googleProtobuf.ExtensionFieldInfo(
    63002,
    {goprotoEnumPrefixAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63002] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoEnumPrefixAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63002] = proto.gogoproto.goprotoEnumPrefixAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoStringerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoStringerAll = new googleProtobuf.ExtensionFieldInfo(
    63003,
    {goprotoStringerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63003] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoStringerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63003] = proto.gogoproto.goprotoStringerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `verboseEqualAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.verboseEqualAll = new googleProtobuf.ExtensionFieldInfo(
    63004,
    {verboseEqualAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63004] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.verboseEqualAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63004] = proto.gogoproto.verboseEqualAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `faceAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.faceAll = new googleProtobuf.ExtensionFieldInfo(
    63005,
    {faceAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63005] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.faceAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63005] = proto.gogoproto.faceAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `gostringAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.gostringAll = new googleProtobuf.ExtensionFieldInfo(
    63006,
    {gostringAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63006] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.gostringAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63006] = proto.gogoproto.gostringAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `populateAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.populateAll = new googleProtobuf.ExtensionFieldInfo(
    63007,
    {populateAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63007] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.populateAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63007] = proto.gogoproto.populateAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stringerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stringerAll = new googleProtobuf.ExtensionFieldInfo(
    63008,
    {stringerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63008] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stringerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63008] = proto.gogoproto.stringerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `onlyoneAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.onlyoneAll = new googleProtobuf.ExtensionFieldInfo(
    63009,
    {onlyoneAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63009] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.onlyoneAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63009] = proto.gogoproto.onlyoneAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `equalAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.equalAll = new googleProtobuf.ExtensionFieldInfo(
    63013,
    {equalAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63013] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.equalAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63013] = proto.gogoproto.equalAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `descriptionAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.descriptionAll = new googleProtobuf.ExtensionFieldInfo(
    63014,
    {descriptionAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63014] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.descriptionAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63014] = proto.gogoproto.descriptionAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testgenAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.testgenAll = new googleProtobuf.ExtensionFieldInfo(
    63015,
    {testgenAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63015] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.testgenAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63015] = proto.gogoproto.testgenAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `benchgenAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.benchgenAll = new googleProtobuf.ExtensionFieldInfo(
    63016,
    {benchgenAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63016] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.benchgenAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63016] = proto.gogoproto.benchgenAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `marshalerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.marshalerAll = new googleProtobuf.ExtensionFieldInfo(
    63017,
    {marshalerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63017] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.marshalerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63017] = proto.gogoproto.marshalerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unmarshalerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unmarshalerAll = new googleProtobuf.ExtensionFieldInfo(
    63018,
    {unmarshalerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63018] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unmarshalerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63018] = proto.gogoproto.unmarshalerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stableMarshalerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stableMarshalerAll = new googleProtobuf.ExtensionFieldInfo(
    63019,
    {stableMarshalerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63019] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stableMarshalerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63019] = proto.gogoproto.stableMarshalerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `sizerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.sizerAll = new googleProtobuf.ExtensionFieldInfo(
    63020,
    {sizerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63020] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.sizerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63020] = proto.gogoproto.sizerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoEnumStringerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoEnumStringerAll = new googleProtobuf.ExtensionFieldInfo(
    63021,
    {goprotoEnumStringerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63021] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoEnumStringerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63021] = proto.gogoproto.goprotoEnumStringerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumStringerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.enumStringerAll = new googleProtobuf.ExtensionFieldInfo(
    63022,
    {enumStringerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63022] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumStringerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63022] = proto.gogoproto.enumStringerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unsafeMarshalerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unsafeMarshalerAll = new googleProtobuf.ExtensionFieldInfo(
    63023,
    {unsafeMarshalerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63023] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unsafeMarshalerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63023] = proto.gogoproto.unsafeMarshalerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unsafeUnmarshalerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unsafeUnmarshalerAll = new googleProtobuf.ExtensionFieldInfo(
    63024,
    {unsafeUnmarshalerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63024] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unsafeUnmarshalerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63024] = proto.gogoproto.unsafeUnmarshalerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoExtensionsMapAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoExtensionsMapAll = new googleProtobuf.ExtensionFieldInfo(
    63025,
    {goprotoExtensionsMapAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63025] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoExtensionsMapAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63025] = proto.gogoproto.goprotoExtensionsMapAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoUnrecognizedAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoUnrecognizedAll = new googleProtobuf.ExtensionFieldInfo(
    63026,
    {goprotoUnrecognizedAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63026] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoUnrecognizedAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63026] = proto.gogoproto.goprotoUnrecognizedAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `gogoprotoImport`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.gogoprotoImport = new googleProtobuf.ExtensionFieldInfo(
    63027,
    {gogoprotoImport: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63027] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.gogoprotoImport,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63027] = proto.gogoproto.gogoprotoImport;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `protosizerAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.protosizerAll = new googleProtobuf.ExtensionFieldInfo(
    63028,
    {protosizerAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63028] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.protosizerAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63028] = proto.gogoproto.protosizerAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `compareAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.compareAll = new googleProtobuf.ExtensionFieldInfo(
    63029,
    {compareAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63029] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.compareAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63029] = proto.gogoproto.compareAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `typedeclAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.typedeclAll = new googleProtobuf.ExtensionFieldInfo(
    63030,
    {typedeclAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63030] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.typedeclAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63030] = proto.gogoproto.typedeclAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `enumdeclAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.enumdeclAll = new googleProtobuf.ExtensionFieldInfo(
    63031,
    {enumdeclAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63031] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.enumdeclAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63031] = proto.gogoproto.enumdeclAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoRegistration`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoRegistration = new googleProtobuf.ExtensionFieldInfo(
    63032,
    {goprotoRegistration: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63032] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoRegistration,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63032] = proto.gogoproto.goprotoRegistration;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messagenameAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.messagenameAll = new googleProtobuf.ExtensionFieldInfo(
    63033,
    {messagenameAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63033] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.messagenameAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63033] = proto.gogoproto.messagenameAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoSizecacheAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoSizecacheAll = new googleProtobuf.ExtensionFieldInfo(
    63034,
    {goprotoSizecacheAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63034] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoSizecacheAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63034] = proto.gogoproto.goprotoSizecacheAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoUnkeyedAll`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoUnkeyedAll = new googleProtobuf.ExtensionFieldInfo(
    63035,
    {goprotoUnkeyedAll: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FileOptions.extensionsBinary[63035] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoUnkeyedAll,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FileOptions.extensions[63035] = proto.gogoproto.goprotoUnkeyedAll;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoGetters`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoGetters = new googleProtobuf.ExtensionFieldInfo(
    64001,
    {goprotoGetters: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoGetters,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64001] = proto.gogoproto.goprotoGetters;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoStringer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoStringer = new googleProtobuf.ExtensionFieldInfo(
    64003,
    {goprotoStringer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64003] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoStringer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64003] = proto.gogoproto.goprotoStringer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `verboseEqual`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.verboseEqual = new googleProtobuf.ExtensionFieldInfo(
    64004,
    {verboseEqual: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64004] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.verboseEqual,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64004] = proto.gogoproto.verboseEqual;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `face`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.face = new googleProtobuf.ExtensionFieldInfo(
    64005,
    {face: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64005] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.face,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64005] = proto.gogoproto.face;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `gostring`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.gostring = new googleProtobuf.ExtensionFieldInfo(
    64006,
    {gostring: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64006] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.gostring,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64006] = proto.gogoproto.gostring;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `populate`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.populate = new googleProtobuf.ExtensionFieldInfo(
    64007,
    {populate: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64007] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.populate,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64007] = proto.gogoproto.populate;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stringer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stringer = new googleProtobuf.ExtensionFieldInfo(
    67008,
    {stringer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[67008] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stringer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[67008] = proto.gogoproto.stringer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `onlyone`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.onlyone = new googleProtobuf.ExtensionFieldInfo(
    64009,
    {onlyone: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64009] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.onlyone,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64009] = proto.gogoproto.onlyone;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `equal`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.equal = new googleProtobuf.ExtensionFieldInfo(
    64013,
    {equal: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64013] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.equal,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64013] = proto.gogoproto.equal;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `description`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.description = new googleProtobuf.ExtensionFieldInfo(
    64014,
    {description: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64014] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.description,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64014] = proto.gogoproto.description;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `testgen`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.testgen = new googleProtobuf.ExtensionFieldInfo(
    64015,
    {testgen: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64015] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.testgen,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64015] = proto.gogoproto.testgen;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `benchgen`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.benchgen = new googleProtobuf.ExtensionFieldInfo(
    64016,
    {benchgen: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64016] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.benchgen,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64016] = proto.gogoproto.benchgen;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `marshaler`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.marshaler = new googleProtobuf.ExtensionFieldInfo(
    64017,
    {marshaler: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64017] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.marshaler,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64017] = proto.gogoproto.marshaler;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unmarshaler`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unmarshaler = new googleProtobuf.ExtensionFieldInfo(
    64018,
    {unmarshaler: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64018] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unmarshaler,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64018] = proto.gogoproto.unmarshaler;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stableMarshaler`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stableMarshaler = new googleProtobuf.ExtensionFieldInfo(
    64019,
    {stableMarshaler: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64019] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stableMarshaler,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64019] = proto.gogoproto.stableMarshaler;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `sizer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.sizer = new googleProtobuf.ExtensionFieldInfo(
    64020,
    {sizer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64020] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.sizer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64020] = proto.gogoproto.sizer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unsafeMarshaler`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unsafeMarshaler = new googleProtobuf.ExtensionFieldInfo(
    64023,
    {unsafeMarshaler: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64023] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unsafeMarshaler,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64023] = proto.gogoproto.unsafeMarshaler;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `unsafeUnmarshaler`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.unsafeUnmarshaler = new googleProtobuf.ExtensionFieldInfo(
    64024,
    {unsafeUnmarshaler: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64024] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.unsafeUnmarshaler,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64024] = proto.gogoproto.unsafeUnmarshaler;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoExtensionsMap`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoExtensionsMap = new googleProtobuf.ExtensionFieldInfo(
    64025,
    {goprotoExtensionsMap: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64025] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoExtensionsMap,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64025] = proto.gogoproto.goprotoExtensionsMap;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoUnrecognized`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoUnrecognized = new googleProtobuf.ExtensionFieldInfo(
    64026,
    {goprotoUnrecognized: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64026] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoUnrecognized,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64026] = proto.gogoproto.goprotoUnrecognized;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `protosizer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.protosizer = new googleProtobuf.ExtensionFieldInfo(
    64028,
    {protosizer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64028] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.protosizer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64028] = proto.gogoproto.protosizer;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `compare`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.compare = new googleProtobuf.ExtensionFieldInfo(
    64029,
    {compare: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64029] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.compare,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64029] = proto.gogoproto.compare;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `typedecl`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.typedecl = new googleProtobuf.ExtensionFieldInfo(
    64030,
    {typedecl: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64030] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.typedecl,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64030] = proto.gogoproto.typedecl;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `messagename`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.messagename = new googleProtobuf.ExtensionFieldInfo(
    64033,
    {messagename: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64033] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.messagename,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64033] = proto.gogoproto.messagename;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoSizecache`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoSizecache = new googleProtobuf.ExtensionFieldInfo(
    64034,
    {goprotoSizecache: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64034] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoSizecache,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64034] = proto.gogoproto.goprotoSizecache;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `goprotoUnkeyed`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.goprotoUnkeyed = new googleProtobuf.ExtensionFieldInfo(
    64035,
    {goprotoUnkeyed: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[64035] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.goprotoUnkeyed,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[64035] = proto.gogoproto.goprotoUnkeyed;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `nullable`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.nullable = new googleProtobuf.ExtensionFieldInfo(
    65001,
    {nullable: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.nullable,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65001] = proto.gogoproto.nullable;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `embed`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.embed = new googleProtobuf.ExtensionFieldInfo(
    65002,
    {embed: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65002] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.embed,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65002] = proto.gogoproto.embed;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `customtype`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.customtype = new googleProtobuf.ExtensionFieldInfo(
    65003,
    {customtype: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65003] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.customtype,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65003] = proto.gogoproto.customtype;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `customname`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.customname = new googleProtobuf.ExtensionFieldInfo(
    65004,
    {customname: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65004] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.customname,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65004] = proto.gogoproto.customname;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `jsontag`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.jsontag = new googleProtobuf.ExtensionFieldInfo(
    65005,
    {jsontag: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65005] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.jsontag,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65005] = proto.gogoproto.jsontag;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `moretags`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.moretags = new googleProtobuf.ExtensionFieldInfo(
    65006,
    {moretags: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65006] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.moretags,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65006] = proto.gogoproto.moretags;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `casttype`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.casttype = new googleProtobuf.ExtensionFieldInfo(
    65007,
    {casttype: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65007] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.casttype,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65007] = proto.gogoproto.casttype;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `castkey`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.castkey = new googleProtobuf.ExtensionFieldInfo(
    65008,
    {castkey: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65008] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.castkey,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65008] = proto.gogoproto.castkey;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `castvalue`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.gogoproto.castvalue = new googleProtobuf.ExtensionFieldInfo(
    65009,
    {castvalue: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65009] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.castvalue,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65009] = proto.gogoproto.castvalue;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stdtime`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stdtime = new googleProtobuf.ExtensionFieldInfo(
    65010,
    {stdtime: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65010] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stdtime,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65010] = proto.gogoproto.stdtime;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `stdduration`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.stdduration = new googleProtobuf.ExtensionFieldInfo(
    65011,
    {stdduration: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65011] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.stdduration,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65011] = proto.gogoproto.stdduration;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `wktpointer`.
 * @type {!jspb.ExtensionFieldInfo<boolean>}
 */
proto.gogoproto.wktpointer = new googleProtobuf.ExtensionFieldInfo(
    65012,
    {wktpointer: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[65012] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.gogoproto.wktpointer,
    googleProtobuf.BinaryReader.prototype.readBool,
    googleProtobuf.BinaryWriter.prototype.writeBool,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[65012] = proto.gogoproto.wktpointer;

goog.object.extend(exports, proto.gogoproto);
});

var http_pb = createCommonjsModule$1(function (module, exports) {
// source: google/api/http.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();

goog.exportSymbol('proto.google.api.CustomHttpPattern', null, global);
goog.exportSymbol('proto.google.api.Http', null, global);
goog.exportSymbol('proto.google.api.HttpRule', null, global);
goog.exportSymbol('proto.google.api.HttpRule.PatternCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.api.Http = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.api.Http.repeatedFields_, null);
};
goog.inherits(proto.google.api.Http, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.api.Http.displayName = 'proto.google.api.Http';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.api.HttpRule = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.google.api.HttpRule.repeatedFields_, proto.google.api.HttpRule.oneofGroups_);
};
goog.inherits(proto.google.api.HttpRule, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.api.HttpRule.displayName = 'proto.google.api.HttpRule';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.api.CustomHttpPattern = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.api.CustomHttpPattern, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.api.CustomHttpPattern.displayName = 'proto.google.api.CustomHttpPattern';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.api.Http.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.api.Http.prototype.toObject = function(opt_includeInstance) {
  return proto.google.api.Http.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.api.Http} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.Http.toObject = function(includeInstance, msg) {
  var obj = {
    rulesList: googleProtobuf.Message.toObjectList(msg.getRulesList(),
    proto.google.api.HttpRule.toObject, includeInstance),
    fullyDecodeReservedExpansion: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.api.Http}
 */
proto.google.api.Http.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.api.Http;
  return proto.google.api.Http.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.api.Http} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.api.Http}
 */
proto.google.api.Http.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.api.HttpRule;
      reader.readMessage(value,proto.google.api.HttpRule.deserializeBinaryFromReader);
      msg.addRules(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFullyDecodeReservedExpansion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.api.Http.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.api.Http.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.api.Http} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.Http.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRulesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.api.HttpRule.serializeBinaryToWriter
    );
  }
  f = message.getFullyDecodeReservedExpansion();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * repeated HttpRule rules = 1;
 * @return {!Array<!proto.google.api.HttpRule>}
 */
proto.google.api.Http.prototype.getRulesList = function() {
  return /** @type{!Array<!proto.google.api.HttpRule>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.api.HttpRule, 1));
};


/**
 * @param {!Array<!proto.google.api.HttpRule>} value
 * @return {!proto.google.api.Http} returns this
*/
proto.google.api.Http.prototype.setRulesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.api.HttpRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.api.HttpRule}
 */
proto.google.api.Http.prototype.addRules = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.api.HttpRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.api.Http} returns this
 */
proto.google.api.Http.prototype.clearRulesList = function() {
  return this.setRulesList([]);
};


/**
 * optional bool fully_decode_reserved_expansion = 2;
 * @return {boolean}
 */
proto.google.api.Http.prototype.getFullyDecodeReservedExpansion = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.google.api.Http} returns this
 */
proto.google.api.Http.prototype.setFullyDecodeReservedExpansion = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.api.HttpRule.repeatedFields_ = [11];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.api.HttpRule.oneofGroups_ = [[2,3,4,5,6,8]];

/**
 * @enum {number}
 */
proto.google.api.HttpRule.PatternCase = {
  PATTERN_NOT_SET: 0,
  GET: 2,
  PUT: 3,
  POST: 4,
  DELETE: 5,
  PATCH: 6,
  CUSTOM: 8
};

/**
 * @return {proto.google.api.HttpRule.PatternCase}
 */
proto.google.api.HttpRule.prototype.getPatternCase = function() {
  return /** @type {proto.google.api.HttpRule.PatternCase} */(googleProtobuf.Message.computeOneofCase(this, proto.google.api.HttpRule.oneofGroups_[0]));
};



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.api.HttpRule.prototype.toObject = function(opt_includeInstance) {
  return proto.google.api.HttpRule.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.api.HttpRule} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.HttpRule.toObject = function(includeInstance, msg) {
  var f, obj = {
    selector: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    get: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    put: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    post: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    pb_delete: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    patch: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    custom: (f = msg.getCustom()) && proto.google.api.CustomHttpPattern.toObject(includeInstance, f),
    body: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    responseBody: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
    additionalBindingsList: googleProtobuf.Message.toObjectList(msg.getAdditionalBindingsList(),
    proto.google.api.HttpRule.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.api.HttpRule}
 */
proto.google.api.HttpRule.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.api.HttpRule;
  return proto.google.api.HttpRule.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.api.HttpRule} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.api.HttpRule}
 */
proto.google.api.HttpRule.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSelector(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGet(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPut(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPost(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelete(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatch(value);
      break;
    case 8:
      var value = new proto.google.api.CustomHttpPattern;
      reader.readMessage(value,proto.google.api.CustomHttpPattern.deserializeBinaryFromReader);
      msg.setCustom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponseBody(value);
      break;
    case 11:
      var value = new proto.google.api.HttpRule;
      reader.readMessage(value,proto.google.api.HttpRule.deserializeBinaryFromReader);
      msg.addAdditionalBindings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.api.HttpRule.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.api.HttpRule.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.api.HttpRule} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.HttpRule.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSelector();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (googleProtobuf.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCustom();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.api.CustomHttpPattern.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getResponseBody();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getAdditionalBindingsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.google.api.HttpRule.serializeBinaryToWriter
    );
  }
};


/**
 * optional string selector = 1;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getSelector = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setSelector = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string get = 2;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getGet = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setGet = function(value) {
  return googleProtobuf.Message.setOneofField(this, 2, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearGet = function() {
  return googleProtobuf.Message.setOneofField(this, 2, proto.google.api.HttpRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasGet = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string put = 3;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getPut = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setPut = function(value) {
  return googleProtobuf.Message.setOneofField(this, 3, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearPut = function() {
  return googleProtobuf.Message.setOneofField(this, 3, proto.google.api.HttpRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasPut = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string post = 4;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getPost = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setPost = function(value) {
  return googleProtobuf.Message.setOneofField(this, 4, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearPost = function() {
  return googleProtobuf.Message.setOneofField(this, 4, proto.google.api.HttpRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasPost = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional string delete = 5;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getDelete = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setDelete = function(value) {
  return googleProtobuf.Message.setOneofField(this, 5, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearDelete = function() {
  return googleProtobuf.Message.setOneofField(this, 5, proto.google.api.HttpRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasDelete = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional string patch = 6;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getPatch = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setPatch = function(value) {
  return googleProtobuf.Message.setOneofField(this, 6, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearPatch = function() {
  return googleProtobuf.Message.setOneofField(this, 6, proto.google.api.HttpRule.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasPatch = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};


/**
 * optional CustomHttpPattern custom = 8;
 * @return {?proto.google.api.CustomHttpPattern}
 */
proto.google.api.HttpRule.prototype.getCustom = function() {
  return /** @type{?proto.google.api.CustomHttpPattern} */ (
    googleProtobuf.Message.getWrapperField(this, proto.google.api.CustomHttpPattern, 8));
};


/**
 * @param {?proto.google.api.CustomHttpPattern|undefined} value
 * @return {!proto.google.api.HttpRule} returns this
*/
proto.google.api.HttpRule.prototype.setCustom = function(value) {
  return googleProtobuf.Message.setOneofWrapperField(this, 8, proto.google.api.HttpRule.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearCustom = function() {
  return this.setCustom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.api.HttpRule.prototype.hasCustom = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};


/**
 * optional string body = 7;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getBody = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setBody = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string response_body = 12;
 * @return {string}
 */
proto.google.api.HttpRule.prototype.getResponseBody = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.setResponseBody = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated HttpRule additional_bindings = 11;
 * @return {!Array<!proto.google.api.HttpRule>}
 */
proto.google.api.HttpRule.prototype.getAdditionalBindingsList = function() {
  return /** @type{!Array<!proto.google.api.HttpRule>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.google.api.HttpRule, 11));
};


/**
 * @param {!Array<!proto.google.api.HttpRule>} value
 * @return {!proto.google.api.HttpRule} returns this
*/
proto.google.api.HttpRule.prototype.setAdditionalBindingsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.google.api.HttpRule=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.api.HttpRule}
 */
proto.google.api.HttpRule.prototype.addAdditionalBindings = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.google.api.HttpRule, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.google.api.HttpRule} returns this
 */
proto.google.api.HttpRule.prototype.clearAdditionalBindingsList = function() {
  return this.setAdditionalBindingsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.api.CustomHttpPattern.prototype.toObject = function(opt_includeInstance) {
  return proto.google.api.CustomHttpPattern.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.api.CustomHttpPattern} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.CustomHttpPattern.toObject = function(includeInstance, msg) {
  var obj = {
    kind: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    path: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.api.CustomHttpPattern}
 */
proto.google.api.CustomHttpPattern.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.api.CustomHttpPattern;
  return proto.google.api.CustomHttpPattern.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.api.CustomHttpPattern} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.api.CustomHttpPattern}
 */
proto.google.api.CustomHttpPattern.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.api.CustomHttpPattern.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.api.CustomHttpPattern.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.api.CustomHttpPattern} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.api.CustomHttpPattern.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.google.api.CustomHttpPattern.prototype.getKind = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.CustomHttpPattern} returns this
 */
proto.google.api.CustomHttpPattern.prototype.setKind = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string path = 2;
 * @return {string}
 */
proto.google.api.CustomHttpPattern.prototype.getPath = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.google.api.CustomHttpPattern} returns this
 */
proto.google.api.CustomHttpPattern.prototype.setPath = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.google.api);
});

var annotations_pb = createCommonjsModule$1(function (module, exports) {
// source: google/api/annotations.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, http_pb);

goog.object.extend(proto, descriptor_pb);
goog.exportSymbol('proto.google.api.http', null, global);

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `http`.
 * @type {!jspb.ExtensionFieldInfo<!proto.google.api.HttpRule>}
 */
proto.google.api.http = new googleProtobuf.ExtensionFieldInfo(
    72295728,
    {http: 0},
    http_pb.HttpRule,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         http_pb.HttpRule.toObject),
    0);

descriptor_pb.MethodOptions.extensionsBinary[72295728] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.google.api.http,
    googleProtobuf.BinaryReader.prototype.readMessage,
    googleProtobuf.BinaryWriter.prototype.writeMessage,
    http_pb.HttpRule.serializeBinaryToWriter,
    http_pb.HttpRule.deserializeBinaryFromReader,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MethodOptions.extensions[72295728] = proto.google.api.http;

goog.object.extend(exports, proto.google.api);
});

var cosmos_pb = createCommonjsModule$1(function (module, exports) {
// source: cosmos_proto/cosmos.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, descriptor_pb);
goog.exportSymbol('proto.cosmos_proto.acceptsInterface', null, global);
goog.exportSymbol('proto.cosmos_proto.implementsInterface', null, global);
goog.exportSymbol('proto.cosmos_proto.interfaceType', null, global);

/**
 * A tuple of {field number, class constructor} for the extension
 * field named `interfaceType`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.cosmos_proto.interfaceType = new googleProtobuf.ExtensionFieldInfo(
    93001,
    {interfaceType: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[93001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.cosmos_proto.interfaceType,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[93001] = proto.cosmos_proto.interfaceType;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `implementsInterface`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.cosmos_proto.implementsInterface = new googleProtobuf.ExtensionFieldInfo(
    93002,
    {implementsInterface: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.MessageOptions.extensionsBinary[93002] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.cosmos_proto.implementsInterface,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.MessageOptions.extensions[93002] = proto.cosmos_proto.implementsInterface;


/**
 * A tuple of {field number, class constructor} for the extension
 * field named `acceptsInterface`.
 * @type {!jspb.ExtensionFieldInfo<string>}
 */
proto.cosmos_proto.acceptsInterface = new googleProtobuf.ExtensionFieldInfo(
    93001,
    {acceptsInterface: 0},
    null,
     /** @type {?function((boolean|undefined),!jspb.Message=): !Object} */ (
         null),
    0);

descriptor_pb.FieldOptions.extensionsBinary[93001] = new googleProtobuf.ExtensionFieldBinaryInfo(
    proto.cosmos_proto.acceptsInterface,
    googleProtobuf.BinaryReader.prototype.readString,
    googleProtobuf.BinaryWriter.prototype.writeString,
    undefined,
    undefined,
    false);
// This registers the extension field with the extended class, so that
// toObject() will function correctly.
descriptor_pb.FieldOptions.extensions[93001] = proto.cosmos_proto.acceptsInterface;

goog.object.extend(exports, proto.cosmos_proto);
});

var duration_pb = createCommonjsModule$1(function (module, exports) {
// source: google/protobuf/duration.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.google.protobuf.Duration', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.Duration = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.Duration, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.Duration.displayName = 'proto.google.protobuf.Duration';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.Duration.toObject = function(includeInstance, msg) {
  var obj = {
    seconds: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    nanos: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.Duration}
 */
proto.google.protobuf.Duration.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.Duration;
  return proto.google.protobuf.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.Duration}
 */
proto.google.protobuf.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.Duration.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.google.protobuf.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.Duration} returns this
 */
proto.google.protobuf.Duration.prototype.setSeconds = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.google.protobuf.Duration.prototype.getNanos = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.Duration} returns this
 */
proto.google.protobuf.Duration.prototype.setNanos = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.google.protobuf);
});

var common_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/common/v1/common.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);
goog.exportSymbol('proto.sgn.common.v1.ContractInfo', null, global);
goog.exportSymbol('proto.sgn.common.v1.ERC20Token', null, global);
goog.exportSymbol('proto.sgn.common.v1.Signature', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.common.v1.Signature = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.common.v1.Signature, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.common.v1.Signature.displayName = 'proto.sgn.common.v1.Signature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.common.v1.ContractInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.common.v1.ContractInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.common.v1.ContractInfo.displayName = 'proto.sgn.common.v1.ContractInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.common.v1.ERC20Token = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.common.v1.ERC20Token, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.common.v1.ERC20Token.displayName = 'proto.sgn.common.v1.ERC20Token';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.common.v1.Signature.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.common.v1.Signature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.common.v1.Signature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.Signature.toObject = function(includeInstance, msg) {
  var obj = {
    signer: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sigBytes: msg.getSigBytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.common.v1.Signature.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.common.v1.Signature;
  return proto.sgn.common.v1.Signature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.common.v1.Signature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.common.v1.Signature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigner(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSigBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.common.v1.Signature.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.common.v1.Signature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.common.v1.Signature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.Signature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSigner();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSigBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string signer = 1;
 * @return {string}
 */
proto.sgn.common.v1.Signature.prototype.getSigner = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.common.v1.Signature} returns this
 */
proto.sgn.common.v1.Signature.prototype.setSigner = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes sig_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.common.v1.Signature.prototype.getSigBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig_bytes = 2;
 * This is a type-conversion wrapper around `getSigBytes()`
 * @return {string}
 */
proto.sgn.common.v1.Signature.prototype.getSigBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSigBytes()));
};


/**
 * optional bytes sig_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSigBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.common.v1.Signature.prototype.getSigBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSigBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.common.v1.Signature} returns this
 */
proto.sgn.common.v1.Signature.prototype.setSigBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.common.v1.ContractInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.common.v1.ContractInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.common.v1.ContractInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.ContractInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    address: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.common.v1.ContractInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.common.v1.ContractInfo;
  return proto.sgn.common.v1.ContractInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.common.v1.ContractInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.common.v1.ContractInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.common.v1.ContractInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.common.v1.ContractInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.common.v1.ContractInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.ContractInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.common.v1.ContractInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.common.v1.ContractInfo} returns this
 */
proto.sgn.common.v1.ContractInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.sgn.common.v1.ContractInfo.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.common.v1.ContractInfo} returns this
 */
proto.sgn.common.v1.ContractInfo.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.common.v1.ERC20Token.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.common.v1.ERC20Token.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.common.v1.ERC20Token} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.ERC20Token.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    address: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    decimals: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.common.v1.ERC20Token.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.common.v1.ERC20Token;
  return proto.sgn.common.v1.ERC20Token.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.common.v1.ERC20Token} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.common.v1.ERC20Token.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDecimals(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.common.v1.ERC20Token.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.common.v1.ERC20Token.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.common.v1.ERC20Token} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.common.v1.ERC20Token.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.common.v1.ERC20Token.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.common.v1.ERC20Token} returns this
 */
proto.sgn.common.v1.ERC20Token.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.sgn.common.v1.ERC20Token.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.common.v1.ERC20Token} returns this
 */
proto.sgn.common.v1.ERC20Token.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.sgn.common.v1.ERC20Token.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.common.v1.ERC20Token} returns this
 */
proto.sgn.common.v1.ERC20Token.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 decimals = 4;
 * @return {number}
 */
proto.sgn.common.v1.ERC20Token.prototype.getDecimals = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.common.v1.ERC20Token} returns this
 */
proto.sgn.common.v1.ERC20Token.prototype.setDecimals = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


goog.object.extend(exports, proto.sgn.common.v1);
});

var cbridge_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/cbridge/v1/cbridge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, cosmos_pb);

goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, duration_pb);

goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.sgn.cbridge.v1.AddrSig', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.AssetPrice', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CbrConfig', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CbrPrice', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CbrProposal', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainAsset', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainPair', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainSigners', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.GasPrice', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.LatestSigners', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.OnChainEvent', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.Params', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.PerChainPairAssetOverride', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.RelayGasCostParam', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.RelayOnChain', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.Signer', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.WithdrawDetail', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.WithdrawOnchain', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.XferRelay', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.XferStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.Params = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.Params, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.Params.displayName = 'proto.sgn.cbridge.v1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CbrConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.CbrConfig.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.CbrConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CbrConfig.displayName = 'proto.sgn.cbridge.v1.CbrConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CbrPrice = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.CbrPrice.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.CbrPrice, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CbrPrice.displayName = 'proto.sgn.cbridge.v1.CbrPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.RelayGasCostParam = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.RelayGasCostParam, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.RelayGasCostParam.displayName = 'proto.sgn.cbridge.v1.RelayGasCostParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.AssetPrice = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.AssetPrice.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.AssetPrice, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.AssetPrice.displayName = 'proto.sgn.cbridge.v1.AssetPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.GasPrice = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.GasPrice, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.GasPrice.displayName = 'proto.sgn.cbridge.v1.GasPrice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainAsset = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainAsset, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainAsset.displayName = 'proto.sgn.cbridge.v1.ChainAsset';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainPair = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainPair, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainPair.displayName = 'proto.sgn.cbridge.v1.ChainPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.PerChainPairAssetOverride, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.PerChainPairAssetOverride.displayName = 'proto.sgn.cbridge.v1.PerChainPairAssetOverride';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CbrProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.CbrProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CbrProposal.displayName = 'proto.sgn.cbridge.v1.CbrProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.OnChainEvent = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.OnChainEvent, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.OnChainEvent.displayName = 'proto.sgn.cbridge.v1.OnChainEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.RelayOnChain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.RelayOnChain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.RelayOnChain.displayName = 'proto.sgn.cbridge.v1.RelayOnChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.WithdrawOnchain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.WithdrawOnchain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.WithdrawOnchain.displayName = 'proto.sgn.cbridge.v1.WithdrawOnchain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.XferRelay = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.XferRelay.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.XferRelay, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.XferRelay.displayName = 'proto.sgn.cbridge.v1.XferRelay';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.WithdrawDetail = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.WithdrawDetail.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.WithdrawDetail, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.WithdrawDetail.displayName = 'proto.sgn.cbridge.v1.WithdrawDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.AddrSig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.AddrSig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.AddrSig.displayName = 'proto.sgn.cbridge.v1.AddrSig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.Signer = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.Signer, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.Signer.displayName = 'proto.sgn.cbridge.v1.Signer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainSigners = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.ChainSigners.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainSigners, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainSigners.displayName = 'proto.sgn.cbridge.v1.ChainSigners';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.LatestSigners = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.LatestSigners.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.LatestSigners, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.LatestSigners.displayName = 'proto.sgn.cbridge.v1.LatestSigners';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    signerUpdateDuration: (f = msg.getSignerUpdateDuration()) && duration_pb.Duration.toObject(includeInstance, f),
    signAgainCoolDownDuration: (f = msg.getSignAgainCoolDownDuration()) && duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.Params}
 */
proto.sgn.cbridge.v1.Params.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.Params;
  return proto.sgn.cbridge.v1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.Params}
 */
proto.sgn.cbridge.v1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setSignerUpdateDuration(value);
      break;
    case 2:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setSignAgainCoolDownDuration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Params.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignerUpdateDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getSignAgainCoolDownDuration();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration signer_update_duration = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.cbridge.v1.Params.prototype.getSignerUpdateDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.cbridge.v1.Params} returns this
*/
proto.sgn.cbridge.v1.Params.prototype.setSignerUpdateDuration = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.Params} returns this
 */
proto.sgn.cbridge.v1.Params.prototype.clearSignerUpdateDuration = function() {
  return this.setSignerUpdateDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.Params.prototype.hasSignerUpdateDuration = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Duration sign_again_cool_down_duration = 2;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.cbridge.v1.Params.prototype.getSignAgainCoolDownDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 2));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.cbridge.v1.Params} returns this
*/
proto.sgn.cbridge.v1.Params.prototype.setSignAgainCoolDownDuration = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.Params} returns this
 */
proto.sgn.cbridge.v1.Params.prototype.clearSignAgainCoolDownDuration = function() {
  return this.setSignAgainCoolDownDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.Params.prototype.hasSignAgainCoolDownDuration = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.CbrConfig.repeatedFields_ = [5,2,3,6,7];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CbrConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CbrConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrConfig.toObject = function(includeInstance, msg) {
  var obj = {
    lpFeePerc: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    pickLpSize: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    relayGasCostList: googleProtobuf.Message.toObjectList(msg.getRelayGasCostList(),
    proto.sgn.cbridge.v1.RelayGasCostParam.toObject, includeInstance),
    assetsList: googleProtobuf.Message.toObjectList(msg.getAssetsList(),
    proto.sgn.cbridge.v1.ChainAsset.toObject, includeInstance),
    chainPairsList: googleProtobuf.Message.toObjectList(msg.getChainPairsList(),
    proto.sgn.cbridge.v1.ChainPair.toObject, includeInstance),
    cbrContractsList: googleProtobuf.Message.toObjectList(msg.getCbrContractsList(),
    common_pb.ContractInfo.toObject, includeInstance),
    overrideList: googleProtobuf.Message.toObjectList(msg.getOverrideList(),
    proto.sgn.cbridge.v1.PerChainPairAssetOverride.toObject, includeInstance),
    maxGainPerc: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    updateGasCost: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CbrConfig}
 */
proto.sgn.cbridge.v1.CbrConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CbrConfig;
  return proto.sgn.cbridge.v1.CbrConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CbrConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CbrConfig}
 */
proto.sgn.cbridge.v1.CbrConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLpFeePerc(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPickLpSize(value);
      break;
    case 5:
      var value = new proto.sgn.cbridge.v1.RelayGasCostParam;
      reader.readMessage(value,proto.sgn.cbridge.v1.RelayGasCostParam.deserializeBinaryFromReader);
      msg.addRelayGasCost(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.ChainAsset;
      reader.readMessage(value,proto.sgn.cbridge.v1.ChainAsset.deserializeBinaryFromReader);
      msg.addAssets(value);
      break;
    case 3:
      var value = new proto.sgn.cbridge.v1.ChainPair;
      reader.readMessage(value,proto.sgn.cbridge.v1.ChainPair.deserializeBinaryFromReader);
      msg.addChainPairs(value);
      break;
    case 6:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addCbrContracts(value);
      break;
    case 7:
      var value = new proto.sgn.cbridge.v1.PerChainPairAssetOverride;
      reader.readMessage(value,proto.sgn.cbridge.v1.PerChainPairAssetOverride.deserializeBinaryFromReader);
      msg.addOverride(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxGainPerc(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUpdateGasCost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CbrConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CbrConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLpFeePerc();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPickLpSize();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getRelayGasCostList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sgn.cbridge.v1.RelayGasCostParam.serializeBinaryToWriter
    );
  }
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.ChainAsset.serializeBinaryToWriter
    );
  }
  f = message.getChainPairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.cbridge.v1.ChainPair.serializeBinaryToWriter
    );
  }
  f = message.getCbrContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getOverrideList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.sgn.cbridge.v1.PerChainPairAssetOverride.serializeBinaryToWriter
    );
  }
  f = message.getMaxGainPerc();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getUpdateGasCost();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional uint32 lp_fee_perc = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getLpFeePerc = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.setLpFeePerc = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 pick_lp_size = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getPickLpSize = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.setPickLpSize = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated RelayGasCostParam relay_gas_cost = 5;
 * @return {!Array<!proto.sgn.cbridge.v1.RelayGasCostParam>}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getRelayGasCostList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.RelayGasCostParam>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.RelayGasCostParam, 5));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.RelayGasCostParam>} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
*/
proto.sgn.cbridge.v1.CbrConfig.prototype.setRelayGasCostList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.RelayGasCostParam=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.addRelayGasCost = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.cbridge.v1.RelayGasCostParam, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.clearRelayGasCostList = function() {
  return this.setRelayGasCostList([]);
};


/**
 * repeated ChainAsset assets = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.ChainAsset>}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getAssetsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.ChainAsset>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.ChainAsset, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.ChainAsset>} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
*/
proto.sgn.cbridge.v1.CbrConfig.prototype.setAssetsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.ChainAsset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.ChainAsset}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.addAssets = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.ChainAsset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};


/**
 * repeated ChainPair chain_pairs = 3;
 * @return {!Array<!proto.sgn.cbridge.v1.ChainPair>}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getChainPairsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.ChainPair>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.ChainPair, 3));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.ChainPair>} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
*/
proto.sgn.cbridge.v1.CbrConfig.prototype.setChainPairsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.ChainPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.ChainPair}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.addChainPairs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.cbridge.v1.ChainPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.clearChainPairsList = function() {
  return this.setChainPairsList([]);
};


/**
 * repeated sgn.common.v1.ContractInfo cbr_contracts = 6;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getCbrContractsList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 6));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
*/
proto.sgn.cbridge.v1.CbrConfig.prototype.setCbrContractsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.addCbrContracts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.clearCbrContractsList = function() {
  return this.setCbrContractsList([]);
};


/**
 * repeated PerChainPairAssetOverride override = 7;
 * @return {!Array<!proto.sgn.cbridge.v1.PerChainPairAssetOverride>}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getOverrideList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.PerChainPairAssetOverride>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.PerChainPairAssetOverride, 7));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.PerChainPairAssetOverride>} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
*/
proto.sgn.cbridge.v1.CbrConfig.prototype.setOverrideList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.PerChainPairAssetOverride=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.addOverride = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.sgn.cbridge.v1.PerChainPairAssetOverride, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.clearOverrideList = function() {
  return this.setOverrideList([]);
};


/**
 * optional uint32 max_gain_perc = 8;
 * @return {number}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getMaxGainPerc = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.setMaxGainPerc = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool update_gas_cost = 9;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.getUpdateGasCost = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.CbrConfig} returns this
 */
proto.sgn.cbridge.v1.CbrConfig.prototype.setUpdateGasCost = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.CbrPrice.repeatedFields_ = [5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CbrPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CbrPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrPrice.toObject = function(includeInstance, msg) {
  var obj = {
    updateEpoch: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    assetPriceList: googleProtobuf.Message.toObjectList(msg.getAssetPriceList(),
    proto.sgn.cbridge.v1.AssetPrice.toObject, includeInstance),
    gasPriceList: googleProtobuf.Message.toObjectList(msg.getGasPriceList(),
    proto.sgn.cbridge.v1.GasPrice.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CbrPrice}
 */
proto.sgn.cbridge.v1.CbrPrice.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CbrPrice;
  return proto.sgn.cbridge.v1.CbrPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CbrPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CbrPrice}
 */
proto.sgn.cbridge.v1.CbrPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdateEpoch(value);
      break;
    case 5:
      var value = new proto.sgn.cbridge.v1.AssetPrice;
      reader.readMessage(value,proto.sgn.cbridge.v1.AssetPrice.deserializeBinaryFromReader);
      msg.addAssetPrice(value);
      break;
    case 6:
      var value = new proto.sgn.cbridge.v1.GasPrice;
      reader.readMessage(value,proto.sgn.cbridge.v1.GasPrice.deserializeBinaryFromReader);
      msg.addGasPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CbrPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CbrPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdateEpoch();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAssetPriceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sgn.cbridge.v1.AssetPrice.serializeBinaryToWriter
    );
  }
  f = message.getGasPriceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sgn.cbridge.v1.GasPrice.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 update_epoch = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.getUpdateEpoch = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CbrPrice} returns this
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.setUpdateEpoch = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated AssetPrice asset_price = 5;
 * @return {!Array<!proto.sgn.cbridge.v1.AssetPrice>}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.getAssetPriceList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.AssetPrice>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.AssetPrice, 5));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.AssetPrice>} value
 * @return {!proto.sgn.cbridge.v1.CbrPrice} returns this
*/
proto.sgn.cbridge.v1.CbrPrice.prototype.setAssetPriceList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.AssetPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.AssetPrice}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.addAssetPrice = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.cbridge.v1.AssetPrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrPrice} returns this
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.clearAssetPriceList = function() {
  return this.setAssetPriceList([]);
};


/**
 * repeated GasPrice gas_price = 6;
 * @return {!Array<!proto.sgn.cbridge.v1.GasPrice>}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.getGasPriceList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.GasPrice>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.GasPrice, 6));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.GasPrice>} value
 * @return {!proto.sgn.cbridge.v1.CbrPrice} returns this
*/
proto.sgn.cbridge.v1.CbrPrice.prototype.setGasPriceList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.GasPrice=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.GasPrice}
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.addGasPrice = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sgn.cbridge.v1.GasPrice, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.CbrPrice} returns this
 */
proto.sgn.cbridge.v1.CbrPrice.prototype.clearGasPriceList = function() {
  return this.setGasPriceList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.RelayGasCostParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.RelayGasCostParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.RelayGasCostParam.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    costBase: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    perValidator: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    perSig: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.RelayGasCostParam;
  return proto.sgn.cbridge.v1.RelayGasCostParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.RelayGasCostParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCostBase(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerValidator(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPerSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.RelayGasCostParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.RelayGasCostParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.RelayGasCostParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCostBase();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPerValidator();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPerSig();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam} returns this
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 cost_base = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.getCostBase = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam} returns this
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.setCostBase = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 per_validator = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.getPerValidator = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam} returns this
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.setPerValidator = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 per_sig = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.getPerSig = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayGasCostParam} returns this
 */
proto.sgn.cbridge.v1.RelayGasCostParam.prototype.setPerSig = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.AssetPrice.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.AssetPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.AssetPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.AssetPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chainIdsList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    price: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    extraPower10: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.AssetPrice}
 */
proto.sgn.cbridge.v1.AssetPrice.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.AssetPrice;
  return proto.sgn.cbridge.v1.AssetPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.AssetPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.AssetPrice}
 */
proto.sgn.cbridge.v1.AssetPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChainIds(values[i]);
      }
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExtraPower10(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.AssetPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.AssetPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.AssetPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getExtraPower10();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated uint64 chain_ids = 2;
 * @return {!Array<number>}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.getChainIdsList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.setChainIdsList = function(value) {
  return googleProtobuf.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.addChainIds = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.clearChainIdsList = function() {
  return this.setChainIdsList([]);
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.getPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.setPrice = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 extra_power10 = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.getExtraPower10 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.AssetPrice} returns this
 */
proto.sgn.cbridge.v1.AssetPrice.prototype.setExtraPower10 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.GasPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.GasPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.GasPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GasPrice.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    price: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.GasPrice}
 */
proto.sgn.cbridge.v1.GasPrice.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.GasPrice;
  return proto.sgn.cbridge.v1.GasPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.GasPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.GasPrice}
 */
proto.sgn.cbridge.v1.GasPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.GasPrice.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.GasPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.GasPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GasPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.GasPrice.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GasPrice} returns this
 */
proto.sgn.cbridge.v1.GasPrice.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string price = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.GasPrice.prototype.getPrice = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GasPrice} returns this
 */
proto.sgn.cbridge.v1.GasPrice.prototype.setPrice = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainAsset.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainAsset} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainAsset.toObject = function(includeInstance, msg) {
  var obj = {
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    decimal: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    maxFeeAmount: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    xferDisabled: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false),
    maxOutAmt: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainAsset}
 */
proto.sgn.cbridge.v1.ChainAsset.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainAsset;
  return proto.sgn.cbridge.v1.ChainAsset.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainAsset} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainAsset}
 */
proto.sgn.cbridge.v1.ChainAsset.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDecimal(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxFeeAmount(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setXferDisabled(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxOutAmt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainAsset.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainAsset} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainAsset.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDecimal();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getMaxFeeAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getXferDisabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getMaxOutAmt();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 chain_id = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string addr = 3;
 * @return {string}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 decimal = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getDecimal = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setDecimal = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string max_fee_amount = 5;
 * @return {string}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getMaxFeeAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setMaxFeeAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool xfer_disabled = 6;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getXferDisabled = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setXferDisabled = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string max_out_amt = 7;
 * @return {string}
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.getMaxOutAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.ChainAsset} returns this
 */
proto.sgn.cbridge.v1.ChainAsset.prototype.setMaxOutAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainPair.toObject = function(includeInstance, msg) {
  var obj = {
    chid1: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    chid2: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    weight1: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    fee1to2: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    fee2to1: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    constA: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    noCurve: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainPair}
 */
proto.sgn.cbridge.v1.ChainPair.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainPair;
  return proto.sgn.cbridge.v1.ChainPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainPair}
 */
proto.sgn.cbridge.v1.ChainPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChid1(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChid2(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeight1(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFee1to2(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFee2to1(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConstA(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setNoCurve(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChid1();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getChid2();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getWeight1();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getFee1to2();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getFee2to1();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getConstA();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getNoCurve();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional uint64 chid1 = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getChid1 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setChid1 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 chid2 = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getChid2 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setChid2 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 weight1 = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getWeight1 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setWeight1 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 fee1to2 = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getFee1to2 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setFee1to2 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 fee2to1 = 5;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getFee2to1 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setFee2to1 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 const_a = 6;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getConstA = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setConstA = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool no_curve = 7;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.ChainPair.prototype.getNoCurve = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.ChainPair} returns this
 */
proto.sgn.cbridge.v1.ChainPair.prototype.setNoCurve = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.PerChainPairAssetOverride.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.toObject = function(includeInstance, msg) {
  var f, obj = {
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chpair: (f = msg.getChpair()) && proto.sgn.cbridge.v1.ChainPair.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.PerChainPairAssetOverride;
  return proto.sgn.cbridge.v1.PerChainPairAssetOverride.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.ChainPair;
      reader.readMessage(value,proto.sgn.cbridge.v1.ChainPair.deserializeBinaryFromReader);
      msg.setChpair(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.PerChainPairAssetOverride.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChpair();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.cbridge.v1.ChainPair.serializeBinaryToWriter
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} returns this
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional ChainPair chpair = 2;
 * @return {?proto.sgn.cbridge.v1.ChainPair}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.getChpair = function() {
  return /** @type{?proto.sgn.cbridge.v1.ChainPair} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.cbridge.v1.ChainPair, 2));
};


/**
 * @param {?proto.sgn.cbridge.v1.ChainPair|undefined} value
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} returns this
*/
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.setChpair = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.PerChainPairAssetOverride} returns this
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.clearChpair = function() {
  return this.setChpair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.PerChainPairAssetOverride.prototype.hasChpair = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CbrProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CbrProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    cbrConfig: (f = msg.getCbrConfig()) && proto.sgn.cbridge.v1.CbrConfig.toObject(includeInstance, f),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CbrProposal}
 */
proto.sgn.cbridge.v1.CbrProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CbrProposal;
  return proto.sgn.cbridge.v1.CbrProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CbrProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CbrProposal}
 */
proto.sgn.cbridge.v1.CbrProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.cbridge.v1.CbrConfig;
      reader.readMessage(value,proto.sgn.cbridge.v1.CbrConfig.deserializeBinaryFromReader);
      msg.setCbrConfig(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CbrProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CbrProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CbrProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCbrConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.cbridge.v1.CbrConfig.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CbrProposal} returns this
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CbrProposal} returns this
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CbrConfig cbr_config = 3;
 * @return {?proto.sgn.cbridge.v1.CbrConfig}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.getCbrConfig = function() {
  return /** @type{?proto.sgn.cbridge.v1.CbrConfig} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.cbridge.v1.CbrConfig, 3));
};


/**
 * @param {?proto.sgn.cbridge.v1.CbrConfig|undefined} value
 * @return {!proto.sgn.cbridge.v1.CbrProposal} returns this
*/
proto.sgn.cbridge.v1.CbrProposal.prototype.setCbrConfig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.CbrProposal} returns this
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.clearCbrConfig = function() {
  return this.setCbrConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.hasCbrConfig = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CbrProposal} returns this
 */
proto.sgn.cbridge.v1.CbrProposal.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.OnChainEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.OnChainEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.OnChainEvent.toObject = function(includeInstance, msg) {
  var obj = {
    chainid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    evtype: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    elog: msg.getElog_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.OnChainEvent}
 */
proto.sgn.cbridge.v1.OnChainEvent.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.OnChainEvent;
  return proto.sgn.cbridge.v1.OnChainEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.OnChainEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.OnChainEvent}
 */
proto.sgn.cbridge.v1.OnChainEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvtype(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setElog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.OnChainEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.OnChainEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.OnChainEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEvtype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getElog_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint64 chainid = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.getChainid = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.OnChainEvent} returns this
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.setChainid = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string evtype = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.getEvtype = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.OnChainEvent} returns this
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.setEvtype = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes elog = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.getElog = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes elog = 3;
 * This is a type-conversion wrapper around `getElog()`
 * @return {string}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.getElog_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getElog()));
};


/**
 * optional bytes elog = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getElog()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.getElog_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getElog()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.OnChainEvent} returns this
 */
proto.sgn.cbridge.v1.OnChainEvent.prototype.setElog = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.RelayOnChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.RelayOnChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.RelayOnChain.toObject = function(includeInstance, msg) {
  var obj = {
    sender: msg.getSender_asB64(),
    receiver: msg.getReceiver_asB64(),
    token: msg.getToken_asB64(),
    amount: msg.getAmount_asB64(),
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    srcTransferId: msg.getSrcTransferId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.RelayOnChain}
 */
proto.sgn.cbridge.v1.RelayOnChain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.RelayOnChain;
  return proto.sgn.cbridge.v1.RelayOnChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.RelayOnChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.RelayOnChain}
 */
proto.sgn.cbridge.v1.RelayOnChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSrcTransferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.RelayOnChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.RelayOnChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.RelayOnChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getReceiver_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getAmount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getSrcTransferId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
};


/**
 * optional bytes sender = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSender = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes sender = 1;
 * This is a type-conversion wrapper around `getSender()`
 * @return {string}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSender_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSender()));
};


/**
 * optional bytes sender = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSender()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSender_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSender()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes receiver = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getReceiver = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes receiver = 2;
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {string}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getReceiver_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getReceiver()));
};


/**
 * optional bytes receiver = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getReceiver_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getReceiver()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setReceiver = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes token = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes token = 3;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes token = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setToken = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes amount = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getAmount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes amount = 4;
 * This is a type-conversion wrapper around `getAmount()`
 * @return {string}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getAmount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAmount()));
};


/**
 * optional bytes amount = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAmount()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getAmount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAmount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 src_chain_id = 5;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 dst_chain_id = 6;
 * @return {number}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bytes src_transfer_id = 7;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSrcTransferId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes src_transfer_id = 7;
 * This is a type-conversion wrapper around `getSrcTransferId()`
 * @return {string}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSrcTransferId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSrcTransferId()));
};


/**
 * optional bytes src_transfer_id = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSrcTransferId()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.getSrcTransferId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSrcTransferId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.RelayOnChain} returns this
 */
proto.sgn.cbridge.v1.RelayOnChain.prototype.setSrcTransferId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.WithdrawOnchain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.WithdrawOnchain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.WithdrawOnchain.toObject = function(includeInstance, msg) {
  var obj = {
    chainid: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    seqnum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    receiver: msg.getReceiver_asB64(),
    token: msg.getToken_asB64(),
    amount: msg.getAmount_asB64(),
    refid: msg.getRefid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.WithdrawOnchain;
  return proto.sgn.cbridge.v1.WithdrawOnchain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.WithdrawOnchain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqnum(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReceiver(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRefid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.WithdrawOnchain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.WithdrawOnchain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.WithdrawOnchain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSeqnum();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getReceiver_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAmount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getRefid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional uint64 chainid = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getChainid = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setChainid = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 seqnum = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getSeqnum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setSeqnum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes receiver = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getReceiver = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes receiver = 3;
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getReceiver_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getReceiver()));
};


/**
 * optional bytes receiver = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getReceiver_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getReceiver()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setReceiver = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes token = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes token = 4;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes token = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setToken = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes amount = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getAmount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes amount = 5;
 * This is a type-conversion wrapper around `getAmount()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getAmount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAmount()));
};


/**
 * optional bytes amount = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAmount()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getAmount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAmount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes refid = 6;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getRefid = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes refid = 6;
 * This is a type-conversion wrapper around `getRefid()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getRefid_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRefid()));
};


/**
 * optional bytes refid = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRefid()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.getRefid_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRefid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawOnchain} returns this
 */
proto.sgn.cbridge.v1.WithdrawOnchain.prototype.setRefid = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.XferRelay.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.XferRelay.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.XferRelay} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.XferRelay.toObject = function(includeInstance, msg) {
  var obj = {
    relay: msg.getRelay_asB64(),
    sortedSigsList: googleProtobuf.Message.toObjectList(msg.getSortedSigsList(),
    proto.sgn.cbridge.v1.AddrSig.toObject, includeInstance),
    lastReqTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    percFee: msg.getPercFee_asB64(),
    baseFee: msg.getBaseFee_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.XferRelay}
 */
proto.sgn.cbridge.v1.XferRelay.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.XferRelay;
  return proto.sgn.cbridge.v1.XferRelay.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.XferRelay} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.XferRelay}
 */
proto.sgn.cbridge.v1.XferRelay.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRelay(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.AddrSig;
      reader.readMessage(value,proto.sgn.cbridge.v1.AddrSig.deserializeBinaryFromReader);
      msg.addSortedSigs(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastReqTime(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPercFee(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBaseFee(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.XferRelay.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.XferRelay} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.XferRelay.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRelay_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSortedSigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.AddrSig.serializeBinaryToWriter
    );
  }
  f = message.getLastReqTime();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPercFee_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getBaseFee_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional bytes relay = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getRelay = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes relay = 1;
 * This is a type-conversion wrapper around `getRelay()`
 * @return {string}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getRelay_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRelay()));
};


/**
 * optional bytes relay = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRelay()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getRelay_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRelay()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
 */
proto.sgn.cbridge.v1.XferRelay.prototype.setRelay = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated AddrSig sorted_sigs = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.AddrSig>}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getSortedSigsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.AddrSig>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.AddrSig, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.AddrSig>} value
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
*/
proto.sgn.cbridge.v1.XferRelay.prototype.setSortedSigsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.AddrSig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.AddrSig}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.addSortedSigs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.AddrSig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
 */
proto.sgn.cbridge.v1.XferRelay.prototype.clearSortedSigsList = function() {
  return this.setSortedSigsList([]);
};


/**
 * optional int64 last_req_time = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getLastReqTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
 */
proto.sgn.cbridge.v1.XferRelay.prototype.setLastReqTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes perc_fee = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getPercFee = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes perc_fee = 4;
 * This is a type-conversion wrapper around `getPercFee()`
 * @return {string}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getPercFee_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getPercFee()));
};


/**
 * optional bytes perc_fee = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPercFee()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getPercFee_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getPercFee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
 */
proto.sgn.cbridge.v1.XferRelay.prototype.setPercFee = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes base_fee = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getBaseFee = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes base_fee = 5;
 * This is a type-conversion wrapper around `getBaseFee()`
 * @return {string}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getBaseFee_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBaseFee()));
};


/**
 * optional bytes base_fee = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBaseFee()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.XferRelay.prototype.getBaseFee_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBaseFee()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.XferRelay} returns this
 */
proto.sgn.cbridge.v1.XferRelay.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.WithdrawDetail.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.WithdrawDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.WithdrawDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.WithdrawDetail.toObject = function(includeInstance, msg) {
  var obj = {
    wdOnchain: msg.getWdOnchain_asB64(),
    sortedSigsList: googleProtobuf.Message.toObjectList(msg.getSortedSigsList(),
    proto.sgn.cbridge.v1.AddrSig.toObject, includeInstance),
    completed: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 3, false),
    lastReqTime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    xferid: msg.getXferid_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail}
 */
proto.sgn.cbridge.v1.WithdrawDetail.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.WithdrawDetail;
  return proto.sgn.cbridge.v1.WithdrawDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.WithdrawDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail}
 */
proto.sgn.cbridge.v1.WithdrawDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWdOnchain(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.AddrSig;
      reader.readMessage(value,proto.sgn.cbridge.v1.AddrSig.deserializeBinaryFromReader);
      msg.addSortedSigs(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompleted(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastReqTime(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setXferid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.WithdrawDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.WithdrawDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.WithdrawDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWdOnchain_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSortedSigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.AddrSig.serializeBinaryToWriter
    );
  }
  f = message.getCompleted();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getLastReqTime();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getXferid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional bytes wd_onchain = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getWdOnchain = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes wd_onchain = 1;
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getWdOnchain_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWdOnchain()));
};


/**
 * optional bytes wd_onchain = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getWdOnchain_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWdOnchain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.setWdOnchain = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated AddrSig sorted_sigs = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.AddrSig>}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getSortedSigsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.AddrSig>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.AddrSig, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.AddrSig>} value
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
*/
proto.sgn.cbridge.v1.WithdrawDetail.prototype.setSortedSigsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.AddrSig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.AddrSig}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.addSortedSigs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.AddrSig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.clearSortedSigsList = function() {
  return this.setSortedSigsList([]);
};


/**
 * optional bool completed = 3;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getCompleted = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.setCompleted = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 last_req_time = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getLastReqTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.setLastReqTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes xferId = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getXferid = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes xferId = 5;
 * This is a type-conversion wrapper around `getXferid()`
 * @return {string}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getXferid_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getXferid()));
};


/**
 * optional bytes xferId = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getXferid()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.getXferid_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getXferid()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.WithdrawDetail} returns this
 */
proto.sgn.cbridge.v1.WithdrawDetail.prototype.setXferid = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.AddrSig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.AddrSig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.AddrSig.toObject = function(includeInstance, msg) {
  var obj = {
    addr: msg.getAddr_asB64(),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.AddrSig}
 */
proto.sgn.cbridge.v1.AddrSig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.AddrSig;
  return proto.sgn.cbridge.v1.AddrSig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.AddrSig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.AddrSig}
 */
proto.sgn.cbridge.v1.AddrSig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddr(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.AddrSig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.AddrSig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.AddrSig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes addr = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getAddr = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes addr = 1;
 * This is a type-conversion wrapper around `getAddr()`
 * @return {string}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getAddr_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAddr()));
};


/**
 * optional bytes addr = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddr()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getAddr_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAddr()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.AddrSig} returns this
 */
proto.sgn.cbridge.v1.AddrSig.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig = 2;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.AddrSig.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.AddrSig} returns this
 */
proto.sgn.cbridge.v1.AddrSig.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.Signer.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.Signer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.Signer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Signer.toObject = function(includeInstance, msg) {
  var obj = {
    addr: msg.getAddr_asB64(),
    power: msg.getPower_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.Signer}
 */
proto.sgn.cbridge.v1.Signer.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.Signer;
  return proto.sgn.cbridge.v1.Signer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.Signer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.Signer}
 */
proto.sgn.cbridge.v1.Signer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAddr(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Signer.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.Signer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.Signer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Signer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPower_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes addr = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.Signer.prototype.getAddr = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes addr = 1;
 * This is a type-conversion wrapper around `getAddr()`
 * @return {string}
 */
proto.sgn.cbridge.v1.Signer.prototype.getAddr_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAddr()));
};


/**
 * optional bytes addr = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddr()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Signer.prototype.getAddr_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAddr()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.Signer} returns this
 */
proto.sgn.cbridge.v1.Signer.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes power = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.Signer.prototype.getPower = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes power = 2;
 * This is a type-conversion wrapper around `getPower()`
 * @return {string}
 */
proto.sgn.cbridge.v1.Signer.prototype.getPower_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getPower()));
};


/**
 * optional bytes power = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPower()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Signer.prototype.getPower_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getPower()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.Signer} returns this
 */
proto.sgn.cbridge.v1.Signer.prototype.setPower = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.ChainSigners.repeatedFields_ = [2,3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainSigners.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainSigners} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainSigners.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    sortedSignersList: googleProtobuf.Message.toObjectList(msg.getSortedSignersList(),
    proto.sgn.cbridge.v1.Signer.toObject, includeInstance),
    sortedSigsList: googleProtobuf.Message.toObjectList(msg.getSortedSigsList(),
    proto.sgn.cbridge.v1.AddrSig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainSigners}
 */
proto.sgn.cbridge.v1.ChainSigners.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainSigners;
  return proto.sgn.cbridge.v1.ChainSigners.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainSigners} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainSigners}
 */
proto.sgn.cbridge.v1.ChainSigners.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.Signer;
      reader.readMessage(value,proto.sgn.cbridge.v1.Signer.deserializeBinaryFromReader);
      msg.addSortedSigners(value);
      break;
    case 3:
      var value = new proto.sgn.cbridge.v1.AddrSig;
      reader.readMessage(value,proto.sgn.cbridge.v1.AddrSig.deserializeBinaryFromReader);
      msg.addSortedSigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainSigners.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainSigners} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainSigners.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSortedSignersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.Signer.serializeBinaryToWriter
    );
  }
  f = message.getSortedSigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.cbridge.v1.AddrSig.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainSigners} returns this
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Signer sorted_signers = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.Signer>}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.getSortedSignersList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.Signer>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.Signer, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.Signer>} value
 * @return {!proto.sgn.cbridge.v1.ChainSigners} returns this
*/
proto.sgn.cbridge.v1.ChainSigners.prototype.setSortedSignersList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.Signer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.Signer}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.addSortedSigners = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.Signer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.ChainSigners} returns this
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.clearSortedSignersList = function() {
  return this.setSortedSignersList([]);
};


/**
 * repeated AddrSig sorted_sigs = 3;
 * @return {!Array<!proto.sgn.cbridge.v1.AddrSig>}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.getSortedSigsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.AddrSig>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.AddrSig, 3));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.AddrSig>} value
 * @return {!proto.sgn.cbridge.v1.ChainSigners} returns this
*/
proto.sgn.cbridge.v1.ChainSigners.prototype.setSortedSigsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.AddrSig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.AddrSig}
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.addSortedSigs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.cbridge.v1.AddrSig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.ChainSigners} returns this
 */
proto.sgn.cbridge.v1.ChainSigners.prototype.clearSortedSigsList = function() {
  return this.setSortedSigsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.LatestSigners.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.LatestSigners.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.LatestSigners} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LatestSigners.toObject = function(includeInstance, msg) {
  var obj = {
    sortedSignersList: googleProtobuf.Message.toObjectList(msg.getSortedSignersList(),
    proto.sgn.cbridge.v1.Signer.toObject, includeInstance),
    signersBytes: msg.getSignersBytes_asB64(),
    triggerTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    lastSignTime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.LatestSigners}
 */
proto.sgn.cbridge.v1.LatestSigners.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.LatestSigners;
  return proto.sgn.cbridge.v1.LatestSigners.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.LatestSigners} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.LatestSigners}
 */
proto.sgn.cbridge.v1.LatestSigners.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.cbridge.v1.Signer;
      reader.readMessage(value,proto.sgn.cbridge.v1.Signer.deserializeBinaryFromReader);
      msg.addSortedSigners(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignersBytes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTriggerTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastSignTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.LatestSigners.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.LatestSigners} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LatestSigners.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSortedSignersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.cbridge.v1.Signer.serializeBinaryToWriter
    );
  }
  f = message.getSignersBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTriggerTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getLastSignTime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * repeated Signer sorted_signers = 1;
 * @return {!Array<!proto.sgn.cbridge.v1.Signer>}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getSortedSignersList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.Signer>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.Signer, 1));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.Signer>} value
 * @return {!proto.sgn.cbridge.v1.LatestSigners} returns this
*/
proto.sgn.cbridge.v1.LatestSigners.prototype.setSortedSignersList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.Signer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.Signer}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.addSortedSigners = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.cbridge.v1.Signer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.LatestSigners} returns this
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.clearSortedSignersList = function() {
  return this.setSortedSignersList([]);
};


/**
 * optional bytes signers_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getSignersBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes signers_bytes = 2;
 * This is a type-conversion wrapper around `getSignersBytes()`
 * @return {string}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getSignersBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignersBytes()));
};


/**
 * optional bytes signers_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignersBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getSignersBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignersBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.LatestSigners} returns this
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.setSignersBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint64 trigger_time = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getTriggerTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.LatestSigners} returns this
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.setTriggerTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 last_sign_time = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.getLastSignTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.LatestSigners} returns this
 */
proto.sgn.cbridge.v1.LatestSigners.prototype.setLastSignTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.sgn.cbridge.v1.XferStatus = {
  UNKNOWN: 0,
  OK_TO_RELAY: 1,
  SUCCESS: 2,
  BAD_LIQUIDITY: 3,
  BAD_SLIPPAGE: 4,
  BAD_TOKEN: 5,
  REFUND_REQUESTED: 6,
  REFUND_DONE: 7,
  BAD_XFER_DISABLED: 8,
  BAD_DEST_CHAIN: 9,
  EXCEED_MAX_OUT_AMOUNT: 10,
  XFER_DELAYED: 11,
  BAD_ADDRESS: 12
};

goog.object.extend(exports, proto.sgn.cbridge.v1);
});

var query_pb$1 = createCommonjsModule$1(function (module, exports) {
// source: sgn/cbridge/v1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, cbridge_pb);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainTokenAddrPair', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainTokensConfigRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.ChainTokensConfigResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CheckChainTokenValidRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CheckChainTokenValidResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CheckLiqSumRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.CheckLiqSumResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.EmptyRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.GetFeePercentageRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.GetFeePercentageResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.GetFeeRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.GetFeeResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.LiquidityDetail', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.LiquidityDetailListRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.LiquidityDetailListResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryAssetPriceRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryAssetPriceResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryAssetsResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryChainSignersRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryChainSignersResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryConfigResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryDebugAnyRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryDebugAnyResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryLPsRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryLPsResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryLatestSignersResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryLiquidityStatusResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryParamsResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryRelayRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryRelayResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryTotalLiquidityRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryTotalLiquidityResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryTransferStatusRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryTransferStatusResponse', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.Token', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.Tokens', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.TransferHistoryStatus', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.TransferStatus', null, global);
goog.exportSymbol('proto.sgn.cbridge.v1.WithdrawStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.EmptyRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.EmptyRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.EmptyRequest.displayName = 'proto.sgn.cbridge.v1.EmptyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryParamsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryParamsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryParamsResponse.displayName = 'proto.sgn.cbridge.v1.QueryParamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryConfigResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryConfigResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryConfigResponse.displayName = 'proto.sgn.cbridge.v1.QueryConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryRelayRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryRelayRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryRelayRequest.displayName = 'proto.sgn.cbridge.v1.QueryRelayRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryRelayResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryRelayResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryRelayResponse.displayName = 'proto.sgn.cbridge.v1.QueryRelayResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryChainSignersRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryChainSignersRequest.displayName = 'proto.sgn.cbridge.v1.QueryChainSignersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryChainSignersResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryChainSignersResponse.displayName = 'proto.sgn.cbridge.v1.QueryChainSignersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryLatestSignersResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryLatestSignersResponse.displayName = 'proto.sgn.cbridge.v1.QueryLatestSignersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryDebugAnyRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryDebugAnyRequest.displayName = 'proto.sgn.cbridge.v1.QueryDebugAnyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryDebugAnyResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryDebugAnyResponse.displayName = 'proto.sgn.cbridge.v1.QueryDebugAnyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryAssetsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.QueryAssetsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryAssetsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryAssetsResponse.displayName = 'proto.sgn.cbridge.v1.QueryAssetsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryAssetPriceRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryAssetPriceRequest.displayName = 'proto.sgn.cbridge.v1.QueryAssetPriceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryAssetPriceResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryAssetPriceResponse.displayName = 'proto.sgn.cbridge.v1.QueryAssetPriceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryLPsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryLPsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryLPsRequest.displayName = 'proto.sgn.cbridge.v1.QueryLPsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryLPsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.QueryLPsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryLPsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryLPsResponse.displayName = 'proto.sgn.cbridge.v1.QueryLPsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.CheckLiqSumRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CheckLiqSumRequest.displayName = 'proto.sgn.cbridge.v1.CheckLiqSumRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.CheckLiqSumResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CheckLiqSumResponse.displayName = 'proto.sgn.cbridge.v1.CheckLiqSumResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainTokensConfigRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainTokensConfigRequest.displayName = 'proto.sgn.cbridge.v1.ChainTokensConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainTokensConfigResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainTokensConfigResponse.displayName = 'proto.sgn.cbridge.v1.ChainTokensConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.Tokens = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.Tokens.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.Tokens, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.Tokens.displayName = 'proto.sgn.cbridge.v1.Tokens';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.GetFeeRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.GetFeeRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.GetFeeRequest.displayName = 'proto.sgn.cbridge.v1.GetFeeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.GetFeeResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.GetFeeResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.GetFeeResponse.displayName = 'proto.sgn.cbridge.v1.GetFeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.GetFeePercentageRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.GetFeePercentageRequest.displayName = 'proto.sgn.cbridge.v1.GetFeePercentageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.GetFeePercentageResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.GetFeePercentageResponse.displayName = 'proto.sgn.cbridge.v1.GetFeePercentageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.QueryTransferStatusRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryTransferStatusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryTransferStatusRequest.displayName = 'proto.sgn.cbridge.v1.QueryTransferStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryTransferStatusResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryTransferStatusResponse.displayName = 'proto.sgn.cbridge.v1.QueryTransferStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.LiquidityDetail = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.LiquidityDetail, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.LiquidityDetail.displayName = 'proto.sgn.cbridge.v1.LiquidityDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.ChainTokenAddrPair, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.ChainTokenAddrPair.displayName = 'proto.sgn.cbridge.v1.ChainTokenAddrPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.LiquidityDetailListRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.LiquidityDetailListRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.LiquidityDetailListRequest.displayName = 'proto.sgn.cbridge.v1.LiquidityDetailListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.cbridge.v1.LiquidityDetailListResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.cbridge.v1.LiquidityDetailListResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.LiquidityDetailListResponse.displayName = 'proto.sgn.cbridge.v1.LiquidityDetailListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryTotalLiquidityRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.displayName = 'proto.sgn.cbridge.v1.QueryTotalLiquidityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryTotalLiquidityResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.displayName = 'proto.sgn.cbridge.v1.QueryTotalLiquidityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.displayName = 'proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.displayName = 'proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.QueryLiquidityStatusResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.displayName = 'proto.sgn.cbridge.v1.QueryLiquidityStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.CheckChainTokenValidRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CheckChainTokenValidRequest.displayName = 'proto.sgn.cbridge.v1.CheckChainTokenValidRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.CheckChainTokenValidResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.CheckChainTokenValidResponse.displayName = 'proto.sgn.cbridge.v1.CheckChainTokenValidResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.TransferStatus = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.TransferStatus, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.TransferStatus.displayName = 'proto.sgn.cbridge.v1.TransferStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.cbridge.v1.Token = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.cbridge.v1.Token, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.cbridge.v1.Token.displayName = 'proto.sgn.cbridge.v1.Token';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.EmptyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.EmptyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.EmptyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.EmptyRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.EmptyRequest}
 */
proto.sgn.cbridge.v1.EmptyRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.EmptyRequest;
  return proto.sgn.cbridge.v1.EmptyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.EmptyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.EmptyRequest}
 */
proto.sgn.cbridge.v1.EmptyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.EmptyRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.EmptyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.EmptyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.EmptyRequest.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && cbridge_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryParamsResponse}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryParamsResponse;
  return proto.sgn.cbridge.v1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryParamsResponse}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.Params;
      reader.readMessage(value,cbridge_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cbridge_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.sgn.cbridge.v1.Params}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.sgn.cbridge.v1.Params} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.Params, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.Params|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryParamsResponse} returns this
*/
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.setParams = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryParamsResponse} returns this
 */
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryParamsResponse.prototype.hasParams = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cbrconfig: (f = msg.getCbrconfig()) && cbridge_pb.CbrConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryConfigResponse}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryConfigResponse;
  return proto.sgn.cbridge.v1.QueryConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryConfigResponse}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.CbrConfig;
      reader.readMessage(value,cbridge_pb.CbrConfig.deserializeBinaryFromReader);
      msg.setCbrconfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCbrconfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cbridge_pb.CbrConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional CbrConfig cbrConfig = 1;
 * @return {?proto.sgn.cbridge.v1.CbrConfig}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.getCbrconfig = function() {
  return /** @type{?proto.sgn.cbridge.v1.CbrConfig} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.CbrConfig, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.CbrConfig|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryConfigResponse} returns this
*/
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.setCbrconfig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryConfigResponse} returns this
 */
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.clearCbrconfig = function() {
  return this.setCbrconfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryConfigResponse.prototype.hasCbrconfig = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryRelayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryRelayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryRelayRequest.toObject = function(includeInstance, msg) {
  var obj = {
    xrefId: msg.getXrefId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryRelayRequest}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryRelayRequest;
  return proto.sgn.cbridge.v1.QueryRelayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryRelayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryRelayRequest}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setXrefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryRelayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryRelayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryRelayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXrefId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes xref_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.getXrefId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes xref_id = 1;
 * This is a type-conversion wrapper around `getXrefId()`
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.getXrefId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getXrefId()));
};


/**
 * optional bytes xref_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getXrefId()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.getXrefId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getXrefId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.QueryRelayRequest} returns this
 */
proto.sgn.cbridge.v1.QueryRelayRequest.prototype.setXrefId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryRelayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryRelayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryRelayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    xferRelay: (f = msg.getXferRelay()) && cbridge_pb.XferRelay.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryRelayResponse}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryRelayResponse;
  return proto.sgn.cbridge.v1.QueryRelayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryRelayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryRelayResponse}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.XferRelay;
      reader.readMessage(value,cbridge_pb.XferRelay.deserializeBinaryFromReader);
      msg.setXferRelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryRelayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryRelayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryRelayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getXferRelay();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cbridge_pb.XferRelay.serializeBinaryToWriter
    );
  }
};


/**
 * optional XferRelay xfer_relay = 1;
 * @return {?proto.sgn.cbridge.v1.XferRelay}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.getXferRelay = function() {
  return /** @type{?proto.sgn.cbridge.v1.XferRelay} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.XferRelay, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.XferRelay|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryRelayResponse} returns this
*/
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.setXferRelay = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryRelayResponse} returns this
 */
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.clearXferRelay = function() {
  return this.setXferRelay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryRelayResponse.prototype.hasXferRelay = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryChainSignersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersRequest}
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryChainSignersRequest;
  return proto.sgn.cbridge.v1.QueryChainSignersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersRequest}
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryChainSignersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersRequest} returns this
 */
proto.sgn.cbridge.v1.QueryChainSignersRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryChainSignersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainSigners: (f = msg.getChainSigners()) && cbridge_pb.ChainSigners.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersResponse}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryChainSignersResponse;
  return proto.sgn.cbridge.v1.QueryChainSignersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersResponse}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.ChainSigners;
      reader.readMessage(value,cbridge_pb.ChainSigners.deserializeBinaryFromReader);
      msg.setChainSigners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryChainSignersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryChainSignersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainSigners();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cbridge_pb.ChainSigners.serializeBinaryToWriter
    );
  }
};


/**
 * optional ChainSigners chain_signers = 1;
 * @return {?proto.sgn.cbridge.v1.ChainSigners}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.getChainSigners = function() {
  return /** @type{?proto.sgn.cbridge.v1.ChainSigners} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.ChainSigners, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.ChainSigners|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersResponse} returns this
*/
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.setChainSigners = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryChainSignersResponse} returns this
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.clearChainSigners = function() {
  return this.setChainSigners(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryChainSignersResponse.prototype.hasChainSigners = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryLatestSignersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryLatestSignersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    latestSigners: (f = msg.getLatestSigners()) && cbridge_pb.LatestSigners.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryLatestSignersResponse}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryLatestSignersResponse;
  return proto.sgn.cbridge.v1.QueryLatestSignersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryLatestSignersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryLatestSignersResponse}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.LatestSigners;
      reader.readMessage(value,cbridge_pb.LatestSigners.deserializeBinaryFromReader);
      msg.setLatestSigners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryLatestSignersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryLatestSignersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatestSigners();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      cbridge_pb.LatestSigners.serializeBinaryToWriter
    );
  }
};


/**
 * optional LatestSigners latest_signers = 1;
 * @return {?proto.sgn.cbridge.v1.LatestSigners}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.getLatestSigners = function() {
  return /** @type{?proto.sgn.cbridge.v1.LatestSigners} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.LatestSigners, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.LatestSigners|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryLatestSignersResponse} returns this
*/
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.setLatestSigners = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryLatestSignersResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.clearLatestSigners = function() {
  return this.setLatestSigners(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryLatestSignersResponse.prototype.hasLatestSigners = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryDebugAnyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.toObject = function(includeInstance, msg) {
  var obj = {
    key: msg.getKey_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyRequest}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryDebugAnyRequest;
  return proto.sgn.cbridge.v1.QueryDebugAnyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyRequest}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryDebugAnyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes key = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.getKey = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes key = 1;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyRequest} returns this
 */
proto.sgn.cbridge.v1.QueryDebugAnyRequest.prototype.setKey = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryDebugAnyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.toObject = function(includeInstance, msg) {
  var obj = {
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyResponse}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryDebugAnyResponse;
  return proto.sgn.cbridge.v1.QueryDebugAnyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyResponse}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryDebugAnyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryDebugAnyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.cbridge.v1.QueryDebugAnyResponse} returns this
 */
proto.sgn.cbridge.v1.QueryDebugAnyResponse.prototype.setData = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryAssetsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryAssetsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    assetsList: googleProtobuf.Message.toObjectList(msg.getAssetsList(),
    cbridge_pb.ChainAsset.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryAssetsResponse}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryAssetsResponse;
  return proto.sgn.cbridge.v1.QueryAssetsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryAssetsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryAssetsResponse}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new cbridge_pb.ChainAsset;
      reader.readMessage(value,cbridge_pb.ChainAsset.deserializeBinaryFromReader);
      msg.addAssets(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryAssetsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryAssetsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      cbridge_pb.ChainAsset.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChainAsset assets = 1;
 * @return {!Array<!proto.sgn.cbridge.v1.ChainAsset>}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.getAssetsList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.ChainAsset>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, cbridge_pb.ChainAsset, 1));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.ChainAsset>} value
 * @return {!proto.sgn.cbridge.v1.QueryAssetsResponse} returns this
*/
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.setAssetsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.ChainAsset=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.ChainAsset}
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.addAssets = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.cbridge.v1.ChainAsset, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.QueryAssetsResponse} returns this
 */
proto.sgn.cbridge.v1.QueryAssetsResponse.prototype.clearAssetsList = function() {
  return this.setAssetsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryAssetPriceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.toObject = function(includeInstance, msg) {
  var obj = {
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceRequest}
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryAssetPriceRequest;
  return proto.sgn.cbridge.v1.QueryAssetPriceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceRequest}
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryAssetPriceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceRequest} returns this
 */
proto.sgn.cbridge.v1.QueryAssetPriceRequest.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryAssetPriceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.toObject = function(includeInstance, msg) {
  var obj = {
    price: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    extraPower10: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceResponse}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryAssetPriceResponse;
  return proto.sgn.cbridge.v1.QueryAssetPriceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceResponse}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExtraPower10(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryAssetPriceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryAssetPriceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getExtraPower10();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 price = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.getPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceResponse} returns this
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.setPrice = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 extra_power10 = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.getExtraPower10 = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryAssetPriceResponse} returns this
 */
proto.sgn.cbridge.v1.QueryAssetPriceResponse.prototype.setExtraPower10 = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryLPsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryLPsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLPsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryLPsRequest}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryLPsRequest;
  return proto.sgn.cbridge.v1.QueryLPsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryLPsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryLPsRequest}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryLPsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryLPsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLPsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryLPsRequest} returns this
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.getTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.QueryLPsRequest} returns this
 */
proto.sgn.cbridge.v1.QueryLPsRequest.prototype.setTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.QueryLPsResponse.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryLPsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryLPsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLPsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    lpsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryLPsResponse}
 */
proto.sgn.cbridge.v1.QueryLPsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryLPsResponse;
  return proto.sgn.cbridge.v1.QueryLPsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryLPsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryLPsResponse}
 */
proto.sgn.cbridge.v1.QueryLPsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLps(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryLPsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryLPsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLPsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLpsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string lps = 1;
 * @return {!Array<string>}
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.getLpsList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.cbridge.v1.QueryLPsResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.setLpsList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.QueryLPsResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.addLps = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.QueryLPsResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLPsResponse.prototype.clearLpsList = function() {
  return this.setLpsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CheckLiqSumRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumRequest}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CheckLiqSumRequest;
  return proto.sgn.cbridge.v1.CheckLiqSumRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumRequest}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CheckLiqSumRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumRequest} returns this
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.getTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumRequest} returns this
 */
proto.sgn.cbridge.v1.CheckLiqSumRequest.prototype.setTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CheckLiqSumResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.toObject = function(includeInstance, msg) {
  var obj = {
    liqsum: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sumiter: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumResponse}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CheckLiqSumResponse;
  return proto.sgn.cbridge.v1.CheckLiqSumResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumResponse}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiqsum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSumiter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CheckLiqSumResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CheckLiqSumResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiqsum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSumiter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string liqsum = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.getLiqsum = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumResponse} returns this
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.setLiqsum = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sumiter = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.getSumiter = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CheckLiqSumResponse} returns this
 */
proto.sgn.cbridge.v1.CheckLiqSumResponse.prototype.setSumiter = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainTokensConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainTokensConfigRequest}
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainTokensConfigRequest;
  return proto.sgn.cbridge.v1.ChainTokensConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainTokensConfigRequest}
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainTokensConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokensConfigRequest.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainTokensConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainTokensMap: (f = msg.getChainTokensMap()) ? f.toObject(includeInstance, proto.sgn.cbridge.v1.Tokens.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainTokensConfigResponse}
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainTokensConfigResponse;
  return proto.sgn.cbridge.v1.ChainTokensConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainTokensConfigResponse}
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = msg.getChainTokensMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.cbridge.v1.Tokens.deserializeBinaryFromReader, "", new proto.sgn.cbridge.v1.Tokens());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainTokensConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainTokensConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainTokensMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.cbridge.v1.Tokens.serializeBinaryToWriter);
  }
};


/**
 * map<string, Tokens> chain_tokens = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.cbridge.v1.Tokens>}
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.prototype.getChainTokensMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.cbridge.v1.Tokens>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.sgn.cbridge.v1.Tokens));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.cbridge.v1.ChainTokensConfigResponse} returns this
 */
proto.sgn.cbridge.v1.ChainTokensConfigResponse.prototype.clearChainTokensMap = function() {
  this.getChainTokensMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.Tokens.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.Tokens.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.Tokens.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.Tokens} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Tokens.toObject = function(includeInstance, msg) {
  var obj = {
    tokensList: googleProtobuf.Message.toObjectList(msg.getTokensList(),
    proto.sgn.cbridge.v1.Token.toObject, includeInstance),
    contractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    blockDelay: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.Tokens}
 */
proto.sgn.cbridge.v1.Tokens.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.Tokens;
  return proto.sgn.cbridge.v1.Tokens.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.Tokens} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.Tokens}
 */
proto.sgn.cbridge.v1.Tokens.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.cbridge.v1.Token;
      reader.readMessage(value,proto.sgn.cbridge.v1.Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Tokens.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.Tokens.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.Tokens} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Tokens.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.cbridge.v1.Token.serializeBinaryToWriter
    );
  }
  f = message.getContractAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockDelay();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * repeated Token tokens = 1;
 * @return {!Array<!proto.sgn.cbridge.v1.Token>}
 */
proto.sgn.cbridge.v1.Tokens.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.Token, 1));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.Token>} value
 * @return {!proto.sgn.cbridge.v1.Tokens} returns this
*/
proto.sgn.cbridge.v1.Tokens.prototype.setTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.Token}
 */
proto.sgn.cbridge.v1.Tokens.prototype.addTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.cbridge.v1.Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.Tokens} returns this
 */
proto.sgn.cbridge.v1.Tokens.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};


/**
 * optional string contract_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.Tokens.prototype.getContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.Tokens} returns this
 */
proto.sgn.cbridge.v1.Tokens.prototype.setContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 block_delay = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.Tokens.prototype.getBlockDelay = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.Tokens} returns this
 */
proto.sgn.cbridge.v1.Tokens.prototype.setBlockDelay = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.GetFeeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.GetFeeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeeRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    srcTokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    amt: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    lpAddr: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest}
 */
proto.sgn.cbridge.v1.GetFeeRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.GetFeeRequest;
  return proto.sgn.cbridge.v1.GetFeeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.GetFeeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest}
 */
proto.sgn.cbridge.v1.GetFeeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcTokenAddr(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLpAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.GetFeeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.GetFeeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSrcTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLpAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 src_chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 dst_chain_id = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string src_token_addr = 3;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.getSrcTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.setSrcTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string amt = 4;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.getAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.setAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string lp_addr = 5;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.getLpAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeeRequest.prototype.setLpAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.GetFeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.GetFeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeeResponse.toObject = function(includeInstance, msg) {
  var obj = {
    eqValueTokenAmt: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    percFee: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    baseFee: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    decimal: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse}
 */
proto.sgn.cbridge.v1.GetFeeResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.GetFeeResponse;
  return proto.sgn.cbridge.v1.GetFeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.GetFeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse}
 */
proto.sgn.cbridge.v1.GetFeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEqValueTokenAmt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPercFee(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFee(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDecimal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.GetFeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.GetFeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEqValueTokenAmt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPercFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseFee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDecimal();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string eq_value_token_amt = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.getEqValueTokenAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse} returns this
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.setEqValueTokenAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string perc_fee = 3;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.getPercFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse} returns this
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.setPercFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string base_fee = 5;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.getBaseFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse} returns this
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 decimal = 4;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.getDecimal = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeeResponse} returns this
 */
proto.sgn.cbridge.v1.GetFeeResponse.prototype.setDecimal = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.GetFeePercentageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageRequest}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.GetFeePercentageRequest;
  return proto.sgn.cbridge.v1.GetFeePercentageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageRequest}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.GetFeePercentageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 src_chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 dst_chain_id = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string symbol = 3;
 * @return {string}
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageRequest} returns this
 */
proto.sgn.cbridge.v1.GetFeePercentageRequest.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.GetFeePercentageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.toObject = function(includeInstance, msg) {
  var obj = {
    feePerc: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageResponse}
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.GetFeePercentageResponse;
  return proto.sgn.cbridge.v1.GetFeePercentageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageResponse}
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFeePerc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.GetFeePercentageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.GetFeePercentageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeePerc();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 fee_perc = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.prototype.getFeePerc = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.GetFeePercentageResponse} returns this
 */
proto.sgn.cbridge.v1.GetFeePercentageResponse.prototype.setFeePerc = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryTransferStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferIdList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusRequest}
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryTransferStatusRequest;
  return proto.sgn.cbridge.v1.QueryTransferStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusRequest}
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryTransferStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string transfer_id = 1;
 * @return {!Array<string>}
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.getTransferIdList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.setTransferIdList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.addTransferId = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryTransferStatusRequest.prototype.clearTransferIdList = function() {
  return this.setTransferIdList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryTransferStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusMap: (f = msg.getStatusMap()) ? f.toObject(includeInstance, proto.sgn.cbridge.v1.TransferStatus.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusResponse}
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryTransferStatusResponse;
  return proto.sgn.cbridge.v1.QueryTransferStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusResponse}
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = msg.getStatusMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.cbridge.v1.TransferStatus.deserializeBinaryFromReader, "", new proto.sgn.cbridge.v1.TransferStatus());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryTransferStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryTransferStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.cbridge.v1.TransferStatus.serializeBinaryToWriter);
  }
};


/**
 * map<string, TransferStatus> status = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.cbridge.v1.TransferStatus>}
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.prototype.getStatusMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.cbridge.v1.TransferStatus>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.sgn.cbridge.v1.TransferStatus));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.cbridge.v1.QueryTransferStatusResponse} returns this
 */
proto.sgn.cbridge.v1.QueryTransferStatusResponse.prototype.clearStatusMap = function() {
  this.getStatusMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.LiquidityDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.LiquidityDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    token: (f = msg.getToken()) && proto.sgn.cbridge.v1.Token.toObject(includeInstance, f),
    usrLiquidity: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    usrLpFeeEarning: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    totalLiquidity: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail}
 */
proto.sgn.cbridge.v1.LiquidityDetail.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.LiquidityDetail;
  return proto.sgn.cbridge.v1.LiquidityDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail}
 */
proto.sgn.cbridge.v1.LiquidityDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.Token;
      reader.readMessage(value,proto.sgn.cbridge.v1.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrLiquidity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrLpFeeEarning(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalLiquidity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.LiquidityDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.cbridge.v1.Token.serializeBinaryToWriter
    );
  }
  f = message.getUsrLiquidity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsrLpFeeEarning();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalLiquidity();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Token token = 2;
 * @return {?proto.sgn.cbridge.v1.Token}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.getToken = function() {
  return /** @type{?proto.sgn.cbridge.v1.Token} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.cbridge.v1.Token, 2));
};


/**
 * @param {?proto.sgn.cbridge.v1.Token|undefined} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
*/
proto.sgn.cbridge.v1.LiquidityDetail.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string usr_liquidity = 3;
 * @return {string}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.getUsrLiquidity = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.setUsrLiquidity = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string usr_lp_fee_earning = 4;
 * @return {string}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.getUsrLpFeeEarning = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.setUsrLpFeeEarning = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string total_liquidity = 5;
 * @return {string}
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.getTotalLiquidity = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetail.prototype.setTotalLiquidity = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.ChainTokenAddrPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.ChainTokenAddrPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.ChainTokenAddrPair}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.ChainTokenAddrPair;
  return proto.sgn.cbridge.v1.ChainTokenAddrPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.ChainTokenAddrPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.ChainTokenAddrPair}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.ChainTokenAddrPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.ChainTokenAddrPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.ChainTokenAddrPair} returns this
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.getTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.ChainTokenAddrPair} returns this
 */
proto.sgn.cbridge.v1.ChainTokenAddrPair.prototype.setTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.LiquidityDetailListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    lpAddr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chainTokenList: googleProtobuf.Message.toObjectList(msg.getChainTokenList(),
    proto.sgn.cbridge.v1.ChainTokenAddrPair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListRequest}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.LiquidityDetailListRequest;
  return proto.sgn.cbridge.v1.LiquidityDetailListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListRequest}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLpAddr(value);
      break;
    case 2:
      var value = new proto.sgn.cbridge.v1.ChainTokenAddrPair;
      reader.readMessage(value,proto.sgn.cbridge.v1.ChainTokenAddrPair.deserializeBinaryFromReader);
      msg.addChainToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.LiquidityDetailListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLpAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainTokenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.ChainTokenAddrPair.serializeBinaryToWriter
    );
  }
};


/**
 * optional string lp_addr = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.getLpAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.setLpAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ChainTokenAddrPair chain_token = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.ChainTokenAddrPair>}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.getChainTokenList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.ChainTokenAddrPair>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.ChainTokenAddrPair, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.ChainTokenAddrPair>} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} returns this
*/
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.setChainTokenList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.ChainTokenAddrPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.ChainTokenAddrPair}
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.addChainToken = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.ChainTokenAddrPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListRequest} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetailListRequest.prototype.clearChainTokenList = function() {
  return this.setChainTokenList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.LiquidityDetailListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.toObject = function(includeInstance, msg) {
  var obj = {
    liquidityDetailList: googleProtobuf.Message.toObjectList(msg.getLiquidityDetailList(),
    proto.sgn.cbridge.v1.LiquidityDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListResponse}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.LiquidityDetailListResponse;
  return proto.sgn.cbridge.v1.LiquidityDetailListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListResponse}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.sgn.cbridge.v1.LiquidityDetail;
      reader.readMessage(value,proto.sgn.cbridge.v1.LiquidityDetail.deserializeBinaryFromReader);
      msg.addLiquidityDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.LiquidityDetailListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.LiquidityDetailListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLiquidityDetailList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.cbridge.v1.LiquidityDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LiquidityDetail liquidity_detail = 2;
 * @return {!Array<!proto.sgn.cbridge.v1.LiquidityDetail>}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.getLiquidityDetailList = function() {
  return /** @type{!Array<!proto.sgn.cbridge.v1.LiquidityDetail>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.cbridge.v1.LiquidityDetail, 2));
};


/**
 * @param {!Array<!proto.sgn.cbridge.v1.LiquidityDetail>} value
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListResponse} returns this
*/
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.setLiquidityDetailList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.cbridge.v1.LiquidityDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.cbridge.v1.LiquidityDetail}
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.addLiquidityDetail = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.cbridge.v1.LiquidityDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.cbridge.v1.LiquidityDetailListResponse} returns this
 */
proto.sgn.cbridge.v1.LiquidityDetailListResponse.prototype.clearLiquidityDetailList = function() {
  return this.setLiquidityDetailList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryTotalLiquidityRequest;
  return proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest} returns this
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.getTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityRequest} returns this
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityRequest.prototype.setTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.toObject = function(includeInstance, msg) {
  var obj = {
    totalLiq: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryTotalLiquidityResponse;
  return proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalLiq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalLiq();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string total_liq = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.prototype.getTotalLiq = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.QueryTotalLiquidityResponse} returns this
 */
proto.sgn.cbridge.v1.QueryTotalLiquidityResponse.prototype.setTotalLiq = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest;
  return proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 seq_num = 2;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryAddLiquidityStatusRequest.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.toObject = function(includeInstance, msg) {
  var obj = {
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    usrAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest;
  return proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUsrAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 seq_num = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string usr_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.getUsrAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest} returns this
 */
proto.sgn.cbridge.v1.QueryWithdrawLiquidityStatusRequest.prototype.setUsrAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    detail: (f = msg.getDetail()) && cbridge_pb.WithdrawDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.QueryLiquidityStatusResponse;
  return proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new cbridge_pb.WithdrawDetail;
      reader.readMessage(value,cbridge_pb.WithdrawDetail.deserializeBinaryFromReader);
      msg.setDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDetail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      cbridge_pb.WithdrawDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional WithdrawStatus status = 1;
 * @return {!proto.sgn.cbridge.v1.WithdrawStatus}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.WithdrawStatus} value
 * @return {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional WithdrawDetail detail = 2;
 * @return {?proto.sgn.cbridge.v1.WithdrawDetail}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.getDetail = function() {
  return /** @type{?proto.sgn.cbridge.v1.WithdrawDetail} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.WithdrawDetail, 2));
};


/**
 * @param {?proto.sgn.cbridge.v1.WithdrawDetail|undefined} value
 * @return {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} returns this
*/
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.setDetail = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.cbridge.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.clearDetail = function() {
  return this.setDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.cbridge.v1.QueryLiquidityStatusResponse.prototype.hasDetail = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CheckChainTokenValidRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    srcTokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    destChainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CheckChainTokenValidRequest;
  return proto.sgn.cbridge.v1.CheckChainTokenValidRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcTokenAddr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDestChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CheckChainTokenValidRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSrcTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestChainId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 src_chain_id = 1;
 * @return {number}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} returns this
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string src_token_addr = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.getSrcTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} returns this
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.setSrcTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 dest_chain_id = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.getDestChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidRequest} returns this
 */
proto.sgn.cbridge.v1.CheckChainTokenValidRequest.prototype.setDestChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.CheckChainTokenValidResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.toObject = function(includeInstance, msg) {
  var obj = {
    valid: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.CheckChainTokenValidResponse;
  return proto.sgn.cbridge.v1.CheckChainTokenValidResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.CheckChainTokenValidResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.prototype.getValid = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.CheckChainTokenValidResponse} returns this
 */
proto.sgn.cbridge.v1.CheckChainTokenValidResponse.prototype.setValid = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.TransferStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.TransferStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.TransferStatus.toObject = function(includeInstance, msg) {
  var obj = {
    gatewayStatus: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    sgnStatus: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.TransferStatus}
 */
proto.sgn.cbridge.v1.TransferStatus.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.TransferStatus;
  return proto.sgn.cbridge.v1.TransferStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.TransferStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.TransferStatus}
 */
proto.sgn.cbridge.v1.TransferStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (reader.readEnum());
      msg.setGatewayStatus(value);
      break;
    case 2:
      var value = /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (reader.readEnum());
      msg.setSgnStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.TransferStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.TransferStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.TransferStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGatewayStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSgnStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional TransferHistoryStatus gateway_status = 1;
 * @return {!proto.sgn.cbridge.v1.TransferHistoryStatus}
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.getGatewayStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.TransferHistoryStatus} value
 * @return {!proto.sgn.cbridge.v1.TransferStatus} returns this
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.setGatewayStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional XferStatus sgn_status = 2;
 * @return {!proto.sgn.cbridge.v1.XferStatus}
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.getSgnStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.XferStatus} value
 * @return {!proto.sgn.cbridge.v1.TransferStatus} returns this
 */
proto.sgn.cbridge.v1.TransferStatus.prototype.setSgnStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.cbridge.v1.Token.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.cbridge.v1.Token.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.cbridge.v1.Token} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Token.toObject = function(includeInstance, msg) {
  var obj = {
    symbol: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    address: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    decimal: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    xferDisabled: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.cbridge.v1.Token}
 */
proto.sgn.cbridge.v1.Token.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.cbridge.v1.Token;
  return proto.sgn.cbridge.v1.Token.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.cbridge.v1.Token} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.cbridge.v1.Token}
 */
proto.sgn.cbridge.v1.Token.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDecimal(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setXferDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.cbridge.v1.Token.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.cbridge.v1.Token.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.cbridge.v1.Token} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.cbridge.v1.Token.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecimal();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getXferDisabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string symbol = 1;
 * @return {string}
 */
proto.sgn.cbridge.v1.Token.prototype.getSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.Token} returns this
 */
proto.sgn.cbridge.v1.Token.prototype.setSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.sgn.cbridge.v1.Token.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.cbridge.v1.Token} returns this
 */
proto.sgn.cbridge.v1.Token.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 decimal = 3;
 * @return {number}
 */
proto.sgn.cbridge.v1.Token.prototype.getDecimal = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.cbridge.v1.Token} returns this
 */
proto.sgn.cbridge.v1.Token.prototype.setDecimal = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool xfer_disabled = 4;
 * @return {boolean}
 */
proto.sgn.cbridge.v1.Token.prototype.getXferDisabled = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.cbridge.v1.Token} returns this
 */
proto.sgn.cbridge.v1.Token.prototype.setXferDisabled = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.sgn.cbridge.v1.WithdrawStatus = {
  WD_UNKNOWN: 0,
  WD_WAITING_FOR_SGN: 1,
  WD_WAITING_FOR_LP: 2,
  WD_SUBMITTING: 3,
  WD_COMPLETED: 4,
  WD_FAILED: 5,
  WD_DELAYED: 6
};

/**
 * @enum {number}
 */
proto.sgn.cbridge.v1.TransferHistoryStatus = {
  TRANSFER_UNKNOWN: 0,
  TRANSFER_SUBMITTING: 1,
  TRANSFER_FAILED: 2,
  TRANSFER_WAITING_FOR_SGN_CONFIRMATION: 3,
  TRANSFER_WAITING_FOR_FUND_RELEASE: 4,
  TRANSFER_COMPLETED: 5,
  TRANSFER_TO_BE_REFUNDED: 6,
  TRANSFER_REQUESTING_REFUND: 7,
  TRANSFER_REFUND_TO_BE_CONFIRMED: 8,
  TRANSFER_CONFIRMING_YOUR_REFUND: 9,
  TRANSFER_REFUNDED: 10,
  TRANSFER_DELAYED: 11
};

goog.object.extend(exports, proto.sgn.cbridge.v1);
});

var timestamp_pb = createCommonjsModule$1(function (module, exports) {
// source: google/protobuf/timestamp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.google.protobuf.Timestamp', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.protobuf.Timestamp = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.protobuf.Timestamp, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.protobuf.Timestamp.displayName = 'proto.google.protobuf.Timestamp';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.protobuf.Timestamp.prototype.toObject = function(opt_includeInstance) {
  return proto.google.protobuf.Timestamp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.protobuf.Timestamp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.Timestamp.toObject = function(includeInstance, msg) {
  var obj = {
    seconds: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    nanos: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.protobuf.Timestamp}
 */
proto.google.protobuf.Timestamp.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.google.protobuf.Timestamp;
  return proto.google.protobuf.Timestamp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.protobuf.Timestamp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.protobuf.Timestamp}
 */
proto.google.protobuf.Timestamp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.protobuf.Timestamp.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.google.protobuf.Timestamp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.protobuf.Timestamp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.protobuf.Timestamp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.google.protobuf.Timestamp.prototype.getSeconds = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.Timestamp} returns this
 */
proto.google.protobuf.Timestamp.prototype.setSeconds = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.google.protobuf.Timestamp.prototype.getNanos = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.google.protobuf.Timestamp} returns this
 */
proto.google.protobuf.Timestamp.prototype.setNanos = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.google.protobuf);
/* This code will be inserted into generated code for
 * google/protobuf/timestamp.proto. */

/**
 * Returns a JavaScript 'Date' object corresponding to this Timestamp.
 * @return {!Date}
 */
proto.google.protobuf.Timestamp.prototype.toDate = function() {
  var seconds = this.getSeconds();
  var nanos = this.getNanos();

  return new Date((seconds * 1000) + (nanos / 1000000));
};


/**
 * Sets the value of this Timestamp object to be the given Date.
 * @param {!Date} value The value to set.
 */
proto.google.protobuf.Timestamp.prototype.fromDate = function(value) {
  this.setSeconds(Math.floor(value.getTime() / 1000));
  this.setNanos(value.getMilliseconds() * 1000000);
};


/**
 * Factory method that returns a Timestamp object with value equal to
 * the given Date.
 * @param {!Date} value The value to set.
 * @return {!proto.google.protobuf.Timestamp}
 */
proto.google.protobuf.Timestamp.fromDate = function(value) {
  var timestamp = new proto.google.protobuf.Timestamp();
  timestamp.fromDate(value);
  return timestamp;
};
});

var coin_pb = createCommonjsModule$1(function (module, exports) {
// source: cosmos/base/v1beta1/coin.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, gogo_pb);
goog.exportSymbol('proto.cosmos.base.v1beta1.Coin', null, global);
goog.exportSymbol('proto.cosmos.base.v1beta1.DecCoin', null, global);
goog.exportSymbol('proto.cosmos.base.v1beta1.DecProto', null, global);
goog.exportSymbol('proto.cosmos.base.v1beta1.IntProto', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.base.v1beta1.Coin = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.base.v1beta1.Coin, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.base.v1beta1.Coin.displayName = 'proto.cosmos.base.v1beta1.Coin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.base.v1beta1.DecCoin = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.base.v1beta1.DecCoin, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.base.v1beta1.DecCoin.displayName = 'proto.cosmos.base.v1beta1.DecCoin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.base.v1beta1.IntProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.base.v1beta1.IntProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.base.v1beta1.IntProto.displayName = 'proto.cosmos.base.v1beta1.IntProto';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cosmos.base.v1beta1.DecProto = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cosmos.base.v1beta1.DecProto, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.cosmos.base.v1beta1.DecProto.displayName = 'proto.cosmos.base.v1beta1.DecProto';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.base.v1beta1.Coin.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.base.v1beta1.Coin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.base.v1beta1.Coin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.Coin.toObject = function(includeInstance, msg) {
  var obj = {
    denom: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.base.v1beta1.Coin.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.cosmos.base.v1beta1.Coin;
  return proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.base.v1beta1.Coin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.cosmos.base.v1beta1.Coin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.base.v1beta1.Coin.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.base.v1beta1.Coin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.Coin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.cosmos.base.v1beta1.Coin.prototype.getDenom = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.Coin} returns this
 */
proto.cosmos.base.v1beta1.Coin.prototype.setDenom = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.cosmos.base.v1beta1.Coin.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.Coin} returns this
 */
proto.cosmos.base.v1beta1.Coin.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.base.v1beta1.DecCoin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.DecCoin.toObject = function(includeInstance, msg) {
  var obj = {
    denom: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.cosmos.base.v1beta1.DecCoin.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.cosmos.base.v1beta1.DecCoin;
  return proto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.base.v1beta1.DecCoin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.cosmos.base.v1beta1.DecCoin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.base.v1beta1.DecCoin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.DecCoin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.getDenom = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.setDenom = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.DecCoin} returns this
 */
proto.cosmos.base.v1beta1.DecCoin.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.base.v1beta1.IntProto.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.base.v1beta1.IntProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.base.v1beta1.IntProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.IntProto.toObject = function(includeInstance, msg) {
  var obj = {
    pb_int: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.base.v1beta1.IntProto}
 */
proto.cosmos.base.v1beta1.IntProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.cosmos.base.v1beta1.IntProto;
  return proto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.base.v1beta1.IntProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.base.v1beta1.IntProto}
 */
proto.cosmos.base.v1beta1.IntProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setInt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.base.v1beta1.IntProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.base.v1beta1.IntProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.IntProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string int = 1;
 * @return {string}
 */
proto.cosmos.base.v1beta1.IntProto.prototype.getInt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.IntProto} returns this
 */
proto.cosmos.base.v1beta1.IntProto.prototype.setInt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cosmos.base.v1beta1.DecProto.prototype.toObject = function(opt_includeInstance) {
  return proto.cosmos.base.v1beta1.DecProto.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cosmos.base.v1beta1.DecProto} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.DecProto.toObject = function(includeInstance, msg) {
  var obj = {
    dec: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.cosmos.base.v1beta1.DecProto}
 */
proto.cosmos.base.v1beta1.DecProto.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.cosmos.base.v1beta1.DecProto;
  return proto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.cosmos.base.v1beta1.DecProto} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.cosmos.base.v1beta1.DecProto}
 */
proto.cosmos.base.v1beta1.DecProto.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.cosmos.base.v1beta1.DecProto.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.cosmos.base.v1beta1.DecProto} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.cosmos.base.v1beta1.DecProto.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDec();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string dec = 1;
 * @return {string}
 */
proto.cosmos.base.v1beta1.DecProto.prototype.getDec = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.cosmos.base.v1beta1.DecProto} returns this
 */
proto.cosmos.base.v1beta1.DecProto.prototype.setDec = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.cosmos.base.v1beta1);
});

var farming_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/farming/v1/farming.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, duration_pb);

goog.object.extend(proto, timestamp_pb);

goog.object.extend(proto, coin_pb);

goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.sgn.farming.v1.AccountInfo', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AddPoolInfo', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AddPoolProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AddPoolProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AddTokensProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AddTokensProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AdjustRewardInfo', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AdjustRewardProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.AdjustRewardProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.BatchAddPoolProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.BatchAdjustRewardProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.Earnings', null, global);
goog.exportSymbol('proto.sgn.farming.v1.FarmingPool', null, global);
goog.exportSymbol('proto.sgn.farming.v1.FarmingRewardsOnChain', null, global);
goog.exportSymbol('proto.sgn.farming.v1.NumPools', null, global);
goog.exportSymbol('proto.sgn.farming.v1.Params', null, global);
goog.exportSymbol('proto.sgn.farming.v1.PoolCurrentRewards', null, global);
goog.exportSymbol('proto.sgn.farming.v1.PoolHistoricalRewards', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RemovePoolProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RemovePoolProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RewardAdjustmentInput', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RewardClaimDetails', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RewardClaimInfo', null, global);
goog.exportSymbol('proto.sgn.farming.v1.RewardTokenInfo', null, global);
goog.exportSymbol('proto.sgn.farming.v1.SetRewardContractsProposal', null, global);
goog.exportSymbol('proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.farming.v1.StakeInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.Params = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.Params, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.Params.displayName = 'proto.sgn.farming.v1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.FarmingPool = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.FarmingPool.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.FarmingPool, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.FarmingPool.displayName = 'proto.sgn.farming.v1.FarmingPool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.NumPools = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.NumPools, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.NumPools.displayName = 'proto.sgn.farming.v1.NumPools';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RewardTokenInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.RewardTokenInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RewardTokenInfo.displayName = 'proto.sgn.farming.v1.RewardTokenInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.StakeInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.StakeInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.StakeInfo.displayName = 'proto.sgn.farming.v1.StakeInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.PoolHistoricalRewards = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.PoolHistoricalRewards.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.PoolHistoricalRewards, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.PoolHistoricalRewards.displayName = 'proto.sgn.farming.v1.PoolHistoricalRewards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.PoolCurrentRewards = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.PoolCurrentRewards.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.PoolCurrentRewards, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.PoolCurrentRewards.displayName = 'proto.sgn.farming.v1.PoolCurrentRewards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.Earnings = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.Earnings.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.Earnings, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.Earnings.displayName = 'proto.sgn.farming.v1.Earnings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AccountInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AccountInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AccountInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AccountInfo.displayName = 'proto.sgn.farming.v1.AccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RewardClaimDetails = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.RewardClaimDetails.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.RewardClaimDetails, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RewardClaimDetails.displayName = 'proto.sgn.farming.v1.RewardClaimDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RewardClaimInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.RewardClaimInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.RewardClaimInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RewardClaimInfo.displayName = 'proto.sgn.farming.v1.RewardClaimInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RewardAdjustmentInput = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.RewardAdjustmentInput, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RewardAdjustmentInput.displayName = 'proto.sgn.farming.v1.RewardAdjustmentInput';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.FarmingRewardsOnChain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.FarmingRewardsOnChain.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.FarmingRewardsOnChain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.FarmingRewardsOnChain.displayName = 'proto.sgn.farming.v1.FarmingRewardsOnChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AddPoolProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AddPoolProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AddPoolProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AddPoolProposal.displayName = 'proto.sgn.farming.v1.AddPoolProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.BatchAddPoolProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.BatchAddPoolProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.BatchAddPoolProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.BatchAddPoolProposal.displayName = 'proto.sgn.farming.v1.BatchAddPoolProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AddPoolInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AddPoolInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AddPoolInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AddPoolInfo.displayName = 'proto.sgn.farming.v1.AddPoolInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AddPoolProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AddPoolProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AddPoolProposalWithDeposit.displayName = 'proto.sgn.farming.v1.AddPoolProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.displayName = 'proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AdjustRewardProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AdjustRewardProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AdjustRewardProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AdjustRewardProposal.displayName = 'proto.sgn.farming.v1.AdjustRewardProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.BatchAdjustRewardProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.BatchAdjustRewardProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.BatchAdjustRewardProposal.displayName = 'proto.sgn.farming.v1.BatchAdjustRewardProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AdjustRewardInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AdjustRewardInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AdjustRewardInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AdjustRewardInfo.displayName = 'proto.sgn.farming.v1.AdjustRewardInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AdjustRewardProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.displayName = 'proto.sgn.farming.v1.AdjustRewardProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.displayName = 'proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RemovePoolProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.RemovePoolProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RemovePoolProposal.displayName = 'proto.sgn.farming.v1.RemovePoolProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.farming.v1.RemovePoolProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.RemovePoolProposalWithDeposit.displayName = 'proto.sgn.farming.v1.RemovePoolProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AddTokensProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AddTokensProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AddTokensProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AddTokensProposal.displayName = 'proto.sgn.farming.v1.AddTokensProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.AddTokensProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.AddTokensProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.AddTokensProposalWithDeposit.displayName = 'proto.sgn.farming.v1.AddTokensProposalWithDeposit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.SetRewardContractsProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.SetRewardContractsProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.SetRewardContractsProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.SetRewardContractsProposal.displayName = 'proto.sgn.farming.v1.SetRewardContractsProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.repeatedFields_, null);
};
goog.inherits(proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.displayName = 'proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    claimCooldown: (f = msg.getClaimCooldown()) && duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.Params}
 */
proto.sgn.farming.v1.Params.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.Params;
  return proto.sgn.farming.v1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.Params}
 */
proto.sgn.farming.v1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setClaimCooldown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.Params.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClaimCooldown();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration claim_cooldown = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.farming.v1.Params.prototype.getClaimCooldown = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.farming.v1.Params} returns this
*/
proto.sgn.farming.v1.Params.prototype.setClaimCooldown = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.Params} returns this
 */
proto.sgn.farming.v1.Params.prototype.clearClaimCooldown = function() {
  return this.setClaimCooldown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.Params.prototype.hasClaimCooldown = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.FarmingPool.repeatedFields_ = [3,5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.FarmingPool.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.FarmingPool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.FarmingPool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.FarmingPool.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    stakeToken: (f = msg.getStakeToken()) && common_pb.ERC20Token.toObject(includeInstance, f),
    rewardTokensList: googleProtobuf.Message.toObjectList(msg.getRewardTokensList(),
    common_pb.ERC20Token.toObject, includeInstance),
    totalStakedAmount: (f = msg.getTotalStakedAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    rewardTokenInfosList: googleProtobuf.Message.toObjectList(msg.getRewardTokenInfosList(),
    proto.sgn.farming.v1.RewardTokenInfo.toObject, includeInstance),
    totalAccumulatedRewardsList: googleProtobuf.Message.toObjectList(msg.getTotalAccumulatedRewardsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.FarmingPool}
 */
proto.sgn.farming.v1.FarmingPool.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.FarmingPool;
  return proto.sgn.farming.v1.FarmingPool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.FarmingPool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.FarmingPool}
 */
proto.sgn.farming.v1.FarmingPool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setStakeToken(value);
      break;
    case 3:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addRewardTokens(value);
      break;
    case 4:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setTotalStakedAmount(value);
      break;
    case 5:
      var value = new proto.sgn.farming.v1.RewardTokenInfo;
      reader.readMessage(value,proto.sgn.farming.v1.RewardTokenInfo.deserializeBinaryFromReader);
      msg.addRewardTokenInfos(value);
      break;
    case 6:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addTotalAccumulatedRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.FarmingPool.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.FarmingPool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.FarmingPool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.FarmingPool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStakeToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getRewardTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getTotalStakedAmount();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardTokenInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sgn.farming.v1.RewardTokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotalAccumulatedRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.setName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sgn.common.v1.ERC20Token stake_token = 2;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getStakeToken = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 2));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
*/
proto.sgn.farming.v1.FarmingPool.prototype.setStakeToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.clearStakeToken = function() {
  return this.setStakeToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.FarmingPool.prototype.hasStakeToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated sgn.common.v1.ERC20Token reward_tokens = 3;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getRewardTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
*/
proto.sgn.farming.v1.FarmingPool.prototype.setRewardTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.FarmingPool.prototype.addRewardTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.clearRewardTokensList = function() {
  return this.setRewardTokensList([]);
};


/**
 * optional cosmos.base.v1beta1.DecCoin total_staked_amount = 4;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getTotalStakedAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 4));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
*/
proto.sgn.farming.v1.FarmingPool.prototype.setTotalStakedAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.clearTotalStakedAmount = function() {
  return this.setTotalStakedAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.FarmingPool.prototype.hasTotalStakedAmount = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * repeated RewardTokenInfo reward_token_infos = 5;
 * @return {!Array<!proto.sgn.farming.v1.RewardTokenInfo>}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getRewardTokenInfosList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardTokenInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardTokenInfo, 5));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardTokenInfo>} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
*/
proto.sgn.farming.v1.FarmingPool.prototype.setRewardTokenInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardTokenInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardTokenInfo}
 */
proto.sgn.farming.v1.FarmingPool.prototype.addRewardTokenInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.farming.v1.RewardTokenInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.clearRewardTokenInfosList = function() {
  return this.setRewardTokenInfosList([]);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin total_accumulated_rewards = 6;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.FarmingPool.prototype.getTotalAccumulatedRewardsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 6));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
*/
proto.sgn.farming.v1.FarmingPool.prototype.setTotalAccumulatedRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.FarmingPool.prototype.addTotalAccumulatedRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.FarmingPool} returns this
 */
proto.sgn.farming.v1.FarmingPool.prototype.clearTotalAccumulatedRewardsList = function() {
  return this.setTotalAccumulatedRewardsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.NumPools.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.NumPools.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.NumPools} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.NumPools.toObject = function(includeInstance, msg) {
  var obj = {
    numPools: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.NumPools}
 */
proto.sgn.farming.v1.NumPools.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.NumPools;
  return proto.sgn.farming.v1.NumPools.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.NumPools} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.NumPools}
 */
proto.sgn.farming.v1.NumPools.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNumPools(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.NumPools.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.NumPools.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.NumPools} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.NumPools.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumPools();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 num_pools = 1;
 * @return {number}
 */
proto.sgn.farming.v1.NumPools.prototype.getNumPools = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.NumPools} returns this
 */
proto.sgn.farming.v1.NumPools.prototype.setNumPools = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RewardTokenInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RewardTokenInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardTokenInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    remainingAmount: (f = msg.getRemainingAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    rewardStartBlockHeight: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    rewardAmountPerBlock: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RewardTokenInfo}
 */
proto.sgn.farming.v1.RewardTokenInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RewardTokenInfo;
  return proto.sgn.farming.v1.RewardTokenInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RewardTokenInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RewardTokenInfo}
 */
proto.sgn.farming.v1.RewardTokenInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setRemainingAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRewardStartBlockHeight(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardAmountPerBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RewardTokenInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RewardTokenInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardTokenInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRemainingAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardStartBlockHeight();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getRewardAmountPerBlock();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional cosmos.base.v1beta1.DecCoin remaining_amount = 1;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.getRemainingAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.farming.v1.RewardTokenInfo} returns this
*/
proto.sgn.farming.v1.RewardTokenInfo.prototype.setRemainingAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.RewardTokenInfo} returns this
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.clearRemainingAmount = function() {
  return this.setRemainingAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.hasRemainingAmount = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int64 reward_start_block_height = 2;
 * @return {number}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.getRewardStartBlockHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.RewardTokenInfo} returns this
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.setRewardStartBlockHeight = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string reward_amount_per_block = 3;
 * @return {string}
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.getRewardAmountPerBlock = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RewardTokenInfo} returns this
 */
proto.sgn.farming.v1.RewardTokenInfo.prototype.setRewardAmountPerBlock = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.StakeInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.StakeInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.StakeInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.StakeInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    stakerAddress: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    amount: (f = msg.getAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    startBlockHeight: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    referencePeriod: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.StakeInfo}
 */
proto.sgn.farming.v1.StakeInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.StakeInfo;
  return proto.sgn.farming.v1.StakeInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.StakeInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.StakeInfo}
 */
proto.sgn.farming.v1.StakeInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakerAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 3:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartBlockHeight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReferencePeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.StakeInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.StakeInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.StakeInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.StakeInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakerAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getStartBlockHeight();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getReferencePeriod();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string staker_address = 1;
 * @return {string}
 */
proto.sgn.farming.v1.StakeInfo.prototype.getStakerAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
 */
proto.sgn.farming.v1.StakeInfo.prototype.setStakerAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string pool_name = 2;
 * @return {string}
 */
proto.sgn.farming.v1.StakeInfo.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
 */
proto.sgn.farming.v1.StakeInfo.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional cosmos.base.v1beta1.DecCoin amount = 3;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.StakeInfo.prototype.getAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
*/
proto.sgn.farming.v1.StakeInfo.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
 */
proto.sgn.farming.v1.StakeInfo.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.StakeInfo.prototype.hasAmount = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional int64 start_block_height = 4;
 * @return {number}
 */
proto.sgn.farming.v1.StakeInfo.prototype.getStartBlockHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
 */
proto.sgn.farming.v1.StakeInfo.prototype.setStartBlockHeight = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 reference_period = 5;
 * @return {number}
 */
proto.sgn.farming.v1.StakeInfo.prototype.getReferencePeriod = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.StakeInfo} returns this
 */
proto.sgn.farming.v1.StakeInfo.prototype.setReferencePeriod = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.PoolHistoricalRewards.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.PoolHistoricalRewards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.PoolHistoricalRewards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.PoolHistoricalRewards.toObject = function(includeInstance, msg) {
  var obj = {
    cumulativeRewardRatioList: googleProtobuf.Message.toObjectList(msg.getCumulativeRewardRatioList(),
    coin_pb.DecCoin.toObject, includeInstance),
    referenceCount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.PoolHistoricalRewards}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.PoolHistoricalRewards;
  return proto.sgn.farming.v1.PoolHistoricalRewards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.PoolHistoricalRewards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.PoolHistoricalRewards}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCumulativeRewardRatio(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReferenceCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.PoolHistoricalRewards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.PoolHistoricalRewards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.PoolHistoricalRewards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCumulativeRewardRatioList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getReferenceCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.getCumulativeRewardRatioList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.PoolHistoricalRewards} returns this
*/
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.setCumulativeRewardRatioList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.addCumulativeRewardRatio = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.PoolHistoricalRewards} returns this
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.clearCumulativeRewardRatioList = function() {
  return this.setCumulativeRewardRatioList([]);
};


/**
 * optional uint32 reference_count = 2;
 * @return {number}
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.getReferenceCount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.PoolHistoricalRewards} returns this
 */
proto.sgn.farming.v1.PoolHistoricalRewards.prototype.setReferenceCount = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.PoolCurrentRewards.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.PoolCurrentRewards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.PoolCurrentRewards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.PoolCurrentRewards.toObject = function(includeInstance, msg) {
  var obj = {
    startBlockHeight: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    period: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    rewardsList: googleProtobuf.Message.toObjectList(msg.getRewardsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards}
 */
proto.sgn.farming.v1.PoolCurrentRewards.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.PoolCurrentRewards;
  return proto.sgn.farming.v1.PoolCurrentRewards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.PoolCurrentRewards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards}
 */
proto.sgn.farming.v1.PoolCurrentRewards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStartBlockHeight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPeriod(value);
      break;
    case 3:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.PoolCurrentRewards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.PoolCurrentRewards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.PoolCurrentRewards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartBlockHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPeriod();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 start_block_height = 1;
 * @return {number}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.getStartBlockHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards} returns this
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.setStartBlockHeight = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 period = 2;
 * @return {number}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.getPeriod = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards} returns this
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.setPeriod = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin rewards = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards} returns this
*/
proto.sgn.farming.v1.PoolCurrentRewards.prototype.setRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.addRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.PoolCurrentRewards} returns this
 */
proto.sgn.farming.v1.PoolCurrentRewards.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.Earnings.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.Earnings.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.Earnings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.Earnings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.Earnings.toObject = function(includeInstance, msg) {
  var f, obj = {
    targetBlockHeight: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    stakedAmount: (f = msg.getStakedAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    rewardAmountsList: googleProtobuf.Message.toObjectList(msg.getRewardAmountsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.Earnings}
 */
proto.sgn.farming.v1.Earnings.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.Earnings;
  return proto.sgn.farming.v1.Earnings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.Earnings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.Earnings}
 */
proto.sgn.farming.v1.Earnings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTargetBlockHeight(value);
      break;
    case 2:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setStakedAmount(value);
      break;
    case 3:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addRewardAmounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.Earnings.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.Earnings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.Earnings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.Earnings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTargetBlockHeight();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getStakedAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardAmountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 target_block_height = 1;
 * @return {number}
 */
proto.sgn.farming.v1.Earnings.prototype.getTargetBlockHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.Earnings} returns this
 */
proto.sgn.farming.v1.Earnings.prototype.setTargetBlockHeight = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cosmos.base.v1beta1.DecCoin staked_amount = 2;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.Earnings.prototype.getStakedAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.farming.v1.Earnings} returns this
*/
proto.sgn.farming.v1.Earnings.prototype.setStakedAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.Earnings} returns this
 */
proto.sgn.farming.v1.Earnings.prototype.clearStakedAmount = function() {
  return this.setStakedAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.Earnings.prototype.hasStakedAmount = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated cosmos.base.v1beta1.DecCoin reward_amounts = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.Earnings.prototype.getRewardAmountsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.Earnings} returns this
*/
proto.sgn.farming.v1.Earnings.prototype.setRewardAmountsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.Earnings.prototype.addRewardAmounts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.Earnings} returns this
 */
proto.sgn.farming.v1.Earnings.prototype.clearRewardAmountsList = function() {
  return this.setRewardAmountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AccountInfo.repeatedFields_ = [1,2,3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AccountInfo.toObject = function(includeInstance, msg) {
  var obj = {
    stakedPoolsList: googleProtobuf.Message.toObjectList(msg.getStakedPoolsList(),
    proto.sgn.farming.v1.FarmingPool.toObject, includeInstance),
    earningsListList: googleProtobuf.Message.toObjectList(msg.getEarningsListList(),
    proto.sgn.farming.v1.Earnings.toObject, includeInstance),
    cumulativeRewardAmountsList: googleProtobuf.Message.toObjectList(msg.getCumulativeRewardAmountsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AccountInfo}
 */
proto.sgn.farming.v1.AccountInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AccountInfo;
  return proto.sgn.farming.v1.AccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AccountInfo}
 */
proto.sgn.farming.v1.AccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.farming.v1.FarmingPool;
      reader.readMessage(value,proto.sgn.farming.v1.FarmingPool.deserializeBinaryFromReader);
      msg.addStakedPools(value);
      break;
    case 2:
      var value = new proto.sgn.farming.v1.Earnings;
      reader.readMessage(value,proto.sgn.farming.v1.Earnings.deserializeBinaryFromReader);
      msg.addEarningsList(value);
      break;
    case 3:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCumulativeRewardAmounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AccountInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStakedPoolsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.farming.v1.FarmingPool.serializeBinaryToWriter
    );
  }
  f = message.getEarningsListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.farming.v1.Earnings.serializeBinaryToWriter
    );
  }
  f = message.getCumulativeRewardAmountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FarmingPool staked_pools = 1;
 * @return {!Array<!proto.sgn.farming.v1.FarmingPool>}
 */
proto.sgn.farming.v1.AccountInfo.prototype.getStakedPoolsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.FarmingPool>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.FarmingPool, 1));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.FarmingPool>} value
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
*/
proto.sgn.farming.v1.AccountInfo.prototype.setStakedPoolsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.farming.v1.FarmingPool=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.FarmingPool}
 */
proto.sgn.farming.v1.AccountInfo.prototype.addStakedPools = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.farming.v1.FarmingPool, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
 */
proto.sgn.farming.v1.AccountInfo.prototype.clearStakedPoolsList = function() {
  return this.setStakedPoolsList([]);
};


/**
 * repeated Earnings earnings_list = 2;
 * @return {!Array<!proto.sgn.farming.v1.Earnings>}
 */
proto.sgn.farming.v1.AccountInfo.prototype.getEarningsListList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.Earnings>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.Earnings, 2));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.Earnings>} value
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
*/
proto.sgn.farming.v1.AccountInfo.prototype.setEarningsListList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.farming.v1.Earnings=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.Earnings}
 */
proto.sgn.farming.v1.AccountInfo.prototype.addEarningsList = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.farming.v1.Earnings, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
 */
proto.sgn.farming.v1.AccountInfo.prototype.clearEarningsListList = function() {
  return this.setEarningsListList([]);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin cumulative_reward_amounts = 3;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.AccountInfo.prototype.getCumulativeRewardAmountsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 3));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
*/
proto.sgn.farming.v1.AccountInfo.prototype.setCumulativeRewardAmountsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.AccountInfo.prototype.addCumulativeRewardAmounts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AccountInfo} returns this
 */
proto.sgn.farming.v1.AccountInfo.prototype.clearCumulativeRewardAmountsList = function() {
  return this.setCumulativeRewardAmountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.RewardClaimDetails.repeatedFields_ = [2,4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RewardClaimDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RewardClaimDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardClaimDetails.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    cumulativeRewardAmountsList: googleProtobuf.Message.toObjectList(msg.getCumulativeRewardAmountsList(),
    coin_pb.DecCoin.toObject, includeInstance),
    rewardProtoBytes: msg.getRewardProtoBytes_asB64(),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RewardClaimDetails}
 */
proto.sgn.farming.v1.RewardClaimDetails.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RewardClaimDetails;
  return proto.sgn.farming.v1.RewardClaimDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RewardClaimDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RewardClaimDetails}
 */
proto.sgn.farming.v1.RewardClaimDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCumulativeRewardAmounts(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRewardProtoBytes(value);
      break;
    case 4:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RewardClaimDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RewardClaimDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardClaimDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCumulativeRewardAmountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardProtoBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin cumulative_reward_amounts = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getCumulativeRewardAmountsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
*/
proto.sgn.farming.v1.RewardClaimDetails.prototype.setCumulativeRewardAmountsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.addCumulativeRewardAmounts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.clearCumulativeRewardAmountsList = function() {
  return this.setCumulativeRewardAmountsList([]);
};


/**
 * optional bytes reward_proto_bytes = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getRewardProtoBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes reward_proto_bytes = 3;
 * This is a type-conversion wrapper around `getRewardProtoBytes()`
 * @return {string}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getRewardProtoBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRewardProtoBytes()));
};


/**
 * optional bytes reward_proto_bytes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRewardProtoBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getRewardProtoBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRewardProtoBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.setRewardProtoBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * repeated sgn.common.v1.Signature signatures = 4;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 4));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
*/
proto.sgn.farming.v1.RewardClaimDetails.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.RewardClaimDetails} returns this
 */
proto.sgn.farming.v1.RewardClaimDetails.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.RewardClaimInfo.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RewardClaimInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RewardClaimInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardClaimInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipient: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    lastClaimTime: (f = msg.getLastClaimTime()) && timestamp_pb.Timestamp.toObject(includeInstance, f),
    rewardClaimDetailsListList: googleProtobuf.Message.toObjectList(msg.getRewardClaimDetailsListList(),
    proto.sgn.farming.v1.RewardClaimDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RewardClaimInfo}
 */
proto.sgn.farming.v1.RewardClaimInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RewardClaimInfo;
  return proto.sgn.farming.v1.RewardClaimInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RewardClaimInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RewardClaimInfo}
 */
proto.sgn.farming.v1.RewardClaimInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 2:
      var value = new timestamp_pb.Timestamp;
      reader.readMessage(value,timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastClaimTime(value);
      break;
    case 3:
      var value = new proto.sgn.farming.v1.RewardClaimDetails;
      reader.readMessage(value,proto.sgn.farming.v1.RewardClaimDetails.deserializeBinaryFromReader);
      msg.addRewardClaimDetailsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RewardClaimInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RewardClaimInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardClaimInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastClaimTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getRewardClaimDetailsListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.farming.v1.RewardClaimDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string recipient = 1;
 * @return {string}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.getRecipient = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RewardClaimInfo} returns this
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp last_claim_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.getLastClaimTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    googleProtobuf.Message.getWrapperField(this, timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sgn.farming.v1.RewardClaimInfo} returns this
*/
proto.sgn.farming.v1.RewardClaimInfo.prototype.setLastClaimTime = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.RewardClaimInfo} returns this
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.clearLastClaimTime = function() {
  return this.setLastClaimTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.hasLastClaimTime = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated RewardClaimDetails reward_claim_details_list = 3;
 * @return {!Array<!proto.sgn.farming.v1.RewardClaimDetails>}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.getRewardClaimDetailsListList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardClaimDetails>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardClaimDetails, 3));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardClaimDetails>} value
 * @return {!proto.sgn.farming.v1.RewardClaimInfo} returns this
*/
proto.sgn.farming.v1.RewardClaimInfo.prototype.setRewardClaimDetailsListList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardClaimDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardClaimDetails}
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.addRewardClaimDetailsList = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.farming.v1.RewardClaimDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.RewardClaimInfo} returns this
 */
proto.sgn.farming.v1.RewardClaimInfo.prototype.clearRewardClaimDetailsListList = function() {
  return this.setRewardClaimDetailsListList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RewardAdjustmentInput.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardAdjustmentInput.toObject = function(includeInstance, msg) {
  var f, obj = {
    addAmount: (f = msg.getAddAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    rewardStartBlockDelay: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    newRewardAmountPerBlock: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RewardAdjustmentInput;
  return proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setAddAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRewardStartBlockDelay(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewRewardAmountPerBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardStartBlockDelay();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNewRewardAmountPerBlock();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional cosmos.base.v1beta1.DecCoin add_amount = 1;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.getAddAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput} returns this
*/
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.setAddAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput} returns this
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.clearAddAmount = function() {
  return this.setAddAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.hasAddAmount = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional int64 reward_start_block_delay = 2;
 * @return {number}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.getRewardStartBlockDelay = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput} returns this
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.setRewardStartBlockDelay = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string new_reward_amount_per_block = 3;
 * @return {string}
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.getNewRewardAmountPerBlock = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput} returns this
 */
proto.sgn.farming.v1.RewardAdjustmentInput.prototype.setNewRewardAmountPerBlock = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.repeatedFields_ = [2,3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.FarmingRewardsOnChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.FarmingRewardsOnChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.toObject = function(includeInstance, msg) {
  var obj = {
    recipient: msg.getRecipient_asB64(),
    tokenAddressesList: msg.getTokenAddressesList_asB64(),
    cumulativeRewardAmountsList: msg.getCumulativeRewardAmountsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.FarmingRewardsOnChain;
  return proto.sgn.farming.v1.FarmingRewardsOnChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.FarmingRewardsOnChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecipient(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTokenAddresses(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addCumulativeRewardAmounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.FarmingRewardsOnChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.FarmingRewardsOnChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipient_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTokenAddressesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
  f = message.getCumulativeRewardAmountsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional bytes recipient = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getRecipient = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes recipient = 1;
 * This is a type-conversion wrapper around `getRecipient()`
 * @return {string}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getRecipient_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRecipient()));
};


/**
 * optional bytes recipient = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecipient()`
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getRecipient_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRecipient()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated bytes token_addresses = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getTokenAddressesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes token_addresses = 2;
 * This is a type-conversion wrapper around `getTokenAddressesList()`
 * @return {!Array<string>}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getTokenAddressesList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getTokenAddressesList()));
};


/**
 * repeated bytes token_addresses = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTokenAddressesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getTokenAddressesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getTokenAddressesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.setTokenAddressesList = function(value) {
  return googleProtobuf.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.addTokenAddresses = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.clearTokenAddressesList = function() {
  return this.setTokenAddressesList([]);
};


/**
 * repeated bytes cumulative_reward_amounts = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getCumulativeRewardAmountsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes cumulative_reward_amounts = 3;
 * This is a type-conversion wrapper around `getCumulativeRewardAmountsList()`
 * @return {!Array<string>}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getCumulativeRewardAmountsList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getCumulativeRewardAmountsList()));
};


/**
 * repeated bytes cumulative_reward_amounts = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCumulativeRewardAmountsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.getCumulativeRewardAmountsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getCumulativeRewardAmountsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.setCumulativeRewardAmountsList = function(value) {
  return googleProtobuf.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.addCumulativeRewardAmounts = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.FarmingRewardsOnChain} returns this
 */
proto.sgn.farming.v1.FarmingRewardsOnChain.prototype.clearCumulativeRewardAmountsList = function() {
  return this.setCumulativeRewardAmountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AddPoolProposal.repeatedFields_ = [5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AddPoolProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AddPoolProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    stakeToken: (f = msg.getStakeToken()) && common_pb.ERC20Token.toObject(includeInstance, f),
    rewardTokensList: googleProtobuf.Message.toObjectList(msg.getRewardTokensList(),
    common_pb.ERC20Token.toObject, includeInstance),
    initialRewardInputsList: googleProtobuf.Message.toObjectList(msg.getInitialRewardInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AddPoolProposal}
 */
proto.sgn.farming.v1.AddPoolProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AddPoolProposal;
  return proto.sgn.farming.v1.AddPoolProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AddPoolProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AddPoolProposal}
 */
proto.sgn.farming.v1.AddPoolProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 4:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setStakeToken(value);
      break;
    case 5:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addRewardTokens(value);
      break;
    case 6:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addInitialRewardInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AddPoolProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AddPoolProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStakeToken();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getRewardTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getInitialRewardInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sgn.common.v1.ERC20Token stake_token = 4;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getStakeToken = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 4));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
*/
proto.sgn.farming.v1.AddPoolProposal.prototype.setStakeToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.clearStakeToken = function() {
  return this.setStakeToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.hasStakeToken = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * repeated sgn.common.v1.ERC20Token reward_tokens = 5;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getRewardTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 5));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
*/
proto.sgn.farming.v1.AddPoolProposal.prototype.setRewardTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.addRewardTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.clearRewardTokensList = function() {
  return this.setRewardTokensList([]);
};


/**
 * repeated RewardAdjustmentInput initial_reward_inputs = 6;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.getInitialRewardInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 6));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
*/
proto.sgn.farming.v1.AddPoolProposal.prototype.setInitialRewardInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.addInitialRewardInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolProposal} returns this
 */
proto.sgn.farming.v1.AddPoolProposal.prototype.clearInitialRewardInputsList = function() {
  return this.setInitialRewardInputsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.BatchAddPoolProposal.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.BatchAddPoolProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAddPoolProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    addPoolInfosList: googleProtobuf.Message.toObjectList(msg.getAddPoolInfosList(),
    proto.sgn.farming.v1.AddPoolInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.BatchAddPoolProposal;
  return proto.sgn.farming.v1.BatchAddPoolProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.farming.v1.AddPoolInfo;
      reader.readMessage(value,proto.sgn.farming.v1.AddPoolInfo.deserializeBinaryFromReader);
      msg.addAddPoolInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.BatchAddPoolProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAddPoolProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddPoolInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.farming.v1.AddPoolInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AddPoolInfo add_pool_infos = 3;
 * @return {!Array<!proto.sgn.farming.v1.AddPoolInfo>}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.getAddPoolInfosList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.AddPoolInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.AddPoolInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.AddPoolInfo>} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal} returns this
*/
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.setAddPoolInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.farming.v1.AddPoolInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.AddPoolInfo}
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.addAddPoolInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.farming.v1.AddPoolInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposal} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposal.prototype.clearAddPoolInfosList = function() {
  return this.setAddPoolInfosList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AddPoolInfo.repeatedFields_ = [3,4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AddPoolInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AddPoolInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    stakeToken: (f = msg.getStakeToken()) && common_pb.ERC20Token.toObject(includeInstance, f),
    rewardTokensList: googleProtobuf.Message.toObjectList(msg.getRewardTokensList(),
    common_pb.ERC20Token.toObject, includeInstance),
    initialRewardInputsList: googleProtobuf.Message.toObjectList(msg.getInitialRewardInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AddPoolInfo}
 */
proto.sgn.farming.v1.AddPoolInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AddPoolInfo;
  return proto.sgn.farming.v1.AddPoolInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AddPoolInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AddPoolInfo}
 */
proto.sgn.farming.v1.AddPoolInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 2:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setStakeToken(value);
      break;
    case 3:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addRewardTokens(value);
      break;
    case 4:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addInitialRewardInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AddPoolInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AddPoolInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStakeToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getRewardTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getInitialRewardInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pool_name = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sgn.common.v1.ERC20Token stake_token = 2;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.getStakeToken = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 2));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
*/
proto.sgn.farming.v1.AddPoolInfo.prototype.setStakeToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.clearStakeToken = function() {
  return this.setStakeToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.hasStakeToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated sgn.common.v1.ERC20Token reward_tokens = 3;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.getRewardTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
*/
proto.sgn.farming.v1.AddPoolInfo.prototype.setRewardTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.addRewardTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.clearRewardTokensList = function() {
  return this.setRewardTokensList([]);
};


/**
 * repeated RewardAdjustmentInput initial_reward_inputs = 4;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.getInitialRewardInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 4));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
*/
proto.sgn.farming.v1.AddPoolInfo.prototype.setInitialRewardInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.addInitialRewardInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolInfo} returns this
 */
proto.sgn.farming.v1.AddPoolInfo.prototype.clearInitialRewardInputsList = function() {
  return this.setInitialRewardInputsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.repeatedFields_ = [5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AddPoolProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    stakeToken: (f = msg.getStakeToken()) && common_pb.ERC20Token.toObject(includeInstance, f),
    rewardTokensList: googleProtobuf.Message.toObjectList(msg.getRewardTokensList(),
    common_pb.ERC20Token.toObject, includeInstance),
    initialRewardInputsList: googleProtobuf.Message.toObjectList(msg.getInitialRewardInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AddPoolProposalWithDeposit;
  return proto.sgn.farming.v1.AddPoolProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 4:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setStakeToken(value);
      break;
    case 5:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addRewardTokens(value);
      break;
    case 6:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addInitialRewardInputs(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AddPoolProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStakeToken();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getRewardTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getInitialRewardInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sgn.common.v1.ERC20Token stake_token = 4;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getStakeToken = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 4));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setStakeToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.clearStakeToken = function() {
  return this.setStakeToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.hasStakeToken = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * repeated sgn.common.v1.ERC20Token reward_tokens = 5;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getRewardTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 5));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setRewardTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.addRewardTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.clearRewardTokensList = function() {
  return this.setRewardTokensList([]);
};


/**
 * repeated RewardAdjustmentInput initial_reward_inputs = 6;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getInitialRewardInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 6));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setInitialRewardInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.addInitialRewardInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.clearInitialRewardInputsList = function() {
  return this.setInitialRewardInputsList([]);
};


/**
 * optional string deposit = 7;
 * @return {string}
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddPoolProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    addPoolInfosList: googleProtobuf.Message.toObjectList(msg.getAddPoolInfosList(),
    proto.sgn.farming.v1.AddPoolInfo.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit;
  return proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.farming.v1.AddPoolInfo;
      reader.readMessage(value,proto.sgn.farming.v1.AddPoolInfo.deserializeBinaryFromReader);
      msg.addAddPoolInfos(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddPoolInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.farming.v1.AddPoolInfo.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AddPoolInfo add_pool_infos = 3;
 * @return {!Array<!proto.sgn.farming.v1.AddPoolInfo>}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.getAddPoolInfosList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.AddPoolInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.AddPoolInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.AddPoolInfo>} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.setAddPoolInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.farming.v1.AddPoolInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.AddPoolInfo}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.addAddPoolInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.farming.v1.AddPoolInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.clearAddPoolInfosList = function() {
  return this.setAddPoolInfosList([]);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAddPoolProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AdjustRewardProposal.repeatedFields_ = [4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AdjustRewardProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AdjustRewardProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    rewardAdjustmentInputsList: googleProtobuf.Message.toObjectList(msg.getRewardAdjustmentInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal}
 */
proto.sgn.farming.v1.AdjustRewardProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AdjustRewardProposal;
  return proto.sgn.farming.v1.AdjustRewardProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AdjustRewardProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal}
 */
proto.sgn.farming.v1.AdjustRewardProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 4:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addRewardAdjustmentInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AdjustRewardProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AdjustRewardProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRewardAdjustmentInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated RewardAdjustmentInput reward_adjustment_inputs = 4;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.getRewardAdjustmentInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 4));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal} returns this
*/
proto.sgn.farming.v1.AdjustRewardProposal.prototype.setRewardAdjustmentInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.addRewardAdjustmentInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposal.prototype.clearRewardAdjustmentInputsList = function() {
  return this.setRewardAdjustmentInputsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.BatchAdjustRewardProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    adjustRewardInfosList: googleProtobuf.Message.toObjectList(msg.getAdjustRewardInfosList(),
    proto.sgn.farming.v1.AdjustRewardInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.BatchAdjustRewardProposal;
  return proto.sgn.farming.v1.BatchAdjustRewardProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.farming.v1.AdjustRewardInfo;
      reader.readMessage(value,proto.sgn.farming.v1.AdjustRewardInfo.deserializeBinaryFromReader);
      msg.addAdjustRewardInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.BatchAdjustRewardProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdjustRewardInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.farming.v1.AdjustRewardInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AdjustRewardInfo adjust_reward_infos = 3;
 * @return {!Array<!proto.sgn.farming.v1.AdjustRewardInfo>}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.getAdjustRewardInfosList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.AdjustRewardInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.AdjustRewardInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.AdjustRewardInfo>} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal} returns this
*/
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.setAdjustRewardInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.farming.v1.AdjustRewardInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.addAdjustRewardInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.farming.v1.AdjustRewardInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposal} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposal.prototype.clearAdjustRewardInfosList = function() {
  return this.setAdjustRewardInfosList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AdjustRewardInfo.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AdjustRewardInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AdjustRewardInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardInfo.toObject = function(includeInstance, msg) {
  var obj = {
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    rewardAdjustmentInputsList: googleProtobuf.Message.toObjectList(msg.getRewardAdjustmentInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo}
 */
proto.sgn.farming.v1.AdjustRewardInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AdjustRewardInfo;
  return proto.sgn.farming.v1.AdjustRewardInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AdjustRewardInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo}
 */
proto.sgn.farming.v1.AdjustRewardInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 2:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addRewardAdjustmentInputs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AdjustRewardInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AdjustRewardInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRewardAdjustmentInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
};


/**
 * optional string pool_name = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo} returns this
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated RewardAdjustmentInput reward_adjustment_inputs = 2;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.getRewardAdjustmentInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 2));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo} returns this
*/
proto.sgn.farming.v1.AdjustRewardInfo.prototype.setRewardAdjustmentInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.addRewardAdjustmentInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo} returns this
 */
proto.sgn.farming.v1.AdjustRewardInfo.prototype.clearRewardAdjustmentInputsList = function() {
  return this.setRewardAdjustmentInputsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.repeatedFields_ = [4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    rewardAdjustmentInputsList: googleProtobuf.Message.toObjectList(msg.getRewardAdjustmentInputsList(),
    proto.sgn.farming.v1.RewardAdjustmentInput.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AdjustRewardProposalWithDeposit;
  return proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 4:
      var value = new proto.sgn.farming.v1.RewardAdjustmentInput;
      reader.readMessage(value,proto.sgn.farming.v1.RewardAdjustmentInput.deserializeBinaryFromReader);
      msg.addRewardAdjustmentInputs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRewardAdjustmentInputsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sgn.farming.v1.RewardAdjustmentInput.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated RewardAdjustmentInput reward_adjustment_inputs = 4;
 * @return {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.getRewardAdjustmentInputsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.RewardAdjustmentInput, 4));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardAdjustmentInput>} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.setRewardAdjustmentInputsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardAdjustmentInput=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardAdjustmentInput}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.addRewardAdjustmentInputs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sgn.farming.v1.RewardAdjustmentInput, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.clearRewardAdjustmentInputsList = function() {
  return this.setRewardAdjustmentInputsList([]);
};


/**
 * optional string deposit = 5;
 * @return {string}
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AdjustRewardProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    adjustRewardInfosList: googleProtobuf.Message.toObjectList(msg.getAdjustRewardInfosList(),
    proto.sgn.farming.v1.AdjustRewardInfo.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit;
  return proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.farming.v1.AdjustRewardInfo;
      reader.readMessage(value,proto.sgn.farming.v1.AdjustRewardInfo.deserializeBinaryFromReader);
      msg.addAdjustRewardInfos(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAdjustRewardInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.farming.v1.AdjustRewardInfo.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AdjustRewardInfo adjust_reward_infos = 3;
 * @return {!Array<!proto.sgn.farming.v1.AdjustRewardInfo>}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.getAdjustRewardInfosList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.AdjustRewardInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.farming.v1.AdjustRewardInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.AdjustRewardInfo>} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.setAdjustRewardInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.farming.v1.AdjustRewardInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.AdjustRewardInfo}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.addAdjustRewardInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.farming.v1.AdjustRewardInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.clearAdjustRewardInfosList = function() {
  return this.setAdjustRewardInfosList([]);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.BatchAdjustRewardProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RemovePoolProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RemovePoolProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RemovePoolProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RemovePoolProposal}
 */
proto.sgn.farming.v1.RemovePoolProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RemovePoolProposal;
  return proto.sgn.farming.v1.RemovePoolProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RemovePoolProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RemovePoolProposal}
 */
proto.sgn.farming.v1.RemovePoolProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RemovePoolProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RemovePoolProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RemovePoolProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposal} returns this
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposal} returns this
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposal} returns this
 */
proto.sgn.farming.v1.RemovePoolProposal.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.RemovePoolProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    poolName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.RemovePoolProposalWithDeposit;
  return proto.sgn.farming.v1.RemovePoolProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPoolName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.RemovePoolProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoolName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pool_name = 3;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.getPoolName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.setPoolName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.RemovePoolProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.RemovePoolProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AddTokensProposal.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AddTokensProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AddTokensProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddTokensProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    tokensList: googleProtobuf.Message.toObjectList(msg.getTokensList(),
    common_pb.ERC20Token.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AddTokensProposal}
 */
proto.sgn.farming.v1.AddTokensProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AddTokensProposal;
  return proto.sgn.farming.v1.AddTokensProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AddTokensProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AddTokensProposal}
 */
proto.sgn.farming.v1.AddTokensProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AddTokensProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AddTokensProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddTokensProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddTokensProposal} returns this
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddTokensProposal} returns this
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated sgn.common.v1.ERC20Token tokens = 3;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.AddTokensProposal} returns this
*/
proto.sgn.farming.v1.AddTokensProposal.prototype.setTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.addTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddTokensProposal} returns this
 */
proto.sgn.farming.v1.AddTokensProposal.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.AddTokensProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    tokensList: googleProtobuf.Message.toObjectList(msg.getTokensList(),
    common_pb.ERC20Token.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.AddTokensProposalWithDeposit;
  return proto.sgn.farming.v1.AddTokensProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.AddTokensProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated sgn.common.v1.ERC20Token tokens = 3;
 * @return {!Array<!proto.sgn.common.v1.ERC20Token>}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ERC20Token>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ERC20Token, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ERC20Token>} value
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.setTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ERC20Token=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.addTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ERC20Token, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.AddTokensProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.AddTokensProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.SetRewardContractsProposal.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.SetRewardContractsProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.SetRewardContractsProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    rewardContractsList: googleProtobuf.Message.toObjectList(msg.getRewardContractsList(),
    common_pb.ContractInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.SetRewardContractsProposal;
  return proto.sgn.farming.v1.SetRewardContractsProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addRewardContracts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.SetRewardContractsProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.SetRewardContractsProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewardContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated sgn.common.v1.ContractInfo reward_contracts = 3;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.getRewardContractsList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal} returns this
*/
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.setRewardContractsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.addRewardContracts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposal} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposal.prototype.clearRewardContractsList = function() {
  return this.setRewardContractsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    rewardContractsList: googleProtobuf.Message.toObjectList(msg.getRewardContractsList(),
    common_pb.ContractInfo.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit;
  return proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addRewardContracts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRewardContractsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated sgn.common.v1.ContractInfo reward_contracts = 3;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.getRewardContractsList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} returns this
*/
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.setRewardContractsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.addRewardContracts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.clearRewardContractsList = function() {
  return this.setRewardContractsList([]);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit} returns this
 */
proto.sgn.farming.v1.SetRewardContractsProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


goog.object.extend(exports, proto.sgn.farming.v1);
});

var distribution_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/distribution/v1/distribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, coin_pb);

goog.object.extend(proto, duration_pb);

goog.object.extend(proto, timestamp_pb);

goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.sgn.distribution.v1.ClaimableFeesInfo', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.CommunityPoolSpendProposal', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.DelegationDelegatorReward', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.DelegatorStartingInfo', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.FeePool', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.Params', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.StakingRewardClaimInfo', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.StakingRewardInfo', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.StakingRewardOnChain', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.ValidatorAccumulatedCommission', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.ValidatorCurrentRewards', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.ValidatorHistoricalRewards', null, global);
goog.exportSymbol('proto.sgn.distribution.v1.ValidatorOutstandingRewards', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.Params = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.Params, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.Params.displayName = 'proto.sgn.distribution.v1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.ValidatorHistoricalRewards.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.ValidatorHistoricalRewards, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.ValidatorHistoricalRewards.displayName = 'proto.sgn.distribution.v1.ValidatorHistoricalRewards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.ValidatorCurrentRewards.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.ValidatorCurrentRewards, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.ValidatorCurrentRewards.displayName = 'proto.sgn.distribution.v1.ValidatorCurrentRewards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.ValidatorAccumulatedCommission.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.ValidatorAccumulatedCommission, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.ValidatorAccumulatedCommission.displayName = 'proto.sgn.distribution.v1.ValidatorAccumulatedCommission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.ValidatorOutstandingRewards.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.ValidatorOutstandingRewards, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.ValidatorOutstandingRewards.displayName = 'proto.sgn.distribution.v1.ValidatorOutstandingRewards';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.FeePool = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.FeePool.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.FeePool, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.FeePool.displayName = 'proto.sgn.distribution.v1.FeePool';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.CommunityPoolSpendProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.CommunityPoolSpendProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.CommunityPoolSpendProposal.displayName = 'proto.sgn.distribution.v1.CommunityPoolSpendProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.DelegatorStartingInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.DelegatorStartingInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.DelegatorStartingInfo.displayName = 'proto.sgn.distribution.v1.DelegatorStartingInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.DelegationDelegatorReward = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.DelegationDelegatorReward.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.DelegationDelegatorReward, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.DelegationDelegatorReward.displayName = 'proto.sgn.distribution.v1.DelegationDelegatorReward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.StakingRewardInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.StakingRewardInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.StakingRewardInfo.displayName = 'proto.sgn.distribution.v1.StakingRewardInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.StakingRewardClaimInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.StakingRewardClaimInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.StakingRewardClaimInfo.displayName = 'proto.sgn.distribution.v1.StakingRewardClaimInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.ClaimableFeesInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.distribution.v1.ClaimableFeesInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.distribution.v1.ClaimableFeesInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.ClaimableFeesInfo.displayName = 'proto.sgn.distribution.v1.ClaimableFeesInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.StakingRewardOnChain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.StakingRewardOnChain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.StakingRewardOnChain.displayName = 'proto.sgn.distribution.v1.StakingRewardOnChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.displayName = 'proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    communityTax: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    baseProposerReward: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    bonusProposerReward: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    withdrawAddrEnabled: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 4, false),
    claimCooldown: (f = msg.getClaimCooldown()) && duration_pb.Duration.toObject(includeInstance, f),
    rewardContract: (f = msg.getRewardContract()) && common_pb.ContractInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.Params}
 */
proto.sgn.distribution.v1.Params.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.Params;
  return proto.sgn.distribution.v1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.Params}
 */
proto.sgn.distribution.v1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommunityTax(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseProposerReward(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBonusProposerReward(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWithdrawAddrEnabled(value);
      break;
    case 5:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setClaimCooldown(value);
      break;
    case 6:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.setRewardContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.Params.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommunityTax();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBaseProposerReward();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBonusProposerReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWithdrawAddrEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getClaimCooldown();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getRewardContract();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string community_tax = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.Params.prototype.getCommunityTax = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.setCommunityTax = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string base_proposer_reward = 2;
 * @return {string}
 */
proto.sgn.distribution.v1.Params.prototype.getBaseProposerReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.setBaseProposerReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bonus_proposer_reward = 3;
 * @return {string}
 */
proto.sgn.distribution.v1.Params.prototype.getBonusProposerReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.setBonusProposerReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool withdraw_addr_enabled = 4;
 * @return {boolean}
 */
proto.sgn.distribution.v1.Params.prototype.getWithdrawAddrEnabled = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.setWithdrawAddrEnabled = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Duration claim_cooldown = 5;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.distribution.v1.Params.prototype.getClaimCooldown = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 5));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
*/
proto.sgn.distribution.v1.Params.prototype.setClaimCooldown = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.clearClaimCooldown = function() {
  return this.setClaimCooldown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.Params.prototype.hasClaimCooldown = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};


/**
 * optional sgn.common.v1.ContractInfo reward_contract = 6;
 * @return {?proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.distribution.v1.Params.prototype.getRewardContract = function() {
  return /** @type{?proto.sgn.common.v1.ContractInfo} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ContractInfo, 6));
};


/**
 * @param {?proto.sgn.common.v1.ContractInfo|undefined} value
 * @return {!proto.sgn.distribution.v1.Params} returns this
*/
proto.sgn.distribution.v1.Params.prototype.setRewardContract = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.Params} returns this
 */
proto.sgn.distribution.v1.Params.prototype.clearRewardContract = function() {
  return this.setRewardContract(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.Params.prototype.hasRewardContract = function() {
  return googleProtobuf.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.ValidatorHistoricalRewards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.toObject = function(includeInstance, msg) {
  var obj = {
    cumulativeRewardRatioList: googleProtobuf.Message.toObjectList(msg.getCumulativeRewardRatioList(),
    coin_pb.DecCoin.toObject, includeInstance),
    referenceCount: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.ValidatorHistoricalRewards}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.ValidatorHistoricalRewards;
  return proto.sgn.distribution.v1.ValidatorHistoricalRewards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.ValidatorHistoricalRewards}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCumulativeRewardRatio(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReferenceCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.ValidatorHistoricalRewards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCumulativeRewardRatioList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getReferenceCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin cumulative_reward_ratio = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.getCumulativeRewardRatioList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} returns this
*/
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.setCumulativeRewardRatioList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.addCumulativeRewardRatio = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} returns this
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.clearCumulativeRewardRatioList = function() {
  return this.setCumulativeRewardRatioList([]);
};


/**
 * optional uint32 reference_count = 2;
 * @return {number}
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.getReferenceCount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.distribution.v1.ValidatorHistoricalRewards} returns this
 */
proto.sgn.distribution.v1.ValidatorHistoricalRewards.prototype.setReferenceCount = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.ValidatorCurrentRewards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.ValidatorCurrentRewards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.toObject = function(includeInstance, msg) {
  var obj = {
    rewardsList: googleProtobuf.Message.toObjectList(msg.getRewardsList(),
    coin_pb.DecCoin.toObject, includeInstance),
    period: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.ValidatorCurrentRewards}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.ValidatorCurrentRewards;
  return proto.sgn.distribution.v1.ValidatorCurrentRewards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.ValidatorCurrentRewards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.ValidatorCurrentRewards}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.ValidatorCurrentRewards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.ValidatorCurrentRewards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getPeriod();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin rewards = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.ValidatorCurrentRewards} returns this
*/
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.setRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.addRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.ValidatorCurrentRewards} returns this
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};


/**
 * optional uint64 period = 2;
 * @return {number}
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.getPeriod = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.distribution.v1.ValidatorCurrentRewards} returns this
 */
proto.sgn.distribution.v1.ValidatorCurrentRewards.prototype.setPeriod = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.ValidatorAccumulatedCommission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.toObject = function(includeInstance, msg) {
  var obj = {
    commissionList: googleProtobuf.Message.toObjectList(msg.getCommissionList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.ValidatorAccumulatedCommission;
  return proto.sgn.distribution.v1.ValidatorAccumulatedCommission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCommission(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.ValidatorAccumulatedCommission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommissionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin commission = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.getCommissionList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission} returns this
*/
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.setCommissionList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.addCommission = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.ValidatorAccumulatedCommission} returns this
 */
proto.sgn.distribution.v1.ValidatorAccumulatedCommission.prototype.clearCommissionList = function() {
  return this.setCommissionList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.ValidatorOutstandingRewards.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.ValidatorOutstandingRewards} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.toObject = function(includeInstance, msg) {
  var obj = {
    rewardsList: googleProtobuf.Message.toObjectList(msg.getRewardsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.ValidatorOutstandingRewards}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.ValidatorOutstandingRewards;
  return proto.sgn.distribution.v1.ValidatorOutstandingRewards.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.ValidatorOutstandingRewards} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.ValidatorOutstandingRewards}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.ValidatorOutstandingRewards.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.ValidatorOutstandingRewards} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin rewards = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.getRewardsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.ValidatorOutstandingRewards} returns this
*/
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.setRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.addRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.ValidatorOutstandingRewards} returns this
 */
proto.sgn.distribution.v1.ValidatorOutstandingRewards.prototype.clearRewardsList = function() {
  return this.setRewardsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.FeePool.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.FeePool.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.FeePool.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.FeePool} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.FeePool.toObject = function(includeInstance, msg) {
  var obj = {
    communityPoolList: googleProtobuf.Message.toObjectList(msg.getCommunityPoolList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.FeePool}
 */
proto.sgn.distribution.v1.FeePool.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.FeePool;
  return proto.sgn.distribution.v1.FeePool.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.FeePool} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.FeePool}
 */
proto.sgn.distribution.v1.FeePool.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addCommunityPool(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.FeePool.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.FeePool.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.FeePool} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.FeePool.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommunityPoolList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin community_pool = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.FeePool.prototype.getCommunityPoolList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.FeePool} returns this
*/
proto.sgn.distribution.v1.FeePool.prototype.setCommunityPoolList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.FeePool.prototype.addCommunityPool = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.FeePool} returns this
 */
proto.sgn.distribution.v1.FeePool.prototype.clearCommunityPoolList = function() {
  return this.setCommunityPoolList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.repeatedFields_ = [4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.CommunityPoolSpendProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    recipient: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    amountList: googleProtobuf.Message.toObjectList(msg.getAmountList(),
    coin_pb.Coin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.CommunityPoolSpendProposal;
  return proto.sgn.distribution.v1.CommunityPoolSpendProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 4:
      var value = new coin_pb.Coin;
      reader.readMessage(value,coin_pb.Coin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.CommunityPoolSpendProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      coin_pb.Coin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.getRecipient = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated cosmos.base.v1beta1.Coin amount = 4;
 * @return {!Array<!proto.cosmos.base.v1beta1.Coin>}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.Coin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.Coin, 4));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.Coin>} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} returns this
*/
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.setAmountList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.Coin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.Coin}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.addAmount = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.cosmos.base.v1beta1.Coin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposal} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposal.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.DelegatorStartingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.DelegatorStartingInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.toObject = function(includeInstance, msg) {
  var obj = {
    previousPeriod: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    stake: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.DelegatorStartingInfo}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.DelegatorStartingInfo;
  return proto.sgn.distribution.v1.DelegatorStartingInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.DelegatorStartingInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.DelegatorStartingInfo}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPreviousPeriod(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStake(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.DelegatorStartingInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.DelegatorStartingInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPreviousPeriod();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStake();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 previous_period = 1;
 * @return {number}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.getPreviousPeriod = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.distribution.v1.DelegatorStartingInfo} returns this
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.setPreviousPeriod = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string stake = 2;
 * @return {string}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.getStake = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.DelegatorStartingInfo} returns this
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.setStake = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 height = 3;
 * @return {number}
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.distribution.v1.DelegatorStartingInfo} returns this
 */
proto.sgn.distribution.v1.DelegatorStartingInfo.prototype.setHeight = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.DelegationDelegatorReward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.DelegationDelegatorReward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.toObject = function(includeInstance, msg) {
  var obj = {
    validatorAddress: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    rewardList: googleProtobuf.Message.toObjectList(msg.getRewardList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.DelegationDelegatorReward;
  return proto.sgn.distribution.v1.DelegationDelegatorReward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.DelegationDelegatorReward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setValidatorAddress(value);
      break;
    case 2:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.DelegationDelegatorReward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.DelegationDelegatorReward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValidatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRewardList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * optional string validator_address = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.getValidatorAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward} returns this
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.setValidatorAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated cosmos.base.v1beta1.DecCoin reward = 2;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.getRewardList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 2));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward} returns this
*/
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.setRewardList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.addReward = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.DelegationDelegatorReward} returns this
 */
proto.sgn.distribution.v1.DelegationDelegatorReward.prototype.clearRewardList = function() {
  return this.setRewardList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.StakingRewardInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.StakingRewardInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    cumulativeRewardAmount: (f = msg.getCumulativeRewardAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    claimedRewardAmount: (f = msg.getClaimedRewardAmount()) && coin_pb.DecCoin.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo}
 */
proto.sgn.distribution.v1.StakingRewardInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.StakingRewardInfo;
  return proto.sgn.distribution.v1.StakingRewardInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.StakingRewardInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo}
 */
proto.sgn.distribution.v1.StakingRewardInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setCumulativeRewardAmount(value);
      break;
    case 2:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setClaimedRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.StakingRewardInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.StakingRewardInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCumulativeRewardAmount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getClaimedRewardAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * optional cosmos.base.v1beta1.DecCoin cumulative_reward_amount = 1;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.getCumulativeRewardAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo} returns this
*/
proto.sgn.distribution.v1.StakingRewardInfo.prototype.setCumulativeRewardAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.clearCumulativeRewardAmount = function() {
  return this.setCumulativeRewardAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.hasCumulativeRewardAmount = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional cosmos.base.v1beta1.DecCoin claimed_reward_amount = 2;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.getClaimedRewardAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo} returns this
*/
proto.sgn.distribution.v1.StakingRewardInfo.prototype.setClaimedRewardAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.StakingRewardInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.clearClaimedRewardAmount = function() {
  return this.setClaimedRewardAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.StakingRewardInfo.prototype.hasClaimedRewardAmount = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.repeatedFields_ = [5];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.StakingRewardClaimInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.StakingRewardClaimInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipient: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    lastClaimTime: (f = msg.getLastClaimTime()) && timestamp_pb.Timestamp.toObject(includeInstance, f),
    cumulativeRewardAmount: (f = msg.getCumulativeRewardAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    rewardProtoBytes: msg.getRewardProtoBytes_asB64(),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.StakingRewardClaimInfo;
  return proto.sgn.distribution.v1.StakingRewardClaimInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.StakingRewardClaimInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 2:
      var value = new timestamp_pb.Timestamp;
      reader.readMessage(value,timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastClaimTime(value);
      break;
    case 3:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setCumulativeRewardAmount(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRewardProtoBytes(value);
      break;
    case 5:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.StakingRewardClaimInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.StakingRewardClaimInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastClaimTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCumulativeRewardAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getRewardProtoBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional string recipient = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getRecipient = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp last_claim_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getLastClaimTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    googleProtobuf.Message.getWrapperField(this, timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
*/
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.setLastClaimTime = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.clearLastClaimTime = function() {
  return this.setLastClaimTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.hasLastClaimTime = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional cosmos.base.v1beta1.DecCoin cumulative_reward_amount = 3;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getCumulativeRewardAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 3));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
*/
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.setCumulativeRewardAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.clearCumulativeRewardAmount = function() {
  return this.setCumulativeRewardAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.hasCumulativeRewardAmount = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional bytes reward_proto_bytes = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getRewardProtoBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes reward_proto_bytes = 4;
 * This is a type-conversion wrapper around `getRewardProtoBytes()`
 * @return {string}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getRewardProtoBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRewardProtoBytes()));
};


/**
 * optional bytes reward_proto_bytes = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRewardProtoBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getRewardProtoBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRewardProtoBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.setRewardProtoBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * repeated sgn.common.v1.Signature signatures = 5;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 5));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
*/
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.StakingRewardClaimInfo} returns this
 */
proto.sgn.distribution.v1.StakingRewardClaimInfo.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.ClaimableFeesInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.ClaimableFeesInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.toObject = function(includeInstance, msg) {
  var obj = {
    claimableFeeAmountsList: googleProtobuf.Message.toObjectList(msg.getClaimableFeeAmountsList(),
    coin_pb.DecCoin.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.ClaimableFeesInfo}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.ClaimableFeesInfo;
  return proto.sgn.distribution.v1.ClaimableFeesInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.ClaimableFeesInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.ClaimableFeesInfo}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.addClaimableFeeAmounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.ClaimableFeesInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.ClaimableFeesInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClaimableFeeAmountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
};


/**
 * repeated cosmos.base.v1beta1.DecCoin claimable_fee_amounts = 1;
 * @return {!Array<!proto.cosmos.base.v1beta1.DecCoin>}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.getClaimableFeeAmountsList = function() {
  return /** @type{!Array<!proto.cosmos.base.v1beta1.DecCoin>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, coin_pb.DecCoin, 1));
};


/**
 * @param {!Array<!proto.cosmos.base.v1beta1.DecCoin>} value
 * @return {!proto.sgn.distribution.v1.ClaimableFeesInfo} returns this
*/
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.setClaimableFeeAmountsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.cosmos.base.v1beta1.DecCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.addClaimableFeeAmounts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.cosmos.base.v1beta1.DecCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.distribution.v1.ClaimableFeesInfo} returns this
 */
proto.sgn.distribution.v1.ClaimableFeesInfo.prototype.clearClaimableFeeAmountsList = function() {
  return this.setClaimableFeeAmountsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.StakingRewardOnChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.StakingRewardOnChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardOnChain.toObject = function(includeInstance, msg) {
  var obj = {
    recipient: msg.getRecipient_asB64(),
    cumulativeRewardAmount: msg.getCumulativeRewardAmount_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.StakingRewardOnChain}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.StakingRewardOnChain;
  return proto.sgn.distribution.v1.StakingRewardOnChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.StakingRewardOnChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.StakingRewardOnChain}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRecipient(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCumulativeRewardAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.StakingRewardOnChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.StakingRewardOnChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.StakingRewardOnChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipient_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCumulativeRewardAmount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes recipient = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getRecipient = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes recipient = 1;
 * This is a type-conversion wrapper around `getRecipient()`
 * @return {string}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getRecipient_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRecipient()));
};


/**
 * optional bytes recipient = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRecipient()`
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getRecipient_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRecipient()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.distribution.v1.StakingRewardOnChain} returns this
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes cumulative_reward_amount = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getCumulativeRewardAmount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes cumulative_reward_amount = 2;
 * This is a type-conversion wrapper around `getCumulativeRewardAmount()`
 * @return {string}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getCumulativeRewardAmount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getCumulativeRewardAmount()));
};


/**
 * optional bytes cumulative_reward_amount = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCumulativeRewardAmount()`
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.getCumulativeRewardAmount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getCumulativeRewardAmount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.distribution.v1.StakingRewardOnChain} returns this
 */
proto.sgn.distribution.v1.StakingRewardOnChain.prototype.setCumulativeRewardAmount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    recipient: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit;
  return proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string recipient = 3;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.getRecipient = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string amount = 4;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string deposit = 5;
 * @return {string}
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit} returns this
 */
proto.sgn.distribution.v1.CommunityPoolSpendProposalWithDeposit.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.sgn.distribution.v1);
});

var pegbridge_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/pegbridge/v1/pegbridge.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, cosmos_pb);

goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, duration_pb);

goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.sgn.pegbridge.v1.BurnInfo', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.DepositInfo', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.FeeClaimInfo', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MintInfo', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MintOnChain', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.OrigPeggedPair', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.PairDeleteProposal', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.Params', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.PegConfig', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.PegProposal', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.PeggedOrigIndex', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.WithdrawInfo', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.WithdrawOnChain', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.Params = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.Params, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.Params.displayName = 'proto.sgn.pegbridge.v1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.PegConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.pegbridge.v1.PegConfig.repeatedFields_, null);
};
goog.inherits(proto.sgn.pegbridge.v1.PegConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.PegConfig.displayName = 'proto.sgn.pegbridge.v1.PegConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.OrigPeggedPair = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.OrigPeggedPair, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.OrigPeggedPair.displayName = 'proto.sgn.pegbridge.v1.OrigPeggedPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.PeggedOrigIndex, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.PeggedOrigIndex.displayName = 'proto.sgn.pegbridge.v1.PeggedOrigIndex';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.DepositInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.DepositInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.DepositInfo.displayName = 'proto.sgn.pegbridge.v1.DepositInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MintInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.pegbridge.v1.MintInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MintInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MintInfo.displayName = 'proto.sgn.pegbridge.v1.MintInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.BurnInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.BurnInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.BurnInfo.displayName = 'proto.sgn.pegbridge.v1.BurnInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.WithdrawInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.pegbridge.v1.WithdrawInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.pegbridge.v1.WithdrawInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.WithdrawInfo.displayName = 'proto.sgn.pegbridge.v1.WithdrawInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.FeeClaimInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.FeeClaimInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.FeeClaimInfo.displayName = 'proto.sgn.pegbridge.v1.FeeClaimInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MintOnChain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MintOnChain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MintOnChain.displayName = 'proto.sgn.pegbridge.v1.MintOnChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.WithdrawOnChain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.WithdrawOnChain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.WithdrawOnChain.displayName = 'proto.sgn.pegbridge.v1.WithdrawOnChain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.PegProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.PegProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.PegProposal.displayName = 'proto.sgn.pegbridge.v1.PegProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.PairDeleteProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.PairDeleteProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.PairDeleteProposal.displayName = 'proto.sgn.pegbridge.v1.PairDeleteProposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.displayName = 'proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerSignCooldown: (f = msg.getTriggerSignCooldown()) && duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.Params}
 */
proto.sgn.pegbridge.v1.Params.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.Params;
  return proto.sgn.pegbridge.v1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.Params}
 */
proto.sgn.pegbridge.v1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTriggerSignCooldown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.Params.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerSignCooldown();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration trigger_sign_cooldown = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.pegbridge.v1.Params.prototype.getTriggerSignCooldown = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.pegbridge.v1.Params} returns this
*/
proto.sgn.pegbridge.v1.Params.prototype.setTriggerSignCooldown = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.Params} returns this
 */
proto.sgn.pegbridge.v1.Params.prototype.clearTriggerSignCooldown = function() {
  return this.setTriggerSignCooldown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.Params.prototype.hasTriggerSignCooldown = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.pegbridge.v1.PegConfig.repeatedFields_ = [1,2,3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.PegConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.PegConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PegConfig.toObject = function(includeInstance, msg) {
  var obj = {
    peggedTokenBridgesList: googleProtobuf.Message.toObjectList(msg.getPeggedTokenBridgesList(),
    common_pb.ContractInfo.toObject, includeInstance),
    originalTokenVaultsList: googleProtobuf.Message.toObjectList(msg.getOriginalTokenVaultsList(),
    common_pb.ContractInfo.toObject, includeInstance),
    origPeggedPairsList: googleProtobuf.Message.toObjectList(msg.getOrigPeggedPairsList(),
    proto.sgn.pegbridge.v1.OrigPeggedPair.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.PegConfig}
 */
proto.sgn.pegbridge.v1.PegConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.PegConfig;
  return proto.sgn.pegbridge.v1.PegConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.PegConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.PegConfig}
 */
proto.sgn.pegbridge.v1.PegConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addPeggedTokenBridges(value);
      break;
    case 2:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addOriginalTokenVaults(value);
      break;
    case 3:
      var value = new proto.sgn.pegbridge.v1.OrigPeggedPair;
      reader.readMessage(value,proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinaryFromReader);
      msg.addOrigPeggedPairs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.PegConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.PegConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PegConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeggedTokenBridgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getOriginalTokenVaultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrigPeggedPairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.pegbridge.v1.OrigPeggedPair.serializeBinaryToWriter
    );
  }
};


/**
 * repeated sgn.common.v1.ContractInfo pegged_token_bridges = 1;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.getPeggedTokenBridgesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 1));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
*/
proto.sgn.pegbridge.v1.PegConfig.prototype.setPeggedTokenBridgesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.addPeggedTokenBridges = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.clearPeggedTokenBridgesList = function() {
  return this.setPeggedTokenBridgesList([]);
};


/**
 * repeated sgn.common.v1.ContractInfo original_token_vaults = 2;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.getOriginalTokenVaultsList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 2));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
*/
proto.sgn.pegbridge.v1.PegConfig.prototype.setOriginalTokenVaultsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.addOriginalTokenVaults = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.clearOriginalTokenVaultsList = function() {
  return this.setOriginalTokenVaultsList([]);
};


/**
 * repeated OrigPeggedPair orig_pegged_pairs = 3;
 * @return {!Array<!proto.sgn.pegbridge.v1.OrigPeggedPair>}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.getOrigPeggedPairsList = function() {
  return /** @type{!Array<!proto.sgn.pegbridge.v1.OrigPeggedPair>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.pegbridge.v1.OrigPeggedPair, 3));
};


/**
 * @param {!Array<!proto.sgn.pegbridge.v1.OrigPeggedPair>} value
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
*/
proto.sgn.pegbridge.v1.PegConfig.prototype.setOrigPeggedPairsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.pegbridge.v1.OrigPeggedPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.addOrigPeggedPairs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.pegbridge.v1.OrigPeggedPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.pegbridge.v1.PegConfig} returns this
 */
proto.sgn.pegbridge.v1.PegConfig.prototype.clearOrigPeggedPairsList = function() {
  return this.setOrigPeggedPairsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.OrigPeggedPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.OrigPeggedPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    orig: (f = msg.getOrig()) && common_pb.ERC20Token.toObject(includeInstance, f),
    pegged: (f = msg.getPegged()) && common_pb.ERC20Token.toObject(includeInstance, f),
    mintFeePips: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    maxMintFee: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    burnFeePips: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    maxBurnFee: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    supplyCap: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.OrigPeggedPair;
  return proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.OrigPeggedPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setOrig(value);
      break;
    case 2:
      var value = new common_pb.ERC20Token;
      reader.readMessage(value,common_pb.ERC20Token.deserializeBinaryFromReader);
      msg.setPegged(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMintFeePips(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxMintFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBurnFeePips(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxBurnFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplyCap(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.OrigPeggedPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.OrigPeggedPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getPegged();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.ERC20Token.serializeBinaryToWriter
    );
  }
  f = message.getMintFeePips();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMaxMintFee();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBurnFeePips();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMaxBurnFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSupplyCap();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional sgn.common.v1.ERC20Token orig = 1;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getOrig = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 1));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
*/
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setOrig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.clearOrig = function() {
  return this.setOrig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.hasOrig = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.common.v1.ERC20Token pegged = 2;
 * @return {?proto.sgn.common.v1.ERC20Token}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getPegged = function() {
  return /** @type{?proto.sgn.common.v1.ERC20Token} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ERC20Token, 2));
};


/**
 * @param {?proto.sgn.common.v1.ERC20Token|undefined} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
*/
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setPegged = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.clearPegged = function() {
  return this.setPegged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.hasPegged = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional uint32 mint_fee_pips = 3;
 * @return {number}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getMintFeePips = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setMintFeePips = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string max_mint_fee = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getMaxMintFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setMaxMintFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 burn_fee_pips = 5;
 * @return {number}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getBurnFeePips = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setBurnFeePips = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string max_burn_fee = 6;
 * @return {string}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getMaxBurnFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setMaxBurnFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string supply_cap = 7;
 * @return {string}
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.getSupplyCap = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.OrigPeggedPair} returns this
 */
proto.sgn.pegbridge.v1.OrigPeggedPair.prototype.setSupplyCap = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.PeggedOrigIndex.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.PeggedOrigIndex} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.toObject = function(includeInstance, msg) {
  var f, obj = {
    pegged: (f = msg.getPegged()) && common_pb.ContractInfo.toObject(includeInstance, f),
    orig: (f = msg.getOrig()) && common_pb.ContractInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.PeggedOrigIndex;
  return proto.sgn.pegbridge.v1.PeggedOrigIndex.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.PeggedOrigIndex} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.setPegged(value);
      break;
    case 2:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.setOrig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.PeggedOrigIndex.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.PeggedOrigIndex} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPegged();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getOrig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional sgn.common.v1.ContractInfo pegged = 1;
 * @return {?proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.getPegged = function() {
  return /** @type{?proto.sgn.common.v1.ContractInfo} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ContractInfo, 1));
};


/**
 * @param {?proto.sgn.common.v1.ContractInfo|undefined} value
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex} returns this
*/
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.setPegged = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex} returns this
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.clearPegged = function() {
  return this.setPegged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.hasPegged = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.common.v1.ContractInfo orig = 2;
 * @return {?proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.getOrig = function() {
  return /** @type{?proto.sgn.common.v1.ContractInfo} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ContractInfo, 2));
};


/**
 * @param {?proto.sgn.common.v1.ContractInfo|undefined} value
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex} returns this
*/
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.setOrig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.PeggedOrigIndex} returns this
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.clearOrig = function() {
  return this.setOrig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.PeggedOrigIndex.prototype.hasOrig = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.DepositInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.DepositInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.DepositInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    depositId: msg.getDepositId_asB64(),
    mintId: msg.getMintId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.DepositInfo}
 */
proto.sgn.pegbridge.v1.DepositInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.DepositInfo;
  return proto.sgn.pegbridge.v1.DepositInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.DepositInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.DepositInfo}
 */
proto.sgn.pegbridge.v1.DepositInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDepositId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMintId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.DepositInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.DepositInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.DepositInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDepositId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMintId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.DepositInfo} returns this
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes deposit_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getDepositId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes deposit_id = 2;
 * This is a type-conversion wrapper around `getDepositId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getDepositId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getDepositId()));
};


/**
 * optional bytes deposit_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDepositId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getDepositId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getDepositId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.DepositInfo} returns this
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.setDepositId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes mint_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getMintId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes mint_id = 3;
 * This is a type-conversion wrapper around `getMintId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getMintId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getMintId()));
};


/**
 * optional bytes mint_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMintId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.getMintId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getMintId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.DepositInfo} returns this
 */
proto.sgn.pegbridge.v1.DepositInfo.prototype.setMintId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.pegbridge.v1.MintInfo.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MintInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MintInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MintInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    mintProtoBytes: msg.getMintProtoBytes_asB64(),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance),
    baseFee: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    percentageFee: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    success: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false),
    lastReqTime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MintInfo}
 */
proto.sgn.pegbridge.v1.MintInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MintInfo;
  return proto.sgn.pegbridge.v1.MintInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MintInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MintInfo}
 */
proto.sgn.pegbridge.v1.MintInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMintProtoBytes(value);
      break;
    case 3:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFee(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPercentageFee(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastReqTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MintInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MintInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MintInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getMintProtoBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getBaseFee();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPercentageFee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLastReqTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes mint_proto_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getMintProtoBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes mint_proto_bytes = 2;
 * This is a type-conversion wrapper around `getMintProtoBytes()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getMintProtoBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getMintProtoBytes()));
};


/**
 * optional bytes mint_proto_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMintProtoBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getMintProtoBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getMintProtoBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setMintProtoBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated sgn.common.v1.Signature signatures = 3;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
*/
proto.sgn.pegbridge.v1.MintInfo.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};


/**
 * optional string base_fee = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getBaseFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string percentage_fee = 5;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getPercentageFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setPercentageFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool success = 6;
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getSuccess = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setSuccess = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 last_req_time = 7;
 * @return {number}
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.getLastReqTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.MintInfo} returns this
 */
proto.sgn.pegbridge.v1.MintInfo.prototype.setLastReqTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.BurnInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.BurnInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.BurnInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    burnId: msg.getBurnId_asB64(),
    withdrawId: msg.getWithdrawId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.BurnInfo}
 */
proto.sgn.pegbridge.v1.BurnInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.BurnInfo;
  return proto.sgn.pegbridge.v1.BurnInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.BurnInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.BurnInfo}
 */
proto.sgn.pegbridge.v1.BurnInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBurnId(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWithdrawId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.BurnInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.BurnInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.BurnInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBurnId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getWithdrawId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.BurnInfo} returns this
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes burn_id = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getBurnId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes burn_id = 2;
 * This is a type-conversion wrapper around `getBurnId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getBurnId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBurnId()));
};


/**
 * optional bytes burn_id = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBurnId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getBurnId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBurnId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.BurnInfo} returns this
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.setBurnId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes withdraw_id = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getWithdrawId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes withdraw_id = 3;
 * This is a type-conversion wrapper around `getWithdrawId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getWithdrawId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWithdrawId()));
};


/**
 * optional bytes withdraw_id = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWithdrawId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.getWithdrawId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWithdrawId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.BurnInfo} returns this
 */
proto.sgn.pegbridge.v1.BurnInfo.prototype.setWithdrawId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.pegbridge.v1.WithdrawInfo.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.WithdrawInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.WithdrawInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.WithdrawInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    withdrawProtoBytes: msg.getWithdrawProtoBytes_asB64(),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance),
    baseFee: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    percentageFee: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    success: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 6, false),
    lastReqTime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.WithdrawInfo;
  return proto.sgn.pegbridge.v1.WithdrawInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.WithdrawInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWithdrawProtoBytes(value);
      break;
    case 3:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFee(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPercentageFee(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastReqTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.WithdrawInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.WithdrawInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.WithdrawInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getWithdrawProtoBytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getBaseFee();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPercentageFee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getLastReqTime();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes withdraw_proto_bytes = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getWithdrawProtoBytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes withdraw_proto_bytes = 2;
 * This is a type-conversion wrapper around `getWithdrawProtoBytes()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getWithdrawProtoBytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWithdrawProtoBytes()));
};


/**
 * optional bytes withdraw_proto_bytes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWithdrawProtoBytes()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getWithdrawProtoBytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWithdrawProtoBytes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setWithdrawProtoBytes = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated sgn.common.v1.Signature signatures = 3;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
*/
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};


/**
 * optional string base_fee = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getBaseFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string percentage_fee = 5;
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getPercentageFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setPercentageFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool success = 6;
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getSuccess = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setSuccess = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int64 last_req_time = 7;
 * @return {number}
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.getLastReqTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawInfo} returns this
 */
proto.sgn.pegbridge.v1.WithdrawInfo.prototype.setLastReqTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.FeeClaimInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.FeeClaimInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.toObject = function(includeInstance, msg) {
  var obj = {
    withdrawId: msg.getWithdrawId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.FeeClaimInfo}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.FeeClaimInfo;
  return proto.sgn.pegbridge.v1.FeeClaimInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.FeeClaimInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.FeeClaimInfo}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWithdrawId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.FeeClaimInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.FeeClaimInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes withdraw_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.getWithdrawId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes withdraw_id = 1;
 * This is a type-conversion wrapper around `getWithdrawId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.getWithdrawId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWithdrawId()));
};


/**
 * optional bytes withdraw_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWithdrawId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.getWithdrawId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWithdrawId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.FeeClaimInfo} returns this
 */
proto.sgn.pegbridge.v1.FeeClaimInfo.prototype.setWithdrawId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MintOnChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MintOnChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MintOnChain.toObject = function(includeInstance, msg) {
  var obj = {
    token: msg.getToken_asB64(),
    account: msg.getAccount_asB64(),
    amount: msg.getAmount_asB64(),
    depositor: msg.getDepositor_asB64(),
    refChainId: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    refId: msg.getRefId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MintOnChain}
 */
proto.sgn.pegbridge.v1.MintOnChain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MintOnChain;
  return proto.sgn.pegbridge.v1.MintOnChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MintOnChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MintOnChain}
 */
proto.sgn.pegbridge.v1.MintOnChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDepositor(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefChainId(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MintOnChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MintOnChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MintOnChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAccount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAmount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getDepositor_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getRefChainId();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getRefId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes token = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes token = 1;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes token = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setToken = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes account = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAccount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes account = 2;
 * This is a type-conversion wrapper around `getAccount()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAccount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAccount()));
};


/**
 * optional bytes account = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccount()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAccount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAccount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setAccount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes amount = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAmount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes amount = 3;
 * This is a type-conversion wrapper around `getAmount()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAmount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAmount()));
};


/**
 * optional bytes amount = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAmount()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getAmount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAmount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes depositor = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getDepositor = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes depositor = 4;
 * This is a type-conversion wrapper around `getDepositor()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getDepositor_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getDepositor()));
};


/**
 * optional bytes depositor = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDepositor()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getDepositor_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getDepositor()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setDepositor = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 ref_chain_id = 5;
 * @return {number}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getRefChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setRefChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes ref_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getRefId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes ref_id = 6;
 * This is a type-conversion wrapper around `getRefId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getRefId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRefId()));
};


/**
 * optional bytes ref_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRefId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.getRefId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRefId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MintOnChain} returns this
 */
proto.sgn.pegbridge.v1.MintOnChain.prototype.setRefId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 6, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.WithdrawOnChain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.WithdrawOnChain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.toObject = function(includeInstance, msg) {
  var obj = {
    token: msg.getToken_asB64(),
    receiver: msg.getReceiver_asB64(),
    amount: msg.getAmount_asB64(),
    burnAccount: msg.getBurnAccount_asB64(),
    refChainId: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    refId: msg.getRefId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.WithdrawOnChain;
  return proto.sgn.pegbridge.v1.WithdrawOnChain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.WithdrawOnChain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBurnAccount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRefChainId(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.WithdrawOnChain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.WithdrawOnChain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getReceiver_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAmount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBurnAccount_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getRefChainId();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getRefId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes token = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes token = 1;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes token = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setToken = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes receiver = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getReceiver = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes receiver = 2;
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getReceiver_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getReceiver()));
};


/**
 * optional bytes receiver = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReceiver()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getReceiver_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getReceiver()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setReceiver = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes amount = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getAmount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes amount = 3;
 * This is a type-conversion wrapper around `getAmount()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getAmount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getAmount()));
};


/**
 * optional bytes amount = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAmount()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getAmount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getAmount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes burn_account = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getBurnAccount = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes burn_account = 4;
 * This is a type-conversion wrapper around `getBurnAccount()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getBurnAccount_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBurnAccount()));
};


/**
 * optional bytes burn_account = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBurnAccount()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getBurnAccount_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBurnAccount()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setBurnAccount = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional uint64 ref_chain_id = 5;
 * @return {number}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getRefChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setRefChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes ref_id = 6;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getRefId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes ref_id = 6;
 * This is a type-conversion wrapper around `getRefId()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getRefId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRefId()));
};


/**
 * optional bytes ref_id = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRefId()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.getRefId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRefId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.WithdrawOnChain} returns this
 */
proto.sgn.pegbridge.v1.WithdrawOnChain.prototype.setRefId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 6, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.PegProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.PegProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PegProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    pegConfig: (f = msg.getPegConfig()) && proto.sgn.pegbridge.v1.PegConfig.toObject(includeInstance, f),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.PegProposal}
 */
proto.sgn.pegbridge.v1.PegProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.PegProposal;
  return proto.sgn.pegbridge.v1.PegProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.PegProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.PegProposal}
 */
proto.sgn.pegbridge.v1.PegProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.pegbridge.v1.PegConfig;
      reader.readMessage(value,proto.sgn.pegbridge.v1.PegConfig.deserializeBinaryFromReader);
      msg.setPegConfig(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.PegProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.PegProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PegProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPegConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.pegbridge.v1.PegConfig.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PegProposal} returns this
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PegProposal} returns this
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional PegConfig peg_config = 3;
 * @return {?proto.sgn.pegbridge.v1.PegConfig}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.getPegConfig = function() {
  return /** @type{?proto.sgn.pegbridge.v1.PegConfig} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.pegbridge.v1.PegConfig, 3));
};


/**
 * @param {?proto.sgn.pegbridge.v1.PegConfig|undefined} value
 * @return {!proto.sgn.pegbridge.v1.PegProposal} returns this
*/
proto.sgn.pegbridge.v1.PegProposal.prototype.setPegConfig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.PegProposal} returns this
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.clearPegConfig = function() {
  return this.setPegConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.hasPegConfig = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PegProposal} returns this
 */
proto.sgn.pegbridge.v1.PegProposal.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.PairDeleteProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.PairDeleteProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    pairToDelete: (f = msg.getPairToDelete()) && proto.sgn.pegbridge.v1.OrigPeggedPair.toObject(includeInstance, f),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.PairDeleteProposal;
  return proto.sgn.pegbridge.v1.PairDeleteProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.PairDeleteProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.pegbridge.v1.OrigPeggedPair;
      reader.readMessage(value,proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinaryFromReader);
      msg.setPairToDelete(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.PairDeleteProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.PairDeleteProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPairToDelete();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.pegbridge.v1.OrigPeggedPair.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal} returns this
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal} returns this
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrigPeggedPair pair_to_delete = 3;
 * @return {?proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.getPairToDelete = function() {
  return /** @type{?proto.sgn.pegbridge.v1.OrigPeggedPair} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.pegbridge.v1.OrigPeggedPair, 3));
};


/**
 * @param {?proto.sgn.pegbridge.v1.OrigPeggedPair|undefined} value
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal} returns this
*/
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.setPairToDelete = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal} returns this
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.clearPairToDelete = function() {
  return this.setPairToDelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.hasPairToDelete = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.PairDeleteProposal} returns this
 */
proto.sgn.pegbridge.v1.PairDeleteProposal.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    pair: (f = msg.getPair()) && proto.sgn.pegbridge.v1.OrigPeggedPair.toObject(includeInstance, f),
    totalSupply: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal;
  return proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.pegbridge.v1.OrigPeggedPair;
      reader.readMessage(value,proto.sgn.pegbridge.v1.OrigPeggedPair.deserializeBinaryFromReader);
      msg.setPair(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalSupply(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPair();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.pegbridge.v1.OrigPeggedPair.serializeBinaryToWriter
    );
  }
  f = message.getTotalSupply();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional OrigPeggedPair pair = 3;
 * @return {?proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.getPair = function() {
  return /** @type{?proto.sgn.pegbridge.v1.OrigPeggedPair} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.pegbridge.v1.OrigPeggedPair, 3));
};


/**
 * @param {?proto.sgn.pegbridge.v1.OrigPeggedPair|undefined} value
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
*/
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.setPair = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.clearPair = function() {
  return this.setPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.hasPair = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional string total_supply = 4;
 * @return {string}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.getTotalSupply = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.setTotalSupply = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string deposit = 5;
 * @return {string}
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal} returns this
 */
proto.sgn.pegbridge.v1.TotalSupplyUpdateProposal.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.sgn.pegbridge.v1);
});

var message_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/message/v1/message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, cosmos_pb);

goog.object.extend(proto, coin_pb);

goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, duration_pb);

goog.object.extend(proto, timestamp_pb);

goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.sgn.message.v1.ExecutionContext', null, global);
goog.exportSymbol('proto.sgn.message.v1.ExecutionStatus', null, global);
goog.exportSymbol('proto.sgn.message.v1.FeeClaimDetails', null, global);
goog.exportSymbol('proto.sgn.message.v1.FeeClaimInfo', null, global);
goog.exportSymbol('proto.sgn.message.v1.Message', null, global);
goog.exportSymbol('proto.sgn.message.v1.MessageBusInfo', null, global);
goog.exportSymbol('proto.sgn.message.v1.MsgProposal', null, global);
goog.exportSymbol('proto.sgn.message.v1.MsgType', null, global);
goog.exportSymbol('proto.sgn.message.v1.Params', null, global);
goog.exportSymbol('proto.sgn.message.v1.Transfer', null, global);
goog.exportSymbol('proto.sgn.message.v1.TransferType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.Params = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.Params, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.Params.displayName = 'proto.sgn.message.v1.Params';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.Message = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.Message.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.Message, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.Message.displayName = 'proto.sgn.message.v1.Message';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.Transfer = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.Transfer, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.Transfer.displayName = 'proto.sgn.message.v1.Transfer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.ExecutionContext = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.ExecutionContext.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.ExecutionContext, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.ExecutionContext.displayName = 'proto.sgn.message.v1.ExecutionContext';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.FeeClaimDetails = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.FeeClaimDetails.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.FeeClaimDetails, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.FeeClaimDetails.displayName = 'proto.sgn.message.v1.FeeClaimDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.FeeClaimInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.FeeClaimInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.FeeClaimInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.FeeClaimInfo.displayName = 'proto.sgn.message.v1.FeeClaimInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.MessageBusInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.MessageBusInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.MessageBusInfo.displayName = 'proto.sgn.message.v1.MessageBusInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.MsgProposal = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.MsgProposal.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.MsgProposal, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.MsgProposal.displayName = 'proto.sgn.message.v1.MsgProposal';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.Params.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.Params.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.Params} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Params.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerSignCooldown: (f = msg.getTriggerSignCooldown()) && duration_pb.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.Params}
 */
proto.sgn.message.v1.Params.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.Params;
  return proto.sgn.message.v1.Params.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.Params} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.Params}
 */
proto.sgn.message.v1.Params.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new duration_pb.Duration;
      reader.readMessage(value,duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTriggerSignCooldown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Params.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.Params.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.Params} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Params.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTriggerSignCooldown();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      duration_pb.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration trigger_sign_cooldown = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.sgn.message.v1.Params.prototype.getTriggerSignCooldown = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    googleProtobuf.Message.getWrapperField(this, duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.sgn.message.v1.Params} returns this
*/
proto.sgn.message.v1.Params.prototype.setTriggerSignCooldown = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.Params} returns this
 */
proto.sgn.message.v1.Params.prototype.clearTriggerSignCooldown = function() {
  return this.setTriggerSignCooldown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.Params.prototype.hasTriggerSignCooldown = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.Message.repeatedFields_ = [9];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.Message} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Message.toObject = function(includeInstance, msg) {
  var obj = {
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    receiver: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    data: msg.getData_asB64(),
    fee: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    transferType: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    executionStatus: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance),
    lastSigReqTime: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.Message}
 */
proto.sgn.message.v1.Message.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.Message;
  return proto.sgn.message.v1.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.Message}
 */
proto.sgn.message.v1.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFee(value);
      break;
    case 7:
      var value = /** @type {!proto.sgn.message.v1.TransferType} */ (reader.readEnum());
      msg.setTransferType(value);
      break;
    case 8:
      var value = /** @type {!proto.sgn.message.v1.ExecutionStatus} */ (reader.readEnum());
      msg.setExecutionStatus(value);
      break;
    case 9:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastSigReqTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Message.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.Message.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.Message} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Message.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTransferType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getExecutionStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getLastSigReqTime();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
};


/**
 * optional uint64 src_chain_id = 1;
 * @return {number}
 */
proto.sgn.message.v1.Message.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.message.v1.Message.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 dst_chain_id = 3;
 * @return {number}
 */
proto.sgn.message.v1.Message.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string receiver = 4;
 * @return {string}
 */
proto.sgn.message.v1.Message.prototype.getReceiver = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setReceiver = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes data = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.message.v1.Message.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes data = 5;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.sgn.message.v1.Message.prototype.getData_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Message.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setData = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string fee = 6;
 * @return {string}
 */
proto.sgn.message.v1.Message.prototype.getFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional TransferType transfer_type = 7;
 * @return {!proto.sgn.message.v1.TransferType}
 */
proto.sgn.message.v1.Message.prototype.getTransferType = function() {
  return /** @type {!proto.sgn.message.v1.TransferType} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.sgn.message.v1.TransferType} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setTransferType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional ExecutionStatus execution_status = 8;
 * @return {!proto.sgn.message.v1.ExecutionStatus}
 */
proto.sgn.message.v1.Message.prototype.getExecutionStatus = function() {
  return /** @type {!proto.sgn.message.v1.ExecutionStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.sgn.message.v1.ExecutionStatus} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setExecutionStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 8, value);
};


/**
 * repeated sgn.common.v1.Signature signatures = 9;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.message.v1.Message.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 9));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.message.v1.Message} returns this
*/
proto.sgn.message.v1.Message.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.message.v1.Message.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};


/**
 * optional int64 last_sig_req_time = 10;
 * @return {number}
 */
proto.sgn.message.v1.Message.prototype.getLastSigReqTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.Message} returns this
 */
proto.sgn.message.v1.Message.prototype.setLastSigReqTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 10, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.Transfer.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.Transfer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.Transfer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Transfer.toObject = function(includeInstance, msg) {
  var obj = {
    token: msg.getToken_asB64(),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    refId: msg.getRefId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.Transfer}
 */
proto.sgn.message.v1.Transfer.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.Transfer;
  return proto.sgn.message.v1.Transfer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.Transfer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.Transfer}
 */
proto.sgn.message.v1.Transfer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Transfer.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.Transfer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.Transfer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.Transfer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getRefId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional bytes token = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.message.v1.Transfer.prototype.getToken = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes token = 1;
 * This is a type-conversion wrapper around `getToken()`
 * @return {string}
 */
proto.sgn.message.v1.Transfer.prototype.getToken_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getToken()));
};


/**
 * optional bytes token = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getToken()`
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Transfer.prototype.getToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.message.v1.Transfer} returns this
 */
proto.sgn.message.v1.Transfer.prototype.setToken = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.sgn.message.v1.Transfer.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.Transfer} returns this
 */
proto.sgn.message.v1.Transfer.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 seq_num = 3;
 * @return {number}
 */
proto.sgn.message.v1.Transfer.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.Transfer} returns this
 */
proto.sgn.message.v1.Transfer.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes ref_id = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.message.v1.Transfer.prototype.getRefId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes ref_id = 4;
 * This is a type-conversion wrapper around `getRefId()`
 * @return {string}
 */
proto.sgn.message.v1.Transfer.prototype.getRefId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRefId()));
};


/**
 * optional bytes ref_id = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRefId()`
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.Transfer.prototype.getRefId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRefId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.message.v1.Transfer} returns this
 */
proto.sgn.message.v1.Transfer.prototype.setRefId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.ExecutionContext.repeatedFields_ = [4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.ExecutionContext.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.ExecutionContext.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.ExecutionContext} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.ExecutionContext.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: msg.getMessageId_asB64(),
    message: (f = msg.getMessage()) && proto.sgn.message.v1.Message.toObject(includeInstance, f),
    transfer: (f = msg.getTransfer()) && proto.sgn.message.v1.Transfer.toObject(includeInstance, f),
    powersList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.ExecutionContext}
 */
proto.sgn.message.v1.ExecutionContext.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.ExecutionContext;
  return proto.sgn.message.v1.ExecutionContext.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.ExecutionContext} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.ExecutionContext}
 */
proto.sgn.message.v1.ExecutionContext.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessageId(value);
      break;
    case 2:
      var value = new proto.sgn.message.v1.Message;
      reader.readMessage(value,proto.sgn.message.v1.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.sgn.message.v1.Transfer;
      reader.readMessage(value,proto.sgn.message.v1.Transfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addPowers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.ExecutionContext.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.ExecutionContext.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.ExecutionContext} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.ExecutionContext.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.message.v1.Message.serializeBinaryToWriter
    );
  }
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.message.v1.Transfer.serializeBinaryToWriter
    );
  }
  f = message.getPowersList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional bytes message_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getMessageId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes message_id = 1;
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {string}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getMessageId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getMessageId()));
};


/**
 * optional bytes message_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessageId()`
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getMessageId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getMessageId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.setMessageId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Message message = 2;
 * @return {?proto.sgn.message.v1.Message}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getMessage = function() {
  return /** @type{?proto.sgn.message.v1.Message} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.message.v1.Message, 2));
};


/**
 * @param {?proto.sgn.message.v1.Message|undefined} value
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
*/
proto.sgn.message.v1.ExecutionContext.prototype.setMessage = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.ExecutionContext.prototype.hasMessage = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional Transfer transfer = 3;
 * @return {?proto.sgn.message.v1.Transfer}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getTransfer = function() {
  return /** @type{?proto.sgn.message.v1.Transfer} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.message.v1.Transfer, 3));
};


/**
 * @param {?proto.sgn.message.v1.Transfer|undefined} value
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
*/
proto.sgn.message.v1.ExecutionContext.prototype.setTransfer = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.clearTransfer = function() {
  return this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.ExecutionContext.prototype.hasTransfer = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * repeated string powers = 4;
 * @return {!Array<string>}
 */
proto.sgn.message.v1.ExecutionContext.prototype.getPowersList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.setPowersList = function(value) {
  return googleProtobuf.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.addPowers = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.ExecutionContext} returns this
 */
proto.sgn.message.v1.ExecutionContext.prototype.clearPowersList = function() {
  return this.setPowersList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.FeeClaimDetails.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.FeeClaimDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.FeeClaimDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.FeeClaimDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    cumulativeFeeAmount: (f = msg.getCumulativeFeeAmount()) && coin_pb.DecCoin.toObject(includeInstance, f),
    signaturesList: googleProtobuf.Message.toObjectList(msg.getSignaturesList(),
    common_pb.Signature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.FeeClaimDetails}
 */
proto.sgn.message.v1.FeeClaimDetails.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.FeeClaimDetails;
  return proto.sgn.message.v1.FeeClaimDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.FeeClaimDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.FeeClaimDetails}
 */
proto.sgn.message.v1.FeeClaimDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 2:
      var value = new coin_pb.DecCoin;
      reader.readMessage(value,coin_pb.DecCoin.deserializeBinaryFromReader);
      msg.setCumulativeFeeAmount(value);
      break;
    case 3:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.FeeClaimDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.FeeClaimDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.FeeClaimDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCumulativeFeeAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      coin_pb.DecCoin.serializeBinaryToWriter
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.FeeClaimDetails} returns this
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional cosmos.base.v1beta1.DecCoin cumulative_fee_amount = 2;
 * @return {?proto.cosmos.base.v1beta1.DecCoin}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.getCumulativeFeeAmount = function() {
  return /** @type{?proto.cosmos.base.v1beta1.DecCoin} */ (
    googleProtobuf.Message.getWrapperField(this, coin_pb.DecCoin, 2));
};


/**
 * @param {?proto.cosmos.base.v1beta1.DecCoin|undefined} value
 * @return {!proto.sgn.message.v1.FeeClaimDetails} returns this
*/
proto.sgn.message.v1.FeeClaimDetails.prototype.setCumulativeFeeAmount = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.FeeClaimDetails} returns this
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.clearCumulativeFeeAmount = function() {
  return this.setCumulativeFeeAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.hasCumulativeFeeAmount = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated sgn.common.v1.Signature signatures = 3;
 * @return {!Array<!proto.sgn.common.v1.Signature>}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.Signature>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.Signature, 3));
};


/**
 * @param {!Array<!proto.sgn.common.v1.Signature>} value
 * @return {!proto.sgn.message.v1.FeeClaimDetails} returns this
*/
proto.sgn.message.v1.FeeClaimDetails.prototype.setSignaturesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.common.v1.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.Signature}
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.addSignatures = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.common.v1.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.FeeClaimDetails} returns this
 */
proto.sgn.message.v1.FeeClaimDetails.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.FeeClaimInfo.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.FeeClaimInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.FeeClaimInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.FeeClaimInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipient: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    lastClaimTime: (f = msg.getLastClaimTime()) && timestamp_pb.Timestamp.toObject(includeInstance, f),
    feeClaimDetailsListList: googleProtobuf.Message.toObjectList(msg.getFeeClaimDetailsListList(),
    proto.sgn.message.v1.FeeClaimDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.FeeClaimInfo}
 */
proto.sgn.message.v1.FeeClaimInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.FeeClaimInfo;
  return proto.sgn.message.v1.FeeClaimInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.FeeClaimInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.FeeClaimInfo}
 */
proto.sgn.message.v1.FeeClaimInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipient(value);
      break;
    case 2:
      var value = new timestamp_pb.Timestamp;
      reader.readMessage(value,timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastClaimTime(value);
      break;
    case 3:
      var value = new proto.sgn.message.v1.FeeClaimDetails;
      reader.readMessage(value,proto.sgn.message.v1.FeeClaimDetails.deserializeBinaryFromReader);
      msg.addFeeClaimDetailsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.FeeClaimInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.FeeClaimInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.FeeClaimInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipient();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastClaimTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getFeeClaimDetailsListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.message.v1.FeeClaimDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string recipient = 1;
 * @return {string}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.getRecipient = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.FeeClaimInfo} returns this
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.setRecipient = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp last_claim_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.getLastClaimTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    googleProtobuf.Message.getWrapperField(this, timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.sgn.message.v1.FeeClaimInfo} returns this
*/
proto.sgn.message.v1.FeeClaimInfo.prototype.setLastClaimTime = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.FeeClaimInfo} returns this
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.clearLastClaimTime = function() {
  return this.setLastClaimTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.hasLastClaimTime = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * repeated FeeClaimDetails fee_claim_details_list = 3;
 * @return {!Array<!proto.sgn.message.v1.FeeClaimDetails>}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.getFeeClaimDetailsListList = function() {
  return /** @type{!Array<!proto.sgn.message.v1.FeeClaimDetails>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.message.v1.FeeClaimDetails, 3));
};


/**
 * @param {!Array<!proto.sgn.message.v1.FeeClaimDetails>} value
 * @return {!proto.sgn.message.v1.FeeClaimInfo} returns this
*/
proto.sgn.message.v1.FeeClaimInfo.prototype.setFeeClaimDetailsListList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.message.v1.FeeClaimDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.message.v1.FeeClaimDetails}
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.addFeeClaimDetailsList = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.message.v1.FeeClaimDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.FeeClaimInfo} returns this
 */
proto.sgn.message.v1.FeeClaimInfo.prototype.clearFeeClaimDetailsListList = function() {
  return this.setFeeClaimDetailsListList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.MessageBusInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.MessageBusInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.MessageBusInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.MessageBusInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractInfo: (f = msg.getContractInfo()) && common_pb.ContractInfo.toObject(includeInstance, f),
    feeTokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.MessageBusInfo}
 */
proto.sgn.message.v1.MessageBusInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.MessageBusInfo;
  return proto.sgn.message.v1.MessageBusInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.MessageBusInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.MessageBusInfo}
 */
proto.sgn.message.v1.MessageBusInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.setContractInfo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeeTokenSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.MessageBusInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.MessageBusInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.MessageBusInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.MessageBusInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
  f = message.getFeeTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional sgn.common.v1.ContractInfo contract_info = 1;
 * @return {?proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.message.v1.MessageBusInfo.prototype.getContractInfo = function() {
  return /** @type{?proto.sgn.common.v1.ContractInfo} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.ContractInfo, 1));
};


/**
 * @param {?proto.sgn.common.v1.ContractInfo|undefined} value
 * @return {!proto.sgn.message.v1.MessageBusInfo} returns this
*/
proto.sgn.message.v1.MessageBusInfo.prototype.setContractInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.MessageBusInfo} returns this
 */
proto.sgn.message.v1.MessageBusInfo.prototype.clearContractInfo = function() {
  return this.setContractInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.MessageBusInfo.prototype.hasContractInfo = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string fee_token_symbol = 2;
 * @return {string}
 */
proto.sgn.message.v1.MessageBusInfo.prototype.getFeeTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.MessageBusInfo} returns this
 */
proto.sgn.message.v1.MessageBusInfo.prototype.setFeeTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.MsgProposal.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.MsgProposal.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.MsgProposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.MsgProposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.MsgProposal.toObject = function(includeInstance, msg) {
  var obj = {
    title: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    description: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    messageBusesList: googleProtobuf.Message.toObjectList(msg.getMessageBusesList(),
    proto.sgn.message.v1.MessageBusInfo.toObject, includeInstance),
    deposit: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.MsgProposal}
 */
proto.sgn.message.v1.MsgProposal.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.MsgProposal;
  return proto.sgn.message.v1.MsgProposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.MsgProposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.MsgProposal}
 */
proto.sgn.message.v1.MsgProposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.sgn.message.v1.MessageBusInfo;
      reader.readMessage(value,proto.sgn.message.v1.MessageBusInfo.deserializeBinaryFromReader);
      msg.addMessageBuses(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeposit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.MsgProposal.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.MsgProposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.MsgProposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.MsgProposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessageBusesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.message.v1.MessageBusInfo.serializeBinaryToWriter
    );
  }
  f = message.getDeposit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.sgn.message.v1.MsgProposal.prototype.getTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.MsgProposal} returns this
 */
proto.sgn.message.v1.MsgProposal.prototype.setTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.sgn.message.v1.MsgProposal.prototype.getDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.MsgProposal} returns this
 */
proto.sgn.message.v1.MsgProposal.prototype.setDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated MessageBusInfo message_buses = 3;
 * @return {!Array<!proto.sgn.message.v1.MessageBusInfo>}
 */
proto.sgn.message.v1.MsgProposal.prototype.getMessageBusesList = function() {
  return /** @type{!Array<!proto.sgn.message.v1.MessageBusInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.message.v1.MessageBusInfo, 3));
};


/**
 * @param {!Array<!proto.sgn.message.v1.MessageBusInfo>} value
 * @return {!proto.sgn.message.v1.MsgProposal} returns this
*/
proto.sgn.message.v1.MsgProposal.prototype.setMessageBusesList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.message.v1.MessageBusInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.message.v1.MessageBusInfo}
 */
proto.sgn.message.v1.MsgProposal.prototype.addMessageBuses = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.message.v1.MessageBusInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.MsgProposal} returns this
 */
proto.sgn.message.v1.MsgProposal.prototype.clearMessageBusesList = function() {
  return this.setMessageBusesList([]);
};


/**
 * optional string deposit = 4;
 * @return {string}
 */
proto.sgn.message.v1.MsgProposal.prototype.getDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.MsgProposal} returns this
 */
proto.sgn.message.v1.MsgProposal.prototype.setDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.sgn.message.v1.TransferType = {
  TRANSFER_TYPE_NULL: 0,
  TRANSFER_TYPE_LIQUIDITY_SEND: 1,
  TRANSFER_TYPE_LIQUIDITY_WITHDRAW: 2,
  TRANSFER_TYPE_PEG_MINT: 3,
  TRANSFER_TYPE_PEG_WITHDRAW: 4
};

/**
 * @enum {number}
 */
proto.sgn.message.v1.ExecutionStatus = {
  EXECUTION_STATUS_PENDING: 0,
  EXECUTION_STATUS_SUCCESS: 1,
  EXECUTION_STATUS_FAILURE: 2,
  EXECUTION_STATUS_FALLBACK: 3
};

/**
 * @enum {number}
 */
proto.sgn.message.v1.MsgType = {
  MSG_TYPE_MESSAGE_WITH_TRANSFER: 0,
  MSG_TYPE_MESSAGE: 1
};

goog.object.extend(exports, proto.sgn.message.v1);
});

var query_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/message/v1/query.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, annotations_pb);

goog.object.extend(proto, common_pb);

goog.object.extend(proto, message_pb);
goog.exportSymbol('proto.sgn.message.v1.IsMessageActiveRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.IsMessageActiveResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryExecutionContextsRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryExecutionContextsResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryFeeClaimInfoRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryFeeClaimInfoResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageBusRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageBusResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageExistsRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageExistsResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryMessageResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryParamsRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryParamsResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryRefundExistsRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryRefundExistsResponse', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryTransferRequest', null, global);
goog.exportSymbol('proto.sgn.message.v1.QueryTransferResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryParamsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryParamsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryParamsRequest.displayName = 'proto.sgn.message.v1.QueryParamsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryParamsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryParamsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryParamsResponse.displayName = 'proto.sgn.message.v1.QueryParamsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryExecutionContextsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.QueryExecutionContextsRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.QueryExecutionContextsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryExecutionContextsRequest.displayName = 'proto.sgn.message.v1.QueryExecutionContextsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryExecutionContextsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.message.v1.QueryExecutionContextsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.message.v1.QueryExecutionContextsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryExecutionContextsResponse.displayName = 'proto.sgn.message.v1.QueryExecutionContextsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.IsMessageActiveRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.IsMessageActiveRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.IsMessageActiveRequest.displayName = 'proto.sgn.message.v1.IsMessageActiveRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.IsMessageActiveResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.IsMessageActiveResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.IsMessageActiveResponse.displayName = 'proto.sgn.message.v1.IsMessageActiveResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageExistsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageExistsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageExistsRequest.displayName = 'proto.sgn.message.v1.QueryMessageExistsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageExistsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageExistsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageExistsResponse.displayName = 'proto.sgn.message.v1.QueryMessageExistsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryRefundExistsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryRefundExistsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryRefundExistsRequest.displayName = 'proto.sgn.message.v1.QueryRefundExistsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryRefundExistsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryRefundExistsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryRefundExistsResponse.displayName = 'proto.sgn.message.v1.QueryRefundExistsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageRequest.displayName = 'proto.sgn.message.v1.QueryMessageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageResponse.displayName = 'proto.sgn.message.v1.QueryMessageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryTransferRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryTransferRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryTransferRequest.displayName = 'proto.sgn.message.v1.QueryTransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryTransferResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryTransferResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryTransferResponse.displayName = 'proto.sgn.message.v1.QueryTransferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageBusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageBusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageBusRequest.displayName = 'proto.sgn.message.v1.QueryMessageBusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryMessageBusResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryMessageBusResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryMessageBusResponse.displayName = 'proto.sgn.message.v1.QueryMessageBusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryFeeClaimInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryFeeClaimInfoRequest.displayName = 'proto.sgn.message.v1.QueryFeeClaimInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.message.v1.QueryFeeClaimInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.message.v1.QueryFeeClaimInfoResponse.displayName = 'proto.sgn.message.v1.QueryFeeClaimInfoResponse';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryParamsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryParamsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryParamsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryParamsRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryParamsRequest}
 */
proto.sgn.message.v1.QueryParamsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryParamsRequest;
  return proto.sgn.message.v1.QueryParamsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryParamsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryParamsRequest}
 */
proto.sgn.message.v1.QueryParamsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryParamsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryParamsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryParamsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryParamsRequest.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryParamsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryParamsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryParamsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryParamsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    params: (f = msg.getParams()) && message_pb.Params.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryParamsResponse}
 */
proto.sgn.message.v1.QueryParamsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryParamsResponse;
  return proto.sgn.message.v1.QueryParamsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryParamsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryParamsResponse}
 */
proto.sgn.message.v1.QueryParamsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.Params;
      reader.readMessage(value,message_pb.Params.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryParamsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryParamsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryParamsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryParamsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      message_pb.Params.serializeBinaryToWriter
    );
  }
};


/**
 * optional Params params = 1;
 * @return {?proto.sgn.message.v1.Params}
 */
proto.sgn.message.v1.QueryParamsResponse.prototype.getParams = function() {
  return /** @type{?proto.sgn.message.v1.Params} */ (
    googleProtobuf.Message.getWrapperField(this, message_pb.Params, 1));
};


/**
 * @param {?proto.sgn.message.v1.Params|undefined} value
 * @return {!proto.sgn.message.v1.QueryParamsResponse} returns this
*/
proto.sgn.message.v1.QueryParamsResponse.prototype.setParams = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.QueryParamsResponse} returns this
 */
proto.sgn.message.v1.QueryParamsResponse.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.QueryParamsResponse.prototype.hasParams = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryExecutionContextsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryExecutionContextsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    contractInfosList: googleProtobuf.Message.toObjectList(msg.getContractInfosList(),
    common_pb.ContractInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsRequest}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryExecutionContextsRequest;
  return proto.sgn.message.v1.QueryExecutionContextsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryExecutionContextsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsRequest}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ContractInfo;
      reader.readMessage(value,common_pb.ContractInfo.deserializeBinaryFromReader);
      msg.addContractInfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryExecutionContextsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryExecutionContextsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractInfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      common_pb.ContractInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated sgn.common.v1.ContractInfo contract_infos = 1;
 * @return {!Array<!proto.sgn.common.v1.ContractInfo>}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.getContractInfosList = function() {
  return /** @type{!Array<!proto.sgn.common.v1.ContractInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, common_pb.ContractInfo, 1));
};


/**
 * @param {!Array<!proto.sgn.common.v1.ContractInfo>} value
 * @return {!proto.sgn.message.v1.QueryExecutionContextsRequest} returns this
*/
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.setContractInfosList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.common.v1.ContractInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.common.v1.ContractInfo}
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.addContractInfos = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.common.v1.ContractInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsRequest} returns this
 */
proto.sgn.message.v1.QueryExecutionContextsRequest.prototype.clearContractInfosList = function() {
  return this.setContractInfosList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryExecutionContextsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryExecutionContextsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    executionContextsList: googleProtobuf.Message.toObjectList(msg.getExecutionContextsList(),
    message_pb.ExecutionContext.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsResponse}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryExecutionContextsResponse;
  return proto.sgn.message.v1.QueryExecutionContextsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryExecutionContextsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsResponse}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.ExecutionContext;
      reader.readMessage(value,message_pb.ExecutionContext.deserializeBinaryFromReader);
      msg.addExecutionContexts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryExecutionContextsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryExecutionContextsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExecutionContextsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      message_pb.ExecutionContext.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ExecutionContext execution_contexts = 1;
 * @return {!Array<!proto.sgn.message.v1.ExecutionContext>}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.getExecutionContextsList = function() {
  return /** @type{!Array<!proto.sgn.message.v1.ExecutionContext>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, message_pb.ExecutionContext, 1));
};


/**
 * @param {!Array<!proto.sgn.message.v1.ExecutionContext>} value
 * @return {!proto.sgn.message.v1.QueryExecutionContextsResponse} returns this
*/
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.setExecutionContextsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.message.v1.ExecutionContext=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.message.v1.ExecutionContext}
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.addExecutionContexts = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.message.v1.ExecutionContext, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.message.v1.QueryExecutionContextsResponse} returns this
 */
proto.sgn.message.v1.QueryExecutionContextsResponse.prototype.clearExecutionContextsList = function() {
  return this.setExecutionContextsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.IsMessageActiveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.IsMessageActiveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.IsMessageActiveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.IsMessageActiveRequest.toObject = function(includeInstance, msg) {
  var obj = {
    messageId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.IsMessageActiveRequest}
 */
proto.sgn.message.v1.IsMessageActiveRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.IsMessageActiveRequest;
  return proto.sgn.message.v1.IsMessageActiveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.IsMessageActiveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.IsMessageActiveRequest}
 */
proto.sgn.message.v1.IsMessageActiveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.IsMessageActiveRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.IsMessageActiveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.IsMessageActiveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.IsMessageActiveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.sgn.message.v1.IsMessageActiveRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.IsMessageActiveRequest} returns this
 */
proto.sgn.message.v1.IsMessageActiveRequest.prototype.setMessageId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.IsMessageActiveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.IsMessageActiveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.IsMessageActiveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.IsMessageActiveResponse.toObject = function(includeInstance, msg) {
  var obj = {
    exists: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.IsMessageActiveResponse}
 */
proto.sgn.message.v1.IsMessageActiveResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.IsMessageActiveResponse;
  return proto.sgn.message.v1.IsMessageActiveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.IsMessageActiveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.IsMessageActiveResponse}
 */
proto.sgn.message.v1.IsMessageActiveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.IsMessageActiveResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.IsMessageActiveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.IsMessageActiveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.IsMessageActiveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExists();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.sgn.message.v1.IsMessageActiveResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.message.v1.IsMessageActiveResponse} returns this
 */
proto.sgn.message.v1.IsMessageActiveResponse.prototype.setExists = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageExistsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageExistsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageExistsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageExistsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    messageId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageExistsRequest}
 */
proto.sgn.message.v1.QueryMessageExistsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageExistsRequest;
  return proto.sgn.message.v1.QueryMessageExistsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageExistsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageExistsRequest}
 */
proto.sgn.message.v1.QueryMessageExistsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageExistsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageExistsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageExistsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageExistsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.sgn.message.v1.QueryMessageExistsRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.QueryMessageExistsRequest} returns this
 */
proto.sgn.message.v1.QueryMessageExistsRequest.prototype.setMessageId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageExistsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageExistsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageExistsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageExistsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    exists: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageExistsResponse}
 */
proto.sgn.message.v1.QueryMessageExistsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageExistsResponse;
  return proto.sgn.message.v1.QueryMessageExistsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageExistsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageExistsResponse}
 */
proto.sgn.message.v1.QueryMessageExistsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageExistsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageExistsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageExistsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageExistsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExists();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.sgn.message.v1.QueryMessageExistsResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.message.v1.QueryMessageExistsResponse} returns this
 */
proto.sgn.message.v1.QueryMessageExistsResponse.prototype.setExists = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryRefundExistsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryRefundExistsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryRefundExistsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryRefundExistsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcTransferId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryRefundExistsRequest}
 */
proto.sgn.message.v1.QueryRefundExistsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryRefundExistsRequest;
  return proto.sgn.message.v1.QueryRefundExistsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryRefundExistsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryRefundExistsRequest}
 */
proto.sgn.message.v1.QueryRefundExistsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcTransferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryRefundExistsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryRefundExistsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryRefundExistsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryRefundExistsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcTransferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string src_transfer_id = 1;
 * @return {string}
 */
proto.sgn.message.v1.QueryRefundExistsRequest.prototype.getSrcTransferId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.QueryRefundExistsRequest} returns this
 */
proto.sgn.message.v1.QueryRefundExistsRequest.prototype.setSrcTransferId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryRefundExistsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryRefundExistsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryRefundExistsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryRefundExistsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    exists: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryRefundExistsResponse}
 */
proto.sgn.message.v1.QueryRefundExistsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryRefundExistsResponse;
  return proto.sgn.message.v1.QueryRefundExistsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryRefundExistsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryRefundExistsResponse}
 */
proto.sgn.message.v1.QueryRefundExistsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExists(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryRefundExistsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryRefundExistsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryRefundExistsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryRefundExistsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExists();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool exists = 1;
 * @return {boolean}
 */
proto.sgn.message.v1.QueryRefundExistsResponse.prototype.getExists = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.message.v1.QueryRefundExistsResponse} returns this
 */
proto.sgn.message.v1.QueryRefundExistsResponse.prototype.setExists = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageRequest.toObject = function(includeInstance, msg) {
  var obj = {
    messageId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageRequest}
 */
proto.sgn.message.v1.QueryMessageRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageRequest;
  return proto.sgn.message.v1.QueryMessageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageRequest}
 */
proto.sgn.message.v1.QueryMessageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.sgn.message.v1.QueryMessageRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.QueryMessageRequest} returns this
 */
proto.sgn.message.v1.QueryMessageRequest.prototype.setMessageId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: (f = msg.getMessage()) && message_pb.Message.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageResponse}
 */
proto.sgn.message.v1.QueryMessageResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageResponse;
  return proto.sgn.message.v1.QueryMessageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageResponse}
 */
proto.sgn.message.v1.QueryMessageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.Message;
      reader.readMessage(value,message_pb.Message.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      message_pb.Message.serializeBinaryToWriter
    );
  }
};


/**
 * optional Message message = 1;
 * @return {?proto.sgn.message.v1.Message}
 */
proto.sgn.message.v1.QueryMessageResponse.prototype.getMessage = function() {
  return /** @type{?proto.sgn.message.v1.Message} */ (
    googleProtobuf.Message.getWrapperField(this, message_pb.Message, 1));
};


/**
 * @param {?proto.sgn.message.v1.Message|undefined} value
 * @return {!proto.sgn.message.v1.QueryMessageResponse} returns this
*/
proto.sgn.message.v1.QueryMessageResponse.prototype.setMessage = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.QueryMessageResponse} returns this
 */
proto.sgn.message.v1.QueryMessageResponse.prototype.clearMessage = function() {
  return this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.QueryMessageResponse.prototype.hasMessage = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryTransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryTransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryTransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryTransferRequest.toObject = function(includeInstance, msg) {
  var obj = {
    messageId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryTransferRequest}
 */
proto.sgn.message.v1.QueryTransferRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryTransferRequest;
  return proto.sgn.message.v1.QueryTransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryTransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryTransferRequest}
 */
proto.sgn.message.v1.QueryTransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryTransferRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryTransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryTransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryTransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string message_id = 1;
 * @return {string}
 */
proto.sgn.message.v1.QueryTransferRequest.prototype.getMessageId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.QueryTransferRequest} returns this
 */
proto.sgn.message.v1.QueryTransferRequest.prototype.setMessageId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryTransferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryTransferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryTransferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryTransferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transfer: (f = msg.getTransfer()) && message_pb.Transfer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryTransferResponse}
 */
proto.sgn.message.v1.QueryTransferResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryTransferResponse;
  return proto.sgn.message.v1.QueryTransferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryTransferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryTransferResponse}
 */
proto.sgn.message.v1.QueryTransferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.Transfer;
      reader.readMessage(value,message_pb.Transfer.deserializeBinaryFromReader);
      msg.setTransfer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryTransferResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryTransferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryTransferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryTransferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransfer();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      message_pb.Transfer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transfer transfer = 1;
 * @return {?proto.sgn.message.v1.Transfer}
 */
proto.sgn.message.v1.QueryTransferResponse.prototype.getTransfer = function() {
  return /** @type{?proto.sgn.message.v1.Transfer} */ (
    googleProtobuf.Message.getWrapperField(this, message_pb.Transfer, 1));
};


/**
 * @param {?proto.sgn.message.v1.Transfer|undefined} value
 * @return {!proto.sgn.message.v1.QueryTransferResponse} returns this
*/
proto.sgn.message.v1.QueryTransferResponse.prototype.setTransfer = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.QueryTransferResponse} returns this
 */
proto.sgn.message.v1.QueryTransferResponse.prototype.clearTransfer = function() {
  return this.setTransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.QueryTransferResponse.prototype.hasTransfer = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageBusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageBusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageBusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageBusRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageBusRequest}
 */
proto.sgn.message.v1.QueryMessageBusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageBusRequest;
  return proto.sgn.message.v1.QueryMessageBusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageBusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageBusRequest}
 */
proto.sgn.message.v1.QueryMessageBusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageBusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageBusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageBusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageBusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 chain_id = 1;
 * @return {number}
 */
proto.sgn.message.v1.QueryMessageBusRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.message.v1.QueryMessageBusRequest} returns this
 */
proto.sgn.message.v1.QueryMessageBusRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryMessageBusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryMessageBusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryMessageBusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageBusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageBus: (f = msg.getMessageBus()) && message_pb.MessageBusInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryMessageBusResponse}
 */
proto.sgn.message.v1.QueryMessageBusResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryMessageBusResponse;
  return proto.sgn.message.v1.QueryMessageBusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryMessageBusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryMessageBusResponse}
 */
proto.sgn.message.v1.QueryMessageBusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.MessageBusInfo;
      reader.readMessage(value,message_pb.MessageBusInfo.deserializeBinaryFromReader);
      msg.setMessageBus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryMessageBusResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryMessageBusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryMessageBusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryMessageBusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageBus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      message_pb.MessageBusInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional MessageBusInfo message_bus = 1;
 * @return {?proto.sgn.message.v1.MessageBusInfo}
 */
proto.sgn.message.v1.QueryMessageBusResponse.prototype.getMessageBus = function() {
  return /** @type{?proto.sgn.message.v1.MessageBusInfo} */ (
    googleProtobuf.Message.getWrapperField(this, message_pb.MessageBusInfo, 1));
};


/**
 * @param {?proto.sgn.message.v1.MessageBusInfo|undefined} value
 * @return {!proto.sgn.message.v1.QueryMessageBusResponse} returns this
*/
proto.sgn.message.v1.QueryMessageBusResponse.prototype.setMessageBus = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.QueryMessageBusResponse} returns this
 */
proto.sgn.message.v1.QueryMessageBusResponse.prototype.clearMessageBus = function() {
  return this.setMessageBus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.QueryMessageBusResponse.prototype.hasMessageBus = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryFeeClaimInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {
    address: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoRequest}
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryFeeClaimInfoRequest;
  return proto.sgn.message.v1.QueryFeeClaimInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoRequest}
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryFeeClaimInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoRequest} returns this
 */
proto.sgn.message.v1.QueryFeeClaimInfoRequest.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.message.v1.QueryFeeClaimInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    feeClaimInfo: (f = msg.getFeeClaimInfo()) && message_pb.FeeClaimInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoResponse}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.message.v1.QueryFeeClaimInfoResponse;
  return proto.sgn.message.v1.QueryFeeClaimInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoResponse}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new message_pb.FeeClaimInfo;
      reader.readMessage(value,message_pb.FeeClaimInfo.deserializeBinaryFromReader);
      msg.setFeeClaimInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.message.v1.QueryFeeClaimInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.message.v1.QueryFeeClaimInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeeClaimInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      message_pb.FeeClaimInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional FeeClaimInfo fee_claim_info = 1;
 * @return {?proto.sgn.message.v1.FeeClaimInfo}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.getFeeClaimInfo = function() {
  return /** @type{?proto.sgn.message.v1.FeeClaimInfo} */ (
    googleProtobuf.Message.getWrapperField(this, message_pb.FeeClaimInfo, 1));
};


/**
 * @param {?proto.sgn.message.v1.FeeClaimInfo|undefined} value
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoResponse} returns this
*/
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.setFeeClaimInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.message.v1.QueryFeeClaimInfoResponse} returns this
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.clearFeeClaimInfo = function() {
  return this.setFeeClaimInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.message.v1.QueryFeeClaimInfoResponse.prototype.hasFeeClaimInfo = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.sgn.message.v1);
});

var tx_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/pegbridge/v1/tx.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgClaimFee', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgClaimFeeResponse', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgClaimRefund', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgClaimRefundResponse', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgSignMint', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgSignMintResponse', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgSignWithdraw', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgSignWithdrawResponse', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgTriggerSignMint', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw', null, global);
goog.exportSymbol('proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgSignMint = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgSignMint, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgSignMint.displayName = 'proto.sgn.pegbridge.v1.MsgSignMint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgSignMintResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgSignMintResponse.displayName = 'proto.sgn.pegbridge.v1.MsgSignMintResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgSignWithdraw, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgSignWithdraw.displayName = 'proto.sgn.pegbridge.v1.MsgSignWithdraw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgSignWithdrawResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.displayName = 'proto.sgn.pegbridge.v1.MsgSignWithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgTriggerSignMint, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgTriggerSignMint.displayName = 'proto.sgn.pegbridge.v1.MsgTriggerSignMint';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.displayName = 'proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.displayName = 'proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.displayName = 'proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgClaimFee = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgClaimFee, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgClaimFee.displayName = 'proto.sgn.pegbridge.v1.MsgClaimFee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgClaimFeeResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgClaimFeeResponse.displayName = 'proto.sgn.pegbridge.v1.MsgClaimFeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgClaimRefund = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgClaimRefund, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgClaimRefund.displayName = 'proto.sgn.pegbridge.v1.MsgClaimRefund';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.pegbridge.v1.MsgClaimRefundResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.pegbridge.v1.MsgClaimRefundResponse.displayName = 'proto.sgn.pegbridge.v1.MsgClaimRefundResponse';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgSignMint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgSignMint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignMint.toObject = function(includeInstance, msg) {
  var obj = {
    mintId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgSignMint}
 */
proto.sgn.pegbridge.v1.MsgSignMint.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgSignMint;
  return proto.sgn.pegbridge.v1.MsgSignMint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgSignMint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgSignMint}
 */
proto.sgn.pegbridge.v1.MsgSignMint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMintId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgSignMint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgSignMint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignMint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMintId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string mint_id = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.getMintId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignMint} returns this
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.setMintId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignMint} returns this
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignMint} returns this
 */
proto.sgn.pegbridge.v1.MsgSignMint.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgSignMintResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgSignMintResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgSignMintResponse}
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgSignMintResponse;
  return proto.sgn.pegbridge.v1.MsgSignMintResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgSignMintResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgSignMintResponse}
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgSignMintResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgSignMintResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignMintResponse.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgSignWithdraw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdraw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.toObject = function(includeInstance, msg) {
  var obj = {
    withdrawId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdraw}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgSignWithdraw;
  return proto.sgn.pegbridge.v1.MsgSignWithdraw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdraw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdraw}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgSignWithdraw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdraw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string withdraw_id = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.getWithdrawId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdraw} returns this
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.setWithdrawId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdraw} returns this
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdraw} returns this
 */
proto.sgn.pegbridge.v1.MsgSignWithdraw.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdrawResponse}
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgSignWithdrawResponse;
  return proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgSignWithdrawResponse}
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgSignWithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgSignWithdrawResponse.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgTriggerSignMint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.toObject = function(includeInstance, msg) {
  var obj = {
    mintId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMint}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgTriggerSignMint;
  return proto.sgn.pegbridge.v1.MsgTriggerSignMint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMint}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMintId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgTriggerSignMint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMintId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string mint_id = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.getMintId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMint} returns this
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.setMintId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMint} returns this
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMint.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse;
  return proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignMintResponse.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.toObject = function(includeInstance, msg) {
  var obj = {
    withdrawId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw;
  return proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWithdrawId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string withdraw_id = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.getWithdrawId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw} returns this
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.setWithdrawId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw} returns this
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdraw.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse;
  return proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgTriggerSignWithdrawResponse.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgClaimFee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimFee.toObject = function(includeInstance, msg) {
  var obj = {
    delegatorAddress: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    tokenAddress: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    nonce: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    signature: msg.getSignature_asB64(),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    isValidator: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgClaimFee;
  return proto.sgn.pegbridge.v1.MsgClaimFee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValidator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgClaimFee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimFee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTokenAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getIsValidator();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setDelegatorAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 chain_id = 2;
 * @return {number}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token_address = 3;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getTokenAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setTokenAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 nonce = 4;
 * @return {number}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getNonce = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setNonce = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes signature = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes signature = 5;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string sender = 6;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional bool is_validator = 7;
 * @return {boolean}
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.getIsValidator = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFee} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimFee.prototype.setIsValidator = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgClaimFeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFeeResponse}
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgClaimFeeResponse;
  return proto.sgn.pegbridge.v1.MsgClaimFeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimFeeResponse}
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgClaimFeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimFeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimFeeResponse.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgClaimRefund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.toObject = function(includeInstance, msg) {
  var obj = {
    refId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    sender: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefund}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgClaimRefund;
  return proto.sgn.pegbridge.v1.MsgClaimRefund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefund}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgClaimRefund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ref_id = 1;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.getRefId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefund} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.setRefId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sender = 2;
 * @return {string}
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.getSender = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefund} returns this
 */
proto.sgn.pegbridge.v1.MsgClaimRefund.prototype.setSender = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.pegbridge.v1.MsgClaimRefundResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefundResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefundResponse}
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.pegbridge.v1.MsgClaimRefundResponse;
  return proto.sgn.pegbridge.v1.MsgClaimRefundResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefundResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.pegbridge.v1.MsgClaimRefundResponse}
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.pegbridge.v1.MsgClaimRefundResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.pegbridge.v1.MsgClaimRefundResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.pegbridge.v1.MsgClaimRefundResponse.serializeBinaryToWriter = function(message, writer) {
};


goog.object.extend(exports, proto.sgn.pegbridge.v1);
});

var health_pb = createCommonjsModule$1(function (module, exports) {
// source: sgn/health/v1/health.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.sgn.health.v1.BaseFeeDistributionHistory', null, global);
goog.exportSymbol('proto.sgn.health.v1.BridgeType', null, global);
goog.exportSymbol('proto.sgn.health.v1.ErrCode', null, global);
goog.exportSymbol('proto.sgn.health.v1.ErrMsg', null, global);
goog.exportSymbol('proto.sgn.health.v1.LPFeeEarningHistory', null, global);
goog.exportSymbol('proto.sgn.health.v1.LPFeeEarningLog', null, global);
goog.exportSymbol('proto.sgn.health.v1.ReportSgnAnalyticsRequest', null, global);
goog.exportSymbol('proto.sgn.health.v1.ReportSgnAnalyticsResponse', null, global);
goog.exportSymbol('proto.sgn.health.v1.SgnAnalyticsReport', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.ReportSgnAnalyticsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.ReportSgnAnalyticsRequest.displayName = 'proto.sgn.health.v1.ReportSgnAnalyticsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.SgnAnalyticsReport = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.SgnAnalyticsReport, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.SgnAnalyticsReport.displayName = 'proto.sgn.health.v1.SgnAnalyticsReport';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.BaseFeeDistributionHistory = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.BaseFeeDistributionHistory, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.BaseFeeDistributionHistory.displayName = 'proto.sgn.health.v1.BaseFeeDistributionHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.LPFeeEarningHistory = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.LPFeeEarningHistory, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.LPFeeEarningHistory.displayName = 'proto.sgn.health.v1.LPFeeEarningHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.LPFeeEarningLog = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.LPFeeEarningLog, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.LPFeeEarningLog.displayName = 'proto.sgn.health.v1.LPFeeEarningLog';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.ReportSgnAnalyticsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.ReportSgnAnalyticsResponse.displayName = 'proto.sgn.health.v1.ReportSgnAnalyticsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.health.v1.ErrMsg = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.health.v1.ErrMsg, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.health.v1.ErrMsg.displayName = 'proto.sgn.health.v1.ErrMsg';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.ReportSgnAnalyticsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    report: msg.getReport_asB64(),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsRequest}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.ReportSgnAnalyticsRequest;
  return proto.sgn.health.v1.ReportSgnAnalyticsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsRequest}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReport(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.ReportSgnAnalyticsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReport_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes report = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getReport = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes report = 1;
 * This is a type-conversion wrapper around `getReport()`
 * @return {string}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getReport_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getReport()));
};


/**
 * optional bytes report = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReport()`
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getReport_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getReport()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsRequest} returns this
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.setReport = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig = 2;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsRequest} returns this
 */
proto.sgn.health.v1.ReportSgnAnalyticsRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.SgnAnalyticsReport.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.SgnAnalyticsReport} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.SgnAnalyticsReport.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    blockNumsMap: (f = msg.getBlockNumsMap()) ? f.toObject(includeInstance, undefined) : [],
    sgndVersion: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    lpFeeEarningHistoriesMap: (f = msg.getLpFeeEarningHistoriesMap()) ? f.toObject(includeInstance, proto.sgn.health.v1.LPFeeEarningHistory.toObject) : [],
    baseFeeDistributionHistoriesMap: (f = msg.getBaseFeeDistributionHistoriesMap()) ? f.toObject(includeInstance, proto.sgn.health.v1.BaseFeeDistributionHistory.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport}
 */
proto.sgn.health.v1.SgnAnalyticsReport.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.SgnAnalyticsReport;
  return proto.sgn.health.v1.SgnAnalyticsReport.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.SgnAnalyticsReport} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport}
 */
proto.sgn.health.v1.SgnAnalyticsReport.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = msg.getBlockNumsMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readUint64, null, "", 0);
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSgndVersion(value);
      break;
    case 4:
      var value = msg.getLpFeeEarningHistoriesMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint64, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.health.v1.LPFeeEarningHistory.deserializeBinaryFromReader, 0, new proto.sgn.health.v1.LPFeeEarningHistory());
         });
      break;
    case 5:
      var value = msg.getBaseFeeDistributionHistoriesMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint64, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.health.v1.BaseFeeDistributionHistory.deserializeBinaryFromReader, 0, new proto.sgn.health.v1.BaseFeeDistributionHistory());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.SgnAnalyticsReport.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.SgnAnalyticsReport} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.SgnAnalyticsReport.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBlockNumsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeUint64);
  }
  f = message.getSgndVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLpFeeEarningHistoriesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, googleProtobuf.BinaryWriter.prototype.writeUint64, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.health.v1.LPFeeEarningHistory.serializeBinaryToWriter);
  }
  f = message.getBaseFeeDistributionHistoriesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, googleProtobuf.BinaryWriter.prototype.writeUint64, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.health.v1.BaseFeeDistributionHistory.serializeBinaryToWriter);
  }
};


/**
 * optional uint64 timestamp = 1;
 * @return {number}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.getTimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport} returns this
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.setTimestamp = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, uint64> block_nums = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.getBlockNumsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport} returns this
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.clearBlockNumsMap = function() {
  this.getBlockNumsMap().clear();
  return this;};


/**
 * optional string sgnd_version = 3;
 * @return {string}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.getSgndVersion = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport} returns this
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.setSgndVersion = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * map<uint64, LPFeeEarningHistory> lp_fee_earning_histories = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.sgn.health.v1.LPFeeEarningHistory>}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.getLpFeeEarningHistoriesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.sgn.health.v1.LPFeeEarningHistory>} */ (
      googleProtobuf.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.sgn.health.v1.LPFeeEarningHistory));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport} returns this
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.clearLpFeeEarningHistoriesMap = function() {
  this.getLpFeeEarningHistoriesMap().clear();
  return this;};


/**
 * map<uint64, BaseFeeDistributionHistory> base_fee_distribution_histories = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.sgn.health.v1.BaseFeeDistributionHistory>}
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.getBaseFeeDistributionHistoriesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.sgn.health.v1.BaseFeeDistributionHistory>} */ (
      googleProtobuf.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.sgn.health.v1.BaseFeeDistributionHistory));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.health.v1.SgnAnalyticsReport} returns this
 */
proto.sgn.health.v1.SgnAnalyticsReport.prototype.clearBaseFeeDistributionHistoriesMap = function() {
  this.getBaseFeeDistributionHistoriesMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.BaseFeeDistributionHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.BaseFeeDistributionHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.toObject = function(includeInstance, msg) {
  var obj = {
    bridgeType: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    baseFeeReceiverAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    baseFeeAmt: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    tokenDecimal: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.BaseFeeDistributionHistory;
  return proto.sgn.health.v1.BaseFeeDistributionHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.BaseFeeDistributionHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.health.v1.BridgeType} */ (reader.readEnum());
      msg.setBridgeType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFeeReceiverAddr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFeeAmt(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTokenDecimal(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrcChainId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.BaseFeeDistributionHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.BaseFeeDistributionHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBridgeType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBaseFeeReceiverAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBaseFeeAmt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTokenDecimal();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional BridgeType bridge_type = 1;
 * @return {!proto.sgn.health.v1.BridgeType}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getBridgeType = function() {
  return /** @type {!proto.sgn.health.v1.BridgeType} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.health.v1.BridgeType} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setBridgeType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string base_fee_receiver_addr = 2;
 * @return {string}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getBaseFeeReceiverAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setBaseFeeReceiverAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string base_fee_amt = 3;
 * @return {string}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getBaseFeeAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setBaseFeeAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string token_symbol = 4;
 * @return {string}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 token_decimal = 5;
 * @return {number}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getTokenDecimal = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setTokenDecimal = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 src_chain_id = 6;
 * @return {number}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 dst_chain_id = 7;
 * @return {number}
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.health.v1.BaseFeeDistributionHistory} returns this
 */
proto.sgn.health.v1.BaseFeeDistributionHistory.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.LPFeeEarningHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.LPFeeEarningHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.LPFeeEarningHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    dstTokenAddr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    logsMap: (f = msg.getLogsMap()) ? f.toObject(includeInstance, proto.sgn.health.v1.LPFeeEarningLog.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.LPFeeEarningHistory}
 */
proto.sgn.health.v1.LPFeeEarningHistory.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.LPFeeEarningHistory;
  return proto.sgn.health.v1.LPFeeEarningHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.LPFeeEarningHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.LPFeeEarningHistory}
 */
proto.sgn.health.v1.LPFeeEarningHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstTokenAddr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 3:
      var value = msg.getLogsMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.health.v1.LPFeeEarningLog.deserializeBinaryFromReader, "", new proto.sgn.health.v1.LPFeeEarningLog());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.LPFeeEarningHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.LPFeeEarningHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.LPFeeEarningHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDstTokenAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getLogsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.health.v1.LPFeeEarningLog.serializeBinaryToWriter);
  }
};


/**
 * optional string dst_token_addr = 1;
 * @return {string}
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.getDstTokenAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.LPFeeEarningHistory} returns this
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.setDstTokenAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 dst_chain_id = 2;
 * @return {number}
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.health.v1.LPFeeEarningHistory} returns this
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * map<string, LPFeeEarningLog> logs = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.health.v1.LPFeeEarningLog>}
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.getLogsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.health.v1.LPFeeEarningLog>} */ (
      googleProtobuf.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.sgn.health.v1.LPFeeEarningLog));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.health.v1.LPFeeEarningHistory} returns this
 */
proto.sgn.health.v1.LPFeeEarningHistory.prototype.clearLogsMap = function() {
  this.getLogsMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.LPFeeEarningLog.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.LPFeeEarningLog} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.LPFeeEarningLog.toObject = function(includeInstance, msg) {
  var obj = {
    dstChainLiquidityUsed: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    earnedFee: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    dstChainLiquidityRemained: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.LPFeeEarningLog}
 */
proto.sgn.health.v1.LPFeeEarningLog.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.LPFeeEarningLog;
  return proto.sgn.health.v1.LPFeeEarningLog.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.LPFeeEarningLog} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.LPFeeEarningLog}
 */
proto.sgn.health.v1.LPFeeEarningLog.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstChainLiquidityUsed(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEarnedFee(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstChainLiquidityRemained(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.LPFeeEarningLog.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.LPFeeEarningLog} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.LPFeeEarningLog.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDstChainLiquidityUsed();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEarnedFee();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDstChainLiquidityRemained();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string dst_chain_liquidity_used = 1;
 * @return {string}
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.getDstChainLiquidityUsed = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.LPFeeEarningLog} returns this
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.setDstChainLiquidityUsed = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string earned_fee = 2;
 * @return {string}
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.getEarnedFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.LPFeeEarningLog} returns this
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.setEarnedFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string dst_chain_liquidity_remained = 3;
 * @return {string}
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.getDstChainLiquidityRemained = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.LPFeeEarningLog} returns this
 */
proto.sgn.health.v1.LPFeeEarningLog.prototype.setDstChainLiquidityRemained = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.ReportSgnAnalyticsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.health.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsResponse}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.ReportSgnAnalyticsResponse;
  return proto.sgn.health.v1.ReportSgnAnalyticsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsResponse}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.health.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.health.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.ReportSgnAnalyticsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.ReportSgnAnalyticsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.health.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.health.v1.ErrMsg}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.health.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.health.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.health.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsResponse} returns this
*/
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.health.v1.ReportSgnAnalyticsResponse} returns this
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.health.v1.ReportSgnAnalyticsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.health.v1.ErrMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.health.v1.ErrMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.health.v1.ErrMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ErrMsg.toObject = function(includeInstance, msg) {
  var obj = {
    code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.health.v1.ErrMsg}
 */
proto.sgn.health.v1.ErrMsg.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.health.v1.ErrMsg;
  return proto.sgn.health.v1.ErrMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.health.v1.ErrMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.health.v1.ErrMsg}
 */
proto.sgn.health.v1.ErrMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.health.v1.ErrCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.health.v1.ErrMsg.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.health.v1.ErrMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.health.v1.ErrMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.health.v1.ErrMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ErrCode code = 1;
 * @return {!proto.sgn.health.v1.ErrCode}
 */
proto.sgn.health.v1.ErrMsg.prototype.getCode = function() {
  return /** @type {!proto.sgn.health.v1.ErrCode} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.health.v1.ErrCode} value
 * @return {!proto.sgn.health.v1.ErrMsg} returns this
 */
proto.sgn.health.v1.ErrMsg.prototype.setCode = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.sgn.health.v1.ErrMsg.prototype.getMsg = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.health.v1.ErrMsg} returns this
 */
proto.sgn.health.v1.ErrMsg.prototype.setMsg = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.sgn.health.v1.BridgeType = {
  BRIDGE_TYPE_UNDEFINED: 0,
  BRIDGE_TYPE_LIQUIDITY: 1,
  BRIDGE_TYPE_PEGGED: 2
};

/**
 * @enum {number}
 */
proto.sgn.health.v1.ErrCode = {
  ERROR_CODE_UNDEFINED: 0,
  ERROR_CODE_COMMON: 500,
  ERROR_NO_TOKEN_ON_DST_CHAIN: 1001,
  ERROR_NO_TOKEN_ON_SRC_CHAIN: 1002,
  ERROR_INIT_WITHDRAW_FAILED: 1003,
  ERROR_CODE_NO_ENOUGH_TOKEN_ON_DST_CHAIN: 1004
};

goog.object.extend(exports, proto.sgn.health.v1);
});

var gateway_pb = createCommonjsModule$1(function (module, exports) {
// source: gateway/gateway.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck


var goog = googleProtobuf;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));


goog.object.extend(proto, gogo_pb);

goog.object.extend(proto, annotations_pb);

goog.object.extend(proto, query_pb$1);

goog.object.extend(proto, cbridge_pb);

goog.object.extend(proto, common_pb);

goog.object.extend(proto, farming_pb);

goog.object.extend(proto, distribution_pb);

goog.object.extend(proto, pegbridge_pb);

goog.object.extend(proto, query_pb);

goog.object.extend(proto, tx_pb);

goog.object.extend(proto, coin_pb);

goog.object.extend(proto, health_pb);
goog.exportSymbol('proto.sgn.gateway.v1.AbnormalStatusInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.BscCampaignEventConfig', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.BscCampaignInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.BscCampaignTransferWhiteList', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.CSOperation', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.CSType', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.CampaignScore', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.Chain', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ChainTokenInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimFeeRebateRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimFeeRebateResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimRetentionRewardsRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ClaimRetentionRewardsResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ErrCode', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ErrMsg', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.EstimateAmtRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.EstimateAmtResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.EstimateWithdrawAmt', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.EstimateWithdrawAmtRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.EstimateWithdrawAmtResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ExtendedPair', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.ExtendedToken', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.FeeRebateEvent', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.FeeRebateLevelConfig', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.FixEventMissRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.FixEventMissResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllConfigsRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllConfigsResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllLPInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllLPInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllTXInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetAllTXInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetBscCampaignInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetBscCampaignInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCampaignScoresRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCampaignScoresResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetFeeRebateInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetFeeRebateInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetInfoByTxHashRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetInfoByTxHashResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetLPInfoListRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetLPInfoListResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetStakingRewardDetailsRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetStakingRewardDetailsResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTokenInfoRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTokenInfoResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTransferConfigsRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTransferConfigsResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTransferStatusRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetTransferStatusResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetUsrBalanceRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.GetUsrBalanceResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.IncentiveCampaignRank', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InitPegRefundRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InitPegRefundResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InitWithdrawRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.InitWithdrawResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPHistory', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPHistoryRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPHistoryResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPOperations', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LPType', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.LpActionType', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.PeggedPairConfig', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.QueryLiquidityStatusRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.QueryLiquidityStatusResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.RetentionRewardsEvent', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.RetentionRewardsLevelConfig', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.Reward', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.RewardingDataRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.RewardingDataResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.StakingConfigRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.StakingConfigResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TXOperations', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TokenInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TransferHistory', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TransferHistoryRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TransferHistoryResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.TransferInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UnlockFarmingRewardRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UnlockFarmingRewardResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UnlockStakingRewardRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UnlockStakingRewardResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UpdateChainRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UpdateChainResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UpdateTokenRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UpdateTokenResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.UserCaseStatus', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.WithdrawInfo', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.WithdrawLiquidityRequest', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.WithdrawLiquidityResponse', null, global);
goog.exportSymbol('proto.sgn.gateway.v1.WithdrawMethodType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InitPegRefundRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InitPegRefundRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InitPegRefundRequest.displayName = 'proto.sgn.gateway.v1.InitPegRefundRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InitPegRefundResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InitPegRefundResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InitPegRefundResponse.displayName = 'proto.sgn.gateway.v1.InitPegRefundResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InitWithdrawRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InitWithdrawRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InitWithdrawRequest.displayName = 'proto.sgn.gateway.v1.InitWithdrawRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InitWithdrawResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InitWithdrawResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InitWithdrawResponse.displayName = 'proto.sgn.gateway.v1.InitWithdrawResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetUsrBalanceRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetUsrBalanceRequest.displayName = 'proto.sgn.gateway.v1.GetUsrBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetUsrBalanceResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetUsrBalanceResponse.displayName = 'proto.sgn.gateway.v1.GetUsrBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.displayName = 'proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.displayName = 'proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCampaignScoresRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCampaignScoresRequest.displayName = 'proto.sgn.gateway.v1.GetCampaignScoresRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetCampaignScoresResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCampaignScoresResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCampaignScoresResponse.displayName = 'proto.sgn.gateway.v1.GetCampaignScoresResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.CampaignScore = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.CampaignScore, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.CampaignScore.displayName = 'proto.sgn.gateway.v1.CampaignScore';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.QueryLiquidityStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.QueryLiquidityStatusResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.QueryLiquidityStatusResponse.displayName = 'proto.sgn.gateway.v1.QueryLiquidityStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.Chain = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.Chain, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.Chain.displayName = 'proto.sgn.gateway.v1.Chain';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ChainTokenInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.ChainTokenInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.ChainTokenInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ChainTokenInfo.displayName = 'proto.sgn.gateway.v1.ChainTokenInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TokenInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.TokenInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TokenInfo.displayName = 'proto.sgn.gateway.v1.TokenInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TransferInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.TransferInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TransferInfo.displayName = 'proto.sgn.gateway.v1.TransferInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTransferStatusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTransferStatusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTransferStatusRequest.displayName = 'proto.sgn.gateway.v1.GetTransferStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTransferStatusResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetTransferStatusResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTransferStatusResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTransferStatusResponse.displayName = 'proto.sgn.gateway.v1.GetTransferStatusResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTransferConfigsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTransferConfigsRequest.displayName = 'proto.sgn.gateway.v1.GetTransferConfigsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetTransferConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTransferConfigsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTransferConfigsResponse.displayName = 'proto.sgn.gateway.v1.GetTransferConfigsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.PeggedPairConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.PeggedPairConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.PeggedPairConfig.displayName = 'proto.sgn.gateway.v1.PeggedPairConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTokenInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTokenInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTokenInfoRequest.displayName = 'proto.sgn.gateway.v1.GetTokenInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTokenInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTokenInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTokenInfoResponse.displayName = 'proto.sgn.gateway.v1.GetTokenInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.EstimateAmtRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.EstimateAmtRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.EstimateAmtRequest.displayName = 'proto.sgn.gateway.v1.EstimateAmtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.EstimateAmtResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.EstimateAmtResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.EstimateAmtResponse.displayName = 'proto.sgn.gateway.v1.EstimateAmtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.WithdrawInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.WithdrawInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.WithdrawInfo.displayName = 'proto.sgn.gateway.v1.WithdrawInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.EstimateWithdrawAmtRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.displayName = 'proto.sgn.gateway.v1.EstimateWithdrawAmtRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.EstimateWithdrawAmtResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.displayName = 'proto.sgn.gateway.v1.EstimateWithdrawAmtResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.EstimateWithdrawAmt, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.EstimateWithdrawAmt.displayName = 'proto.sgn.gateway.v1.EstimateWithdrawAmt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetLPInfoListRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetLPInfoListRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetLPInfoListRequest.displayName = 'proto.sgn.gateway.v1.GetLPInfoListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.LPInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.LPInfo.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.LPInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.LPInfo.displayName = 'proto.sgn.gateway.v1.LPInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetLPInfoListResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetLPInfoListResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetLPInfoListResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetLPInfoListResponse.displayName = 'proto.sgn.gateway.v1.GetLPInfoListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.WithdrawLiquidityRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.WithdrawLiquidityRequest.displayName = 'proto.sgn.gateway.v1.WithdrawLiquidityRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.WithdrawLiquidityResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.WithdrawLiquidityResponse.displayName = 'proto.sgn.gateway.v1.WithdrawLiquidityResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UnlockFarmingRewardRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UnlockFarmingRewardRequest.displayName = 'proto.sgn.gateway.v1.UnlockFarmingRewardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UnlockFarmingRewardResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UnlockFarmingRewardResponse.displayName = 'proto.sgn.gateway.v1.UnlockFarmingRewardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.displayName = 'proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.displayName = 'proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.QueryLiquidityStatusRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.QueryLiquidityStatusRequest.displayName = 'proto.sgn.gateway.v1.QueryLiquidityStatusRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TransferHistory = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.TransferHistory, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TransferHistory.displayName = 'proto.sgn.gateway.v1.TransferHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.LPHistory = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.LPHistory, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.LPHistory.displayName = 'proto.sgn.gateway.v1.LPHistory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TransferHistoryRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.TransferHistoryRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TransferHistoryRequest.displayName = 'proto.sgn.gateway.v1.TransferHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TransferHistoryResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.TransferHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.TransferHistoryResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TransferHistoryResponse.displayName = 'proto.sgn.gateway.v1.TransferHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.LPHistoryRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.LPHistoryRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.LPHistoryRequest.displayName = 'proto.sgn.gateway.v1.LPHistoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.LPHistoryResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.LPHistoryResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.LPHistoryResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.LPHistoryResponse.displayName = 'proto.sgn.gateway.v1.LPHistoryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.RewardingDataRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.RewardingDataRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.RewardingDataRequest.displayName = 'proto.sgn.gateway.v1.RewardingDataRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.Reward = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.Reward, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.Reward.displayName = 'proto.sgn.gateway.v1.Reward';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.RewardingDataResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.RewardingDataResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.RewardingDataResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.RewardingDataResponse.displayName = 'proto.sgn.gateway.v1.RewardingDataResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UpdateChainRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UpdateChainRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UpdateChainRequest.displayName = 'proto.sgn.gateway.v1.UpdateChainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UpdateChainResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UpdateChainResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UpdateChainResponse.displayName = 'proto.sgn.gateway.v1.UpdateChainResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UpdateTokenRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UpdateTokenRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UpdateTokenRequest.displayName = 'proto.sgn.gateway.v1.UpdateTokenRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UpdateTokenResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UpdateTokenResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UpdateTokenResponse.displayName = 'proto.sgn.gateway.v1.UpdateTokenResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.StakingConfigRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.StakingConfigRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.StakingConfigRequest.displayName = 'proto.sgn.gateway.v1.StakingConfigRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.StakingConfigResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.StakingConfigResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.StakingConfigResponse.displayName = 'proto.sgn.gateway.v1.StakingConfigResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UnlockStakingRewardRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UnlockStakingRewardRequest.displayName = 'proto.sgn.gateway.v1.UnlockStakingRewardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.UnlockStakingRewardResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.UnlockStakingRewardResponse.displayName = 'proto.sgn.gateway.v1.UnlockStakingRewardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetStakingRewardDetailsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.displayName = 'proto.sgn.gateway.v1.GetStakingRewardDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetStakingRewardDetailsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.displayName = 'proto.sgn.gateway.v1.GetStakingRewardDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.displayName = 'proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.displayName = 'proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.displayName = 'proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.displayName = 'proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAllLPInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllLPInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllLPInfoRequest.displayName = 'proto.sgn.gateway.v1.GetAllLPInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAllLPInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllLPInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllLPInfoResponse.displayName = 'proto.sgn.gateway.v1.GetAllLPInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.LPOperations = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.LPOperations, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.LPOperations.displayName = 'proto.sgn.gateway.v1.LPOperations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAllTXInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllTXInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllTXInfoRequest.displayName = 'proto.sgn.gateway.v1.GetAllTXInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAllTXInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllTXInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllTXInfoResponse.displayName = 'proto.sgn.gateway.v1.GetAllTXInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.TXOperations = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.TXOperations, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.TXOperations.displayName = 'proto.sgn.gateway.v1.TXOperations';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.AbnormalStatusInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.AbnormalStatusInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.AbnormalStatusInfo.displayName = 'proto.sgn.gateway.v1.AbnormalStatusInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetInfoByTxHashRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetInfoByTxHashRequest.displayName = 'proto.sgn.gateway.v1.GetInfoByTxHashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetInfoByTxHashResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetInfoByTxHashResponse.displayName = 'proto.sgn.gateway.v1.GetInfoByTxHashResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.FixEventMissRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.FixEventMissRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.FixEventMissRequest.displayName = 'proto.sgn.gateway.v1.FixEventMissRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.FixEventMissResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.FixEventMissResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.FixEventMissResponse.displayName = 'proto.sgn.gateway.v1.FixEventMissResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllConfigsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllConfigsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllConfigsRequest.displayName = 'proto.sgn.gateway.v1.GetAllConfigsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ExtendedPair = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ExtendedPair, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ExtendedPair.displayName = 'proto.sgn.gateway.v1.ExtendedPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetAllConfigsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetAllConfigsResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetAllConfigsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetAllConfigsResponse.displayName = 'proto.sgn.gateway.v1.GetAllConfigsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.displayName = 'proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ExtendedToken = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ExtendedToken, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ExtendedToken.displayName = 'proto.sgn.gateway.v1.ExtendedToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.displayName = 'proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.RetentionRewardsEvent = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.RetentionRewardsEvent, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.RetentionRewardsEvent.displayName = 'proto.sgn.gateway.v1.RetentionRewardsEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.displayName = 'proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.RetentionRewardsLevelConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.RetentionRewardsLevelConfig.displayName = 'proto.sgn.gateway.v1.RetentionRewardsLevelConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.displayName = 'proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.displayName = 'proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimRetentionRewardsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.displayName = 'proto.sgn.gateway.v1.ClaimRetentionRewardsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimRetentionRewardsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.displayName = 'proto.sgn.gateway.v1.ClaimRetentionRewardsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.displayName = 'proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.displayName = 'proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.displayName = 'proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.displayName = 'proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.displayName = 'proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.displayName = 'proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.IncentiveCampaignRank = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.IncentiveCampaignRank, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.IncentiveCampaignRank.displayName = 'proto.sgn.gateway.v1.IncentiveCampaignRank';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.FeeRebateEvent = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.FeeRebateEvent, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.FeeRebateEvent.displayName = 'proto.sgn.gateway.v1.FeeRebateEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.displayName = 'proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.FeeRebateLevelConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.FeeRebateLevelConfig.displayName = 'proto.sgn.gateway.v1.FeeRebateLevelConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetFeeRebateInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetFeeRebateInfoRequest.displayName = 'proto.sgn.gateway.v1.GetFeeRebateInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetFeeRebateInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetFeeRebateInfoResponse.displayName = 'proto.sgn.gateway.v1.GetFeeRebateInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimFeeRebateRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimFeeRebateRequest.displayName = 'proto.sgn.gateway.v1.ClaimFeeRebateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimFeeRebateResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimFeeRebateResponse.displayName = 'proto.sgn.gateway.v1.ClaimFeeRebateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.BscCampaignEventConfig = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.BscCampaignEventConfig, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.BscCampaignEventConfig.displayName = 'proto.sgn.gateway.v1.BscCampaignEventConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.displayName = 'proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.BscCampaignTransferWhiteList.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.BscCampaignTransferWhiteList, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.BscCampaignTransferWhiteList.displayName = 'proto.sgn.gateway.v1.BscCampaignTransferWhiteList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetBscCampaignInfoRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetBscCampaignInfoRequest.displayName = 'proto.sgn.gateway.v1.GetBscCampaignInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.BscCampaignInfo = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.BscCampaignInfo, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.BscCampaignInfo.displayName = 'proto.sgn.gateway.v1.BscCampaignInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetBscCampaignInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetBscCampaignInfoResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetBscCampaignInfoResponse.displayName = 'proto.sgn.gateway.v1.GetBscCampaignInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.displayName = 'proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.displayName = 'proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.displayName = 'proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.repeatedFields_, null);
};
goog.inherits(proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.displayName = 'proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.sgn.gateway.v1.ErrMsg = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.sgn.gateway.v1.ErrMsg, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.sgn.gateway.v1.ErrMsg.displayName = 'proto.sgn.gateway.v1.ErrMsg';
}



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InitPegRefundRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InitPegRefundRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitPegRefundRequest.toObject = function(includeInstance, msg) {
  var obj = {
    refId: msg.getRefId_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InitPegRefundRequest}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InitPegRefundRequest;
  return proto.sgn.gateway.v1.InitPegRefundRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InitPegRefundRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InitPegRefundRequest}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRefId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InitPegRefundRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InitPegRefundRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitPegRefundRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes ref_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.getRefId = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes ref_id = 1;
 * This is a type-conversion wrapper around `getRefId()`
 * @return {string}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.getRefId_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getRefId()));
};


/**
 * optional bytes ref_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRefId()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.getRefId_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getRefId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.InitPegRefundRequest} returns this
 */
proto.sgn.gateway.v1.InitPegRefundRequest.prototype.setRefId = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InitPegRefundResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InitPegRefundResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitPegRefundResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InitPegRefundResponse}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InitPegRefundResponse;
  return proto.sgn.gateway.v1.InitPegRefundResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InitPegRefundResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InitPegRefundResponse}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InitPegRefundResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InitPegRefundResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitPegRefundResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.InitPegRefundResponse} returns this
*/
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.InitPegRefundResponse} returns this
 */
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.InitPegRefundResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InitWithdrawRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InitWithdrawRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitWithdrawRequest.toObject = function(includeInstance, msg) {
  var obj = {
    withdrawReq: msg.getWithdrawReq_asB64(),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InitWithdrawRequest}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InitWithdrawRequest;
  return proto.sgn.gateway.v1.InitWithdrawRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InitWithdrawRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InitWithdrawRequest}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWithdrawReq(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InitWithdrawRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InitWithdrawRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitWithdrawRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawReq_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes withdraw_req = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getWithdrawReq = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes withdraw_req = 1;
 * This is a type-conversion wrapper around `getWithdrawReq()`
 * @return {string}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getWithdrawReq_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWithdrawReq()));
};


/**
 * optional bytes withdraw_req = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWithdrawReq()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getWithdrawReq_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWithdrawReq()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.InitWithdrawRequest} returns this
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.setWithdrawReq = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig = 2;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.InitWithdrawRequest} returns this
 */
proto.sgn.gateway.v1.InitWithdrawRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InitWithdrawResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InitWithdrawResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitWithdrawResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InitWithdrawResponse}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InitWithdrawResponse;
  return proto.sgn.gateway.v1.InitWithdrawResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InitWithdrawResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InitWithdrawResponse}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InitWithdrawResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InitWithdrawResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InitWithdrawResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.InitWithdrawResponse} returns this
*/
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.InitWithdrawResponse} returns this
 */
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.InitWithdrawResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetUsrBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.toObject = function(includeInstance, msg) {
  var obj = {
    sig: msg.getSig_asB64(),
    sigAddr: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    usrAddr: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetUsrBalanceRequest;
  return proto.sgn.gateway.v1.GetUsrBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigAddr(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrAddr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetUsrBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSigAddr();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsrAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bytes sig = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes sig = 1;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string sig_addr = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getSigAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.setSigAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string usr_addr = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getUsrAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.setUsrAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 chain_id = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string token_symbol = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetUsrBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.toObject = function(includeInstance, msg) {
  var obj = {
    balance: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceResponse}
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetUsrBalanceResponse;
  return proto.sgn.gateway.v1.GetUsrBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceResponse}
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetUsrBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetUsrBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBalance();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string balance = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.prototype.getBalance = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetUsrBalanceResponse} returns this
 */
proto.sgn.gateway.v1.GetUsrBalanceResponse.prototype.setBalance = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    msg: (f = msg.getMsg()) && tx_pb.MsgClaimFee.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest;
  return proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new tx_pb.MsgClaimFee;
      reader.readMessage(value,tx_pb.MsgClaimFee.deserializeBinaryFromReader);
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMsg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      tx_pb.MsgClaimFee.serializeBinaryToWriter
    );
  }
};


/**
 * optional sgn.pegbridge.v1.MsgClaimFee msg = 1;
 * @return {?proto.sgn.pegbridge.v1.MsgClaimFee}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.getMsg = function() {
  return /** @type{?proto.sgn.pegbridge.v1.MsgClaimFee} */ (
    googleProtobuf.Message.getWrapperField(this, tx_pb.MsgClaimFee, 1));
};


/**
 * @param {?proto.sgn.pegbridge.v1.MsgClaimFee|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest} returns this
*/
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.setMsg = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest} returns this
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.clearMsg = function() {
  return this.setMsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeRequest.prototype.hasMsg = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    resp: (f = msg.getResp()) && tx_pb.MsgClaimFeeResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse;
  return proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new tx_pb.MsgClaimFeeResponse;
      reader.readMessage(value,tx_pb.MsgClaimFeeResponse.deserializeBinaryFromReader);
      msg.setResp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getResp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      tx_pb.MsgClaimFeeResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} returns this
*/
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} returns this
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.pegbridge.v1.MsgClaimFeeResponse resp = 2;
 * @return {?proto.sgn.pegbridge.v1.MsgClaimFeeResponse}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.getResp = function() {
  return /** @type{?proto.sgn.pegbridge.v1.MsgClaimFeeResponse} */ (
    googleProtobuf.Message.getWrapperField(this, tx_pb.MsgClaimFeeResponse, 2));
};


/**
 * @param {?proto.sgn.pegbridge.v1.MsgClaimFeeResponse|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} returns this
*/
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.setResp = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse} returns this
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.clearResp = function() {
  return this.setResp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimPegBridgeFeeResponse.prototype.hasResp = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCampaignScoresRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.toObject = function(includeInstance, msg) {
  var obj = {
    date: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    beginBlock: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    endBlock: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresRequest}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCampaignScoresRequest;
  return proto.sgn.gateway.v1.GetCampaignScoresRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresRequest}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBeginBlock(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndBlock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCampaignScoresRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getBeginBlock();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEndBlock();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint32 date = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.getDate = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresRequest} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.setDate = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 begin_block = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.getBeginBlock = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresRequest} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.setBeginBlock = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 end_block = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.getEndBlock = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresRequest} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresRequest.prototype.setEndBlock = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCampaignScoresResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    scoresList: googleProtobuf.Message.toObjectList(msg.getScoresList(),
    proto.sgn.gateway.v1.CampaignScore.toObject, includeInstance),
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    begin: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCampaignScoresResponse;
  return proto.sgn.gateway.v1.GetCampaignScoresResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.CampaignScore;
      reader.readMessage(value,proto.sgn.gateway.v1.CampaignScore.deserializeBinaryFromReader);
      msg.addScores(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBegin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCampaignScoresResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCampaignScoresResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScoresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.gateway.v1.CampaignScore.serializeBinaryToWriter
    );
  }
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getBegin();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * repeated CampaignScore scores = 1;
 * @return {!Array<!proto.sgn.gateway.v1.CampaignScore>}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.getScoresList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.CampaignScore>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.CampaignScore, 1));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.CampaignScore>} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse} returns this
*/
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.setScoresList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.gateway.v1.CampaignScore=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.CampaignScore}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.addScores = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.gateway.v1.CampaignScore, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.clearScoresList = function() {
  return this.setScoresList([]);
};


/**
 * optional ErrMsg err = 2;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse} returns this
*/
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional uint64 begin = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.getBegin = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetCampaignScoresResponse} returns this
 */
proto.sgn.gateway.v1.GetCampaignScoresResponse.prototype.setBegin = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.CampaignScore.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.CampaignScore.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.CampaignScore} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.CampaignScore.toObject = function(includeInstance, msg) {
  var obj = {
    usrAddr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    score: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.CampaignScore}
 */
proto.sgn.gateway.v1.CampaignScore.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.CampaignScore;
  return proto.sgn.gateway.v1.CampaignScore.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.CampaignScore} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.CampaignScore}
 */
proto.sgn.gateway.v1.CampaignScore.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrAddr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.CampaignScore.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.CampaignScore.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.CampaignScore} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.CampaignScore.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsrAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getScore();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string usr_addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.CampaignScore.prototype.getUsrAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.CampaignScore} returns this
 */
proto.sgn.gateway.v1.CampaignScore.prototype.setUsrAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 score = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.CampaignScore.prototype.getScore = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.CampaignScore} returns this
 */
proto.sgn.gateway.v1.CampaignScore.prototype.setScore = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.repeatedFields_ = [4,5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.QueryLiquidityStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    status: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    wdOnchain: msg.getWdOnchain_asB64(),
    sortedSigsList: msg.getSortedSigsList_asB64(),
    signersList: msg.getSignersList_asB64(),
    powersList: msg.getPowersList_asB64(),
    blockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    blockDelay: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.QueryLiquidityStatusResponse;
  return proto.sgn.gateway.v1.QueryLiquidityStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWdOnchain(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSortedSigs(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSigners(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPowers(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTxLink(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.QueryLiquidityStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWdOnchain_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSortedSigsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getSignersList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      5,
      f
    );
  }
  f = message.getPowersList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      6,
      f
    );
  }
  f = message.getBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getBlockDelay();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
*/
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.cbridge.v1.WithdrawStatus status = 2;
 * @return {!proto.sgn.cbridge.v1.WithdrawStatus}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.WithdrawStatus} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes wd_onchain = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getWdOnchain = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes wd_onchain = 3;
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {string}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getWdOnchain_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWdOnchain()));
};


/**
 * optional bytes wd_onchain = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getWdOnchain_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWdOnchain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setWdOnchain = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * repeated bytes sorted_sigs = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSortedSigsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes sorted_sigs = 4;
 * This is a type-conversion wrapper around `getSortedSigsList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSortedSigsList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getSortedSigsList()));
};


/**
 * repeated bytes sorted_sigs = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSortedSigsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSortedSigsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getSortedSigsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setSortedSigsList = function(value) {
  return googleProtobuf.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.addSortedSigs = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.clearSortedSigsList = function() {
  return this.setSortedSigsList([]);
};


/**
 * repeated bytes signers = 5;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSignersList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 5));
};


/**
 * repeated bytes signers = 5;
 * This is a type-conversion wrapper around `getSignersList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSignersList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getSignersList()));
};


/**
 * repeated bytes signers = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignersList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getSignersList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getSignersList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setSignersList = function(value) {
  return googleProtobuf.Message.setField(this, 5, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.addSigners = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.clearSignersList = function() {
  return this.setSignersList([]);
};


/**
 * repeated bytes powers = 6;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getPowersList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 6));
};


/**
 * repeated bytes powers = 6;
 * This is a type-conversion wrapper around `getPowersList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getPowersList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getPowersList()));
};


/**
 * repeated bytes powers = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPowersList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getPowersList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getPowersList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setPowersList = function(value) {
  return googleProtobuf.Message.setField(this, 6, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.addPowers = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.clearPowersList = function() {
  return this.setPowersList([]);
};


/**
 * optional string block_tx_link = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 block_delay = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.getBlockDelay = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusResponse} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusResponse.prototype.setBlockDelay = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 8, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.Chain.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.Chain.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.Chain} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.Chain.toObject = function(includeInstance, msg) {
  var obj = {
    id: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    name: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    icon: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    blockDelay: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    gasTokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    exploreUrl: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    contractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    dropGasAmt: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
    dropGasCostAmt: googleProtobuf.Message.getFieldWithDefault(msg, 11, ""),
    dropGasBalanceAlert: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
    suggestedGasCost: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.Chain.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.Chain;
  return proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.Chain} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDelay(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGasTokenSymbol(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setExploreUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddr(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDropGasAmt(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDropGasCostAmt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDropGasBalanceAlert(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSuggestedGasCost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.Chain.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.Chain.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.Chain} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.Chain.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockDelay();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getGasTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getExploreUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getContractAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDropGasAmt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDropGasCostAmt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDropGasBalanceAlert();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getSuggestedGasCost();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.Chain.prototype.getId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getIcon = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setIcon = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 block_delay = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.Chain.prototype.getBlockDelay = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setBlockDelay = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string gas_token_symbol = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getGasTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setGasTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string explore_url = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getExploreUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setExploreUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string contract_addr = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string drop_gas_amt = 9;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getDropGasAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setDropGasAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string drop_gas_cost_amt = 11;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getDropGasCostAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setDropGasCostAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string drop_gas_balance_alert = 12;
 * @return {string}
 */
proto.sgn.gateway.v1.Chain.prototype.getDropGasBalanceAlert = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setDropGasBalanceAlert = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 suggested_gas_cost = 13;
 * @return {number}
 */
proto.sgn.gateway.v1.Chain.prototype.getSuggestedGasCost = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.Chain} returns this
 */
proto.sgn.gateway.v1.Chain.prototype.setSuggestedGasCost = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 13, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.ChainTokenInfo.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ChainTokenInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ChainTokenInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ChainTokenInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ChainTokenInfo.toObject = function(includeInstance, msg) {
  var obj = {
    tokenList: googleProtobuf.Message.toObjectList(msg.getTokenList(),
    proto.sgn.gateway.v1.TokenInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ChainTokenInfo}
 */
proto.sgn.gateway.v1.ChainTokenInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ChainTokenInfo;
  return proto.sgn.gateway.v1.ChainTokenInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ChainTokenInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ChainTokenInfo}
 */
proto.sgn.gateway.v1.ChainTokenInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.addToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ChainTokenInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ChainTokenInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ChainTokenInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ChainTokenInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TokenInfo token = 1;
 * @return {!Array<!proto.sgn.gateway.v1.TokenInfo>}
 */
proto.sgn.gateway.v1.ChainTokenInfo.prototype.getTokenList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.TokenInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 1));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.TokenInfo>} value
 * @return {!proto.sgn.gateway.v1.ChainTokenInfo} returns this
*/
proto.sgn.gateway.v1.ChainTokenInfo.prototype.setTokenList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.gateway.v1.TokenInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.ChainTokenInfo.prototype.addToken = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.gateway.v1.TokenInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.ChainTokenInfo} returns this
 */
proto.sgn.gateway.v1.ChainTokenInfo.prototype.clearTokenList = function() {
  return this.setTokenList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TokenInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TokenInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TokenInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = msg.getToken()) && query_pb$1.Token.toObject(includeInstance, f),
    name: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    icon: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.TokenInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TokenInfo;
  return proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TokenInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new query_pb$1.Token;
      reader.readMessage(value,query_pb$1.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TokenInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      query_pb$1.Token.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional sgn.cbridge.v1.Token token = 1;
 * @return {?proto.sgn.cbridge.v1.Token}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.getToken = function() {
  return /** @type{?proto.sgn.cbridge.v1.Token} */ (
    googleProtobuf.Message.getWrapperField(this, query_pb$1.Token, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.Token|undefined} value
 * @return {!proto.sgn.gateway.v1.TokenInfo} returns this
*/
proto.sgn.gateway.v1.TokenInfo.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TokenInfo} returns this
 */
proto.sgn.gateway.v1.TokenInfo.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.getName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TokenInfo} returns this
 */
proto.sgn.gateway.v1.TokenInfo.prototype.setName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.TokenInfo.prototype.getIcon = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TokenInfo} returns this
 */
proto.sgn.gateway.v1.TokenInfo.prototype.setIcon = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TransferInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TransferInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && proto.sgn.gateway.v1.Chain.toObject(includeInstance, f),
    token: (f = msg.getToken()) && query_pb$1.Token.toObject(includeInstance, f),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TransferInfo}
 */
proto.sgn.gateway.v1.TransferInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TransferInfo;
  return proto.sgn.gateway.v1.TransferInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TransferInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TransferInfo}
 */
proto.sgn.gateway.v1.TransferInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = new query_pb$1.Token;
      reader.readMessage(value,query_pb$1.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TransferInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TransferInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      query_pb$1.Token.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Chain chain = 1;
 * @return {?proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.getChain = function() {
  return /** @type{?proto.sgn.gateway.v1.Chain} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.Chain, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.Chain|undefined} value
 * @return {!proto.sgn.gateway.v1.TransferInfo} returns this
*/
proto.sgn.gateway.v1.TransferInfo.prototype.setChain = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TransferInfo} returns this
 */
proto.sgn.gateway.v1.TransferInfo.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.hasChain = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.cbridge.v1.Token token = 2;
 * @return {?proto.sgn.cbridge.v1.Token}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.getToken = function() {
  return /** @type{?proto.sgn.cbridge.v1.Token} */ (
    googleProtobuf.Message.getWrapperField(this, query_pb$1.Token, 2));
};


/**
 * @param {?proto.sgn.cbridge.v1.Token|undefined} value
 * @return {!proto.sgn.gateway.v1.TransferInfo} returns this
*/
proto.sgn.gateway.v1.TransferInfo.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TransferInfo} returns this
 */
proto.sgn.gateway.v1.TransferInfo.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferInfo.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferInfo} returns this
 */
proto.sgn.gateway.v1.TransferInfo.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTransferStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTransferStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.toObject = function(includeInstance, msg) {
  var obj = {
    transferId: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusRequest}
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTransferStatusRequest;
  return proto.sgn.gateway.v1.GetTransferStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTransferStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusRequest}
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTransferStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTransferStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transfer_id = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.prototype.getTransferId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusRequest} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusRequest.prototype.setTransferId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.repeatedFields_ = [4,5,6];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTransferStatusResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTransferStatusResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    status: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    wdOnchain: msg.getWdOnchain_asB64(),
    sortedSigsList: msg.getSortedSigsList_asB64(),
    signersList: msg.getSignersList_asB64(),
    powersList: msg.getPowersList_asB64(),
    refundReason: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    blockDelay: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    srcBlockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
    dstBlockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTransferStatusResponse;
  return proto.sgn.gateway.v1.GetTransferStatusResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTransferStatusResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWdOnchain(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSortedSigs(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addSigners(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addPowers(value);
      break;
    case 7:
      var value = /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (reader.readEnum());
      msg.setRefundReason(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockDelay(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcBlockTxLink(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstBlockTxLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTransferStatusResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTransferStatusResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getWdOnchain_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSortedSigsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      4,
      f
    );
  }
  f = message.getSignersList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      5,
      f
    );
  }
  f = message.getPowersList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      6,
      f
    );
  }
  f = message.getRefundReason();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getBlockDelay();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getSrcBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getDstBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
*/
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.cbridge.v1.TransferHistoryStatus status = 2;
 * @return {!proto.sgn.cbridge.v1.TransferHistoryStatus}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.TransferHistoryStatus} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bytes wd_onchain = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getWdOnchain = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes wd_onchain = 3;
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {string}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getWdOnchain_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWdOnchain()));
};


/**
 * optional bytes wd_onchain = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWdOnchain()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getWdOnchain_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWdOnchain()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setWdOnchain = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * repeated bytes sorted_sigs = 4;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSortedSigsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 4));
};


/**
 * repeated bytes sorted_sigs = 4;
 * This is a type-conversion wrapper around `getSortedSigsList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSortedSigsList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getSortedSigsList()));
};


/**
 * repeated bytes sorted_sigs = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSortedSigsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSortedSigsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getSortedSigsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setSortedSigsList = function(value) {
  return googleProtobuf.Message.setField(this, 4, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.addSortedSigs = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.clearSortedSigsList = function() {
  return this.setSortedSigsList([]);
};


/**
 * repeated bytes signers = 5;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSignersList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 5));
};


/**
 * repeated bytes signers = 5;
 * This is a type-conversion wrapper around `getSignersList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSignersList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getSignersList()));
};


/**
 * repeated bytes signers = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignersList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSignersList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getSignersList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setSignersList = function(value) {
  return googleProtobuf.Message.setField(this, 5, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.addSigners = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.clearSignersList = function() {
  return this.setSignersList([]);
};


/**
 * repeated bytes powers = 6;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getPowersList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (googleProtobuf.Message.getRepeatedField(this, 6));
};


/**
 * repeated bytes powers = 6;
 * This is a type-conversion wrapper around `getPowersList()`
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getPowersList_asB64 = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.bytesListAsB64(
      this.getPowersList()));
};


/**
 * repeated bytes powers = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPowersList()`
 * @return {!Array<!Uint8Array>}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getPowersList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (googleProtobuf.Message.bytesListAsU8(
      this.getPowersList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setPowersList = function(value) {
  return googleProtobuf.Message.setField(this, 6, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.addPowers = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.clearPowersList = function() {
  return this.setPowersList([]);
};


/**
 * optional sgn.cbridge.v1.XferStatus refund_reason = 7;
 * @return {!proto.sgn.cbridge.v1.XferStatus}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getRefundReason = function() {
  return /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.XferStatus} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setRefundReason = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint32 block_delay = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getBlockDelay = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setBlockDelay = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string src_block_tx_link = 9;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getSrcBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setSrcBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string dst_block_tx_link = 10;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.getDstBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTransferStatusResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferStatusResponse.prototype.setDstBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 10, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTransferConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsRequest}
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTransferConfigsRequest;
  return proto.sgn.gateway.v1.GetTransferConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsRequest}
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTransferConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferConfigsRequest.serializeBinaryToWriter = function(message, writer) {
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.repeatedFields_ = [2,5];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTransferConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    chainsList: googleProtobuf.Message.toObjectList(msg.getChainsList(),
    proto.sgn.gateway.v1.Chain.toObject, includeInstance),
    chainTokenMap: (f = msg.getChainTokenMap()) ? f.toObject(includeInstance, proto.sgn.gateway.v1.ChainTokenInfo.toObject) : [],
    farmingRewardContractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    peggedPairConfigsList: googleProtobuf.Message.toObjectList(msg.getPeggedPairConfigsList(),
    proto.sgn.gateway.v1.PeggedPairConfig.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTransferConfigsResponse;
  return proto.sgn.gateway.v1.GetTransferConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.addChains(value);
      break;
    case 3:
      var value = msg.getChainTokenMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.gateway.v1.ChainTokenInfo.deserializeBinaryFromReader, 0, new proto.sgn.gateway.v1.ChainTokenInfo());
         });
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFarmingRewardContractAddr(value);
      break;
    case 5:
      var value = new proto.sgn.gateway.v1.PeggedPairConfig;
      reader.readMessage(value,proto.sgn.gateway.v1.PeggedPairConfig.deserializeBinaryFromReader);
      msg.addPeggedPairConfigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTransferConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTransferConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getChainsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getChainTokenMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.gateway.v1.ChainTokenInfo.serializeBinaryToWriter);
  }
  f = message.getFarmingRewardContractAddr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPeggedPairConfigsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sgn.gateway.v1.PeggedPairConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated Chain chains = 2;
 * @return {!Array<!proto.sgn.gateway.v1.Chain>}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.getChainsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.Chain>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.Chain, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.Chain>} value
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.setChainsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.Chain=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.addChains = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.Chain, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.clearChainsList = function() {
  return this.setChainsList([]);
};


/**
 * map<uint32, ChainTokenInfo> chain_token = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.sgn.gateway.v1.ChainTokenInfo>}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.getChainTokenMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.sgn.gateway.v1.ChainTokenInfo>} */ (
      googleProtobuf.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.sgn.gateway.v1.ChainTokenInfo));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.clearChainTokenMap = function() {
  this.getChainTokenMap().clear();
  return this;};


/**
 * optional string farming_reward_contract_addr = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.getFarmingRewardContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.setFarmingRewardContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated PeggedPairConfig pegged_pair_configs = 5;
 * @return {!Array<!proto.sgn.gateway.v1.PeggedPairConfig>}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.getPeggedPairConfigsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.PeggedPairConfig>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.PeggedPairConfig, 5));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.PeggedPairConfig>} value
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.setPeggedPairConfigsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.gateway.v1.PeggedPairConfig=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig}
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.addPeggedPairConfigs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.gateway.v1.PeggedPairConfig, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTransferConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetTransferConfigsResponse.prototype.clearPeggedPairConfigsList = function() {
  return this.setPeggedPairConfigsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.PeggedPairConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.PeggedPairConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.PeggedPairConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    orgToken: (f = msg.getOrgToken()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f),
    peggedChainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    peggedToken: (f = msg.getPeggedToken()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f),
    peggedDepositContractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    peggedBurnContractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    canonicalTokenContractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig}
 */
proto.sgn.gateway.v1.PeggedPairConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.PeggedPairConfig;
  return proto.sgn.gateway.v1.PeggedPairConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.PeggedPairConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig}
 */
proto.sgn.gateway.v1.PeggedPairConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOrgChainId(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setOrgToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPeggedChainId(value);
      break;
    case 4:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setPeggedToken(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeggedDepositContractAddr(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeggedBurnContractAddr(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanonicalTokenContractAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.PeggedPairConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.PeggedPairConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.PeggedPairConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOrgToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getPeggedChainId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPeggedToken();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getPeggedDepositContractAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPeggedBurnContractAddr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCanonicalTokenContractAddr();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint32 org_chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getOrgChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setOrgChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional TokenInfo org_token = 2;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getOrgToken = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
*/
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setOrgToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.clearOrgToken = function() {
  return this.setOrgToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.hasOrgToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional uint32 pegged_chain_id = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getPeggedChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setPeggedChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional TokenInfo pegged_token = 4;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getPeggedToken = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 4));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
*/
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setPeggedToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.clearPeggedToken = function() {
  return this.setPeggedToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.hasPeggedToken = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional string pegged_deposit_contract_addr = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getPeggedDepositContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setPeggedDepositContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pegged_burn_contract_addr = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getPeggedBurnContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setPeggedBurnContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string canonical_token_contract_addr = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.getCanonicalTokenContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.PeggedPairConfig} returns this
 */
proto.sgn.gateway.v1.PeggedPairConfig.prototype.setCanonicalTokenContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTokenInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTokenInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoRequest}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTokenInfoRequest;
  return proto.sgn.gateway.v1.GetTokenInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTokenInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoRequest}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTokenInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTokenInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetTokenInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_symbol = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTokenInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetTokenInfoRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTokenInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTokenInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    tokenInfo: (f = msg.getTokenInfo()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTokenInfoResponse;
  return proto.sgn.gateway.v1.GetTokenInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTokenInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setTokenInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTokenInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTokenInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getTokenInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional TokenInfo token_info = 2;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.getTokenInfo = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.setTokenInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetTokenInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.clearTokenInfo = function() {
  return this.setTokenInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetTokenInfoResponse.prototype.hasTokenInfo = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.EstimateAmtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.EstimateAmtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateAmtRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    amt: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    usrAddr: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    slippageTolerance: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    isPegged: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.EstimateAmtRequest;
  return proto.sgn.gateway.v1.EstimateAmtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.EstimateAmtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrAddr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlippageTolerance(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPegged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.EstimateAmtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.EstimateAmtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateAmtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAmt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsrAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSlippageTolerance();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getIsPegged();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional uint32 src_chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 dst_chain_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token_symbol = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string amt = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string usr_addr = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getUsrAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setUsrAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 slippage_tolerance = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getSlippageTolerance = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setSlippageTolerance = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool is_pegged = 7;
 * @return {boolean}
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.getIsPegged = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateAmtRequest.prototype.setIsPegged = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.EstimateAmtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.EstimateAmtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateAmtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eqValueTokenAmt: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    bridgeRate: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    percFee: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    baseFee: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    slippageTolerance: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    maxSlippage: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    estimatedReceiveAmt: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    dropGasAmt: googleProtobuf.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.EstimateAmtResponse;
  return proto.sgn.gateway.v1.EstimateAmtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.EstimateAmtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEqValueTokenAmt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBridgeRate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPercFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlippageTolerance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxSlippage(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEstimatedReceiveAmt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDropGasAmt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.EstimateAmtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.EstimateAmtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateAmtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEqValueTokenAmt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBridgeRate();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getPercFee();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBaseFee();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSlippageTolerance();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMaxSlippage();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getEstimatedReceiveAmt();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDropGasAmt();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
*/
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string eq_value_token_amt = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getEqValueTokenAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setEqValueTokenAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float bridge_rate = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getBridgeRate = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setBridgeRate = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string perc_fee = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getPercFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setPercFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string base_fee = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getBaseFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint32 slippage_tolerance = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getSlippageTolerance = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setSlippageTolerance = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 max_slippage = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getMaxSlippage = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setMaxSlippage = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string estimated_receive_amt = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getEstimatedReceiveAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setEstimatedReceiveAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string drop_gas_amt = 9;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.getDropGasAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateAmtResponse.prototype.setDropGasAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 9, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.WithdrawInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.WithdrawInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawInfo.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    slippageTolerance: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.WithdrawInfo}
 */
proto.sgn.gateway.v1.WithdrawInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.WithdrawInfo;
  return proto.sgn.gateway.v1.WithdrawInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.WithdrawInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.WithdrawInfo}
 */
proto.sgn.gateway.v1.WithdrawInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlippageTolerance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.WithdrawInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.WithdrawInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSlippageTolerance();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.WithdrawInfo} returns this
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.WithdrawInfo} returns this
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 slippage_tolerance = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.getSlippageTolerance = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.WithdrawInfo} returns this
 */
proto.sgn.gateway.v1.WithdrawInfo.prototype.setSlippageTolerance = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.toObject = function(includeInstance, msg) {
  var obj = {
    srcWithdrawsList: googleProtobuf.Message.toObjectList(msg.getSrcWithdrawsList(),
    proto.sgn.gateway.v1.WithdrawInfo.toObject, includeInstance),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    usrAddr: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.EstimateWithdrawAmtRequest;
  return proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.WithdrawInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.WithdrawInfo.deserializeBinaryFromReader);
      msg.addSrcWithdraws(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstChainId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsrAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSrcWithdrawsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.gateway.v1.WithdrawInfo.serializeBinaryToWriter
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUsrAddr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated WithdrawInfo src_withdraws = 1;
 * @return {!Array<!proto.sgn.gateway.v1.WithdrawInfo>}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.getSrcWithdrawsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.WithdrawInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.WithdrawInfo, 1));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.WithdrawInfo>} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} returns this
*/
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.setSrcWithdrawsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.gateway.v1.WithdrawInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.WithdrawInfo}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.addSrcWithdraws = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.gateway.v1.WithdrawInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.clearSrcWithdrawsList = function() {
  return this.setSrcWithdrawsList([]);
};


/**
 * optional uint32 dst_chain_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string token_symbol = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string usr_addr = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.getUsrAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtRequest} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtRequest.prototype.setUsrAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    reqAmtMap: (f = msg.getReqAmtMap()) ? f.toObject(includeInstance, proto.sgn.gateway.v1.EstimateWithdrawAmt.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.EstimateWithdrawAmtResponse;
  return proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = msg.getReqAmtMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint32, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.gateway.v1.EstimateWithdrawAmt.deserializeBinaryFromReader, 0, new proto.sgn.gateway.v1.EstimateWithdrawAmt());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getReqAmtMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeUint32, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.gateway.v1.EstimateWithdrawAmt.serializeBinaryToWriter);
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} returns this
*/
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * map<uint32, EstimateWithdrawAmt> req_amt = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.sgn.gateway.v1.EstimateWithdrawAmt>}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.getReqAmtMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.sgn.gateway.v1.EstimateWithdrawAmt>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.sgn.gateway.v1.EstimateWithdrawAmt));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmtResponse} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmtResponse.prototype.clearReqAmtMap = function() {
  this.getReqAmtMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.EstimateWithdrawAmt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.toObject = function(includeInstance, msg) {
  var obj = {
    eqValueTokenAmt: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    bridgeRate: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    percFee: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    baseFee: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    slippageTolerance: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    maxSlippage: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.EstimateWithdrawAmt;
  return proto.sgn.gateway.v1.EstimateWithdrawAmt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEqValueTokenAmt(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBridgeRate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPercFee(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseFee(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlippageTolerance(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxSlippage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.EstimateWithdrawAmt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.EstimateWithdrawAmt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEqValueTokenAmt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBridgeRate();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getPercFee();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseFee();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSlippageTolerance();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMaxSlippage();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional string eq_value_token_amt = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getEqValueTokenAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setEqValueTokenAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float bridge_rate = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getBridgeRate = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setBridgeRate = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional string perc_fee = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getPercFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setPercFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string base_fee = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getBaseFee = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 slippage_tolerance = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getSlippageTolerance = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setSlippageTolerance = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 max_slippage = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.getMaxSlippage = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.EstimateWithdrawAmt} returns this
 */
proto.sgn.gateway.v1.EstimateWithdrawAmt.prototype.setMaxSlippage = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetLPInfoListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetLPInfoListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListRequest}
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetLPInfoListRequest;
  return proto.sgn.gateway.v1.GetLPInfoListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetLPInfoListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListRequest}
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetLPInfoListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetLPInfoListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetLPInfoListRequest} returns this
 */
proto.sgn.gateway.v1.GetLPInfoListRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.LPInfo.repeatedFields_ = [13];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.LPInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.LPInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.LPInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && proto.sgn.gateway.v1.Chain.toObject(includeInstance, f),
    token: (f = msg.getToken()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f),
    liquidity: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    liquidityAmt: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    hasFarmingSessions: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 5, false),
    lpFeeEarning: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    farmingRewardEarning: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    volume24h: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    totalLiquidity: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    totalLiquidityAmt: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
    lpFeeEarningApy: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    farmingApy: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    farmingSessionTokensList: googleProtobuf.Message.toObjectList(msg.getFarmingSessionTokensList(),
    proto.sgn.gateway.v1.TokenInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.LPInfo}
 */
proto.sgn.gateway.v1.LPInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.LPInfo;
  return proto.sgn.gateway.v1.LPInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.LPInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.LPInfo}
 */
proto.sgn.gateway.v1.LPInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLiquidity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLiquidityAmt(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasFarmingSessions(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLpFeeEarning(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFarmingRewardEarning(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume24h(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalLiquidity(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalLiquidityAmt(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLpFeeEarningApy(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFarmingApy(value);
      break;
    case 13:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.addFarmingSessionTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.LPInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.LPInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.LPInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getLiquidity();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getLiquidityAmt();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getHasFarmingSessions();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLpFeeEarning();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getFarmingRewardEarning();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getVolume24h();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTotalLiquidity();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getTotalLiquidityAmt();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLpFeeEarningApy();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getFarmingApy();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getFarmingSessionTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Chain chain = 1;
 * @return {?proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getChain = function() {
  return /** @type{?proto.sgn.gateway.v1.Chain} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.Chain, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.Chain|undefined} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
*/
proto.sgn.gateway.v1.LPInfo.prototype.setChain = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPInfo.prototype.hasChain = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional TokenInfo token = 2;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getToken = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
*/
proto.sgn.gateway.v1.LPInfo.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPInfo.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional double liquidity = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getLiquidity = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setLiquidity = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string liquidity_amt = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getLiquidityAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setLiquidityAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool has_farming_sessions = 5;
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getHasFarmingSessions = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setHasFarmingSessions = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional double lp_fee_earning = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getLpFeeEarning = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setLpFeeEarning = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double farming_reward_earning = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getFarmingRewardEarning = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setFarmingRewardEarning = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double volume_24h = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getVolume24h = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setVolume24h = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double total_liquidity = 9;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getTotalLiquidity = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setTotalLiquidity = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional string total_liquidity_amt = 10;
 * @return {string}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getTotalLiquidityAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setTotalLiquidityAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double lp_fee_earning_apy = 11;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getLpFeeEarningApy = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setLpFeeEarningApy = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double farming_apy = 12;
 * @return {number}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getFarmingApy = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.setFarmingApy = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 12, value);
};


/**
 * repeated TokenInfo farming_session_tokens = 13;
 * @return {!Array<!proto.sgn.gateway.v1.TokenInfo>}
 */
proto.sgn.gateway.v1.LPInfo.prototype.getFarmingSessionTokensList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.TokenInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 13));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.TokenInfo>} value
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
*/
proto.sgn.gateway.v1.LPInfo.prototype.setFarmingSessionTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.sgn.gateway.v1.TokenInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.LPInfo.prototype.addFarmingSessionTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.sgn.gateway.v1.TokenInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.LPInfo} returns this
 */
proto.sgn.gateway.v1.LPInfo.prototype.clearFarmingSessionTokensList = function() {
  return this.setFarmingSessionTokensList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetLPInfoListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetLPInfoListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    lpInfoList: googleProtobuf.Message.toObjectList(msg.getLpInfoList(),
    proto.sgn.gateway.v1.LPInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetLPInfoListResponse;
  return proto.sgn.gateway.v1.GetLPInfoListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetLPInfoListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.LPInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.LPInfo.deserializeBinaryFromReader);
      msg.addLpInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetLPInfoListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetLPInfoListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getLpInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.LPInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse} returns this
*/
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse} returns this
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated LPInfo lp_info = 2;
 * @return {!Array<!proto.sgn.gateway.v1.LPInfo>}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.getLpInfoList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.LPInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.LPInfo, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.LPInfo>} value
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse} returns this
*/
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.setLpInfoList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.LPInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.LPInfo}
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.addLpInfo = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.LPInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetLPInfoListResponse} returns this
 */
proto.sgn.gateway.v1.GetLPInfoListResponse.prototype.clearLpInfoList = function() {
  return this.setLpInfoList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.WithdrawLiquidityRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.toObject = function(includeInstance, msg) {
  var obj = {
    withdrawReq: msg.getWithdrawReq_asB64(),
    sig: msg.getSig_asB64(),
    estimatedReceivedAmt: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    methodType: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.WithdrawLiquidityRequest;
  return proto.sgn.gateway.v1.WithdrawLiquidityRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setWithdrawReq(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEstimatedReceivedAmt(value);
      break;
    case 4:
      var value = /** @type {!proto.sgn.gateway.v1.WithdrawMethodType} */ (reader.readEnum());
      msg.setMethodType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.WithdrawLiquidityRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWithdrawReq_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getEstimatedReceivedAmt();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMethodType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional bytes withdraw_req = 1;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getWithdrawReq = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes withdraw_req = 1;
 * This is a type-conversion wrapper around `getWithdrawReq()`
 * @return {string}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getWithdrawReq_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getWithdrawReq()));
};


/**
 * optional bytes withdraw_req = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getWithdrawReq()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getWithdrawReq_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getWithdrawReq()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.setWithdrawReq = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes sig = 2;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes sig = 2;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string estimated_received_amt = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getEstimatedReceivedAmt = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.setEstimatedReceivedAmt = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional WithdrawMethodType method_type = 4;
 * @return {!proto.sgn.gateway.v1.WithdrawMethodType}
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.getMethodType = function() {
  return /** @type {!proto.sgn.gateway.v1.WithdrawMethodType} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.WithdrawMethodType} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityRequest} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityRequest.prototype.setMethodType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.WithdrawLiquidityResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityResponse}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.WithdrawLiquidityResponse;
  return proto.sgn.gateway.v1.WithdrawLiquidityResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityResponse}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.WithdrawLiquidityResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} returns this
*/
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 seq_num = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.WithdrawLiquidityResponse} returns this
 */
proto.sgn.gateway.v1.WithdrawLiquidityResponse.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UnlockFarmingRewardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UnlockFarmingRewardRequest;
  return proto.sgn.gateway.v1.UnlockFarmingRewardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UnlockFarmingRewardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardRequest} returns this
 */
proto.sgn.gateway.v1.UnlockFarmingRewardRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UnlockFarmingRewardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UnlockFarmingRewardResponse;
  return proto.sgn.gateway.v1.UnlockFarmingRewardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UnlockFarmingRewardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse} returns this
*/
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UnlockFarmingRewardResponse} returns this
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UnlockFarmingRewardResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest;
  return proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest} returns this
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    detailsList: googleProtobuf.Message.toObjectList(msg.getDetailsList(),
    farming_pb.RewardClaimDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse;
  return proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new farming_pb.RewardClaimDetails;
      reader.readMessage(value,farming_pb.RewardClaimDetails.deserializeBinaryFromReader);
      msg.addDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      farming_pb.RewardClaimDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} returns this
*/
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} returns this
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated sgn.farming.v1.RewardClaimDetails details = 2;
 * @return {!Array<!proto.sgn.farming.v1.RewardClaimDetails>}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.getDetailsList = function() {
  return /** @type{!Array<!proto.sgn.farming.v1.RewardClaimDetails>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, farming_pb.RewardClaimDetails, 2));
};


/**
 * @param {!Array<!proto.sgn.farming.v1.RewardClaimDetails>} value
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} returns this
*/
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.setDetailsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.farming.v1.RewardClaimDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.farming.v1.RewardClaimDetails}
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.addDetails = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.farming.v1.RewardClaimDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse} returns this
 */
proto.sgn.gateway.v1.GetFarmingRewardDetailsResponse.prototype.clearDetailsList = function() {
  return this.setDetailsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.QueryLiquidityStatusRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.toObject = function(includeInstance, msg) {
  var obj = {
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    txHash: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    lpAddr: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    type: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.QueryLiquidityStatusRequest;
  return proto.sgn.gateway.v1.QueryLiquidityStatusRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLpAddr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 5:
      var value = /** @type {!proto.sgn.gateway.v1.LPType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.QueryLiquidityStatusRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLpAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional uint64 seq_num = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tx_hash = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.getTxHash = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.setTxHash = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string lp_addr = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.getLpAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.setLpAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 chain_id = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional LPType type = 5;
 * @return {!proto.sgn.gateway.v1.LPType}
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.getType = function() {
  return /** @type {!proto.sgn.gateway.v1.LPType} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.LPType} value
 * @return {!proto.sgn.gateway.v1.QueryLiquidityStatusRequest} returns this
 */
proto.sgn.gateway.v1.QueryLiquidityStatusRequest.prototype.setType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TransferHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TransferHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferId: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    srcSendInfo: (f = msg.getSrcSendInfo()) && proto.sgn.gateway.v1.TransferInfo.toObject(includeInstance, f),
    dstReceivedInfo: (f = msg.getDstReceivedInfo()) && proto.sgn.gateway.v1.TransferInfo.toObject(includeInstance, f),
    ts: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    srcBlockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    dstBlockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    status: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    refundReason: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TransferHistory}
 */
proto.sgn.gateway.v1.TransferHistory.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TransferHistory;
  return proto.sgn.gateway.v1.TransferHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TransferHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TransferHistory}
 */
proto.sgn.gateway.v1.TransferHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransferId(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TransferInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TransferInfo.deserializeBinaryFromReader);
      msg.setSrcSendInfo(value);
      break;
    case 3:
      var value = new proto.sgn.gateway.v1.TransferInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TransferInfo.deserializeBinaryFromReader);
      msg.setDstReceivedInfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcBlockTxLink(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDstBlockTxLink(value);
      break;
    case 7:
      var value = /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 8:
      var value = /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (reader.readEnum());
      msg.setRefundReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TransferHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TransferHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcSendInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TransferInfo.serializeBinaryToWriter
    );
  }
  f = message.getDstReceivedInfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.sgn.gateway.v1.TransferInfo.serializeBinaryToWriter
    );
  }
  f = message.getTs();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSrcBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDstBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getRefundReason();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
};


/**
 * optional string transfer_id = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getTransferId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setTransferId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TransferInfo src_send_info = 2;
 * @return {?proto.sgn.gateway.v1.TransferInfo}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getSrcSendInfo = function() {
  return /** @type{?proto.sgn.gateway.v1.TransferInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TransferInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TransferInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
*/
proto.sgn.gateway.v1.TransferHistory.prototype.setSrcSendInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.clearSrcSendInfo = function() {
  return this.setSrcSendInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.hasSrcSendInfo = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional TransferInfo dst_received_info = 3;
 * @return {?proto.sgn.gateway.v1.TransferInfo}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getDstReceivedInfo = function() {
  return /** @type{?proto.sgn.gateway.v1.TransferInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TransferInfo, 3));
};


/**
 * @param {?proto.sgn.gateway.v1.TransferInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
*/
proto.sgn.gateway.v1.TransferHistory.prototype.setDstReceivedInfo = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.clearDstReceivedInfo = function() {
  return this.setDstReceivedInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.hasDstReceivedInfo = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};


/**
 * optional uint64 ts = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getTs = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setTs = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string src_block_tx_link = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getSrcBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setSrcBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dst_block_tx_link = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getDstBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setDstBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional sgn.cbridge.v1.TransferHistoryStatus status = 7;
 * @return {!proto.sgn.cbridge.v1.TransferHistoryStatus}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.TransferHistoryStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.TransferHistoryStatus} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional sgn.cbridge.v1.XferStatus refund_reason = 8;
 * @return {!proto.sgn.cbridge.v1.XferStatus}
 */
proto.sgn.gateway.v1.TransferHistory.prototype.getRefundReason = function() {
  return /** @type {!proto.sgn.cbridge.v1.XferStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.XferStatus} value
 * @return {!proto.sgn.gateway.v1.TransferHistory} returns this
 */
proto.sgn.gateway.v1.TransferHistory.prototype.setRefundReason = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 8, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.LPHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.LPHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.LPHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && proto.sgn.gateway.v1.Chain.toObject(includeInstance, f),
    token: (f = msg.getToken()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f),
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    ts: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    blockTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    status: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    type: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    seqNum: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    methodType: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
    nonce: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.LPHistory}
 */
proto.sgn.gateway.v1.LPHistory.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.LPHistory;
  return proto.sgn.gateway.v1.LPHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.LPHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.LPHistory}
 */
proto.sgn.gateway.v1.LPHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTs(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTxLink(value);
      break;
    case 6:
      var value = /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {!proto.sgn.gateway.v1.LPType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSeqNum(value);
      break;
    case 9:
      var value = /** @type {!proto.sgn.gateway.v1.WithdrawMethodType} */ (reader.readEnum());
      msg.setMethodType(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.LPHistory.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.LPHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.LPHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTs();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getBlockTxLink();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getSeqNum();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getMethodType();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
};


/**
 * optional Chain chain = 1;
 * @return {?proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getChain = function() {
  return /** @type{?proto.sgn.gateway.v1.Chain} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.Chain, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.Chain|undefined} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
*/
proto.sgn.gateway.v1.LPHistory.prototype.setChain = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPHistory.prototype.hasChain = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional TokenInfo token = 2;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getToken = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
*/
proto.sgn.gateway.v1.LPHistory.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPHistory.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getAmount = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 ts = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getTs = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setTs = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string block_tx_link = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getBlockTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setBlockTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional sgn.cbridge.v1.WithdrawStatus status = 6;
 * @return {!proto.sgn.cbridge.v1.WithdrawStatus}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getStatus = function() {
  return /** @type {!proto.sgn.cbridge.v1.WithdrawStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.sgn.cbridge.v1.WithdrawStatus} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional LPType type = 7;
 * @return {!proto.sgn.gateway.v1.LPType}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getType = function() {
  return /** @type {!proto.sgn.gateway.v1.LPType} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.LPType} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional uint64 seq_num = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getSeqNum = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setSeqNum = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 8, value);
};


/**
 * optional WithdrawMethodType method_type = 9;
 * @return {!proto.sgn.gateway.v1.WithdrawMethodType}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getMethodType = function() {
  return /** @type {!proto.sgn.gateway.v1.WithdrawMethodType} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.WithdrawMethodType} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setMethodType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional uint64 nonce = 10;
 * @return {number}
 */
proto.sgn.gateway.v1.LPHistory.prototype.getNonce = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPHistory} returns this
 */
proto.sgn.gateway.v1.LPHistory.prototype.setNonce = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 10, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TransferHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TransferHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistoryRequest.toObject = function(includeInstance, msg) {
  var obj = {
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TransferHistoryRequest}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TransferHistoryRequest;
  return proto.sgn.gateway.v1.TransferHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TransferHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TransferHistoryRequest}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TransferHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TransferHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string next_page_token = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.getNextPageToken = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryRequest} returns this
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 page_size = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryRequest} returns this
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.setPageSize = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string addr = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryRequest} returns this
 */
proto.sgn.gateway.v1.TransferHistoryRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.TransferHistoryResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TransferHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TransferHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    historyList: googleProtobuf.Message.toObjectList(msg.getHistoryList(),
    proto.sgn.gateway.v1.TransferHistory.toObject, includeInstance),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    currentSize: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TransferHistoryResponse;
  return proto.sgn.gateway.v1.TransferHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TransferHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TransferHistory;
      reader.readMessage(value,proto.sgn.gateway.v1.TransferHistory.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCurrentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TransferHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TransferHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TransferHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.TransferHistory.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
*/
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated TransferHistory history = 2;
 * @return {!Array<!proto.sgn.gateway.v1.TransferHistory>}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.TransferHistory>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.TransferHistory, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.TransferHistory>} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
*/
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.setHistoryList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.TransferHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.TransferHistory}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.addHistory = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.TransferHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 current_size = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.getCurrentSize = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TransferHistoryResponse} returns this
 */
proto.sgn.gateway.v1.TransferHistoryResponse.prototype.setCurrentSize = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.LPHistoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.LPHistoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistoryRequest.toObject = function(includeInstance, msg) {
  var obj = {
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    pageSize: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.LPHistoryRequest}
 */
proto.sgn.gateway.v1.LPHistoryRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.LPHistoryRequest;
  return proto.sgn.gateway.v1.LPHistoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.LPHistoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.LPHistoryRequest}
 */
proto.sgn.gateway.v1.LPHistoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.LPHistoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.LPHistoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string next_page_token = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.getNextPageToken = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPHistoryRequest} returns this
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 page_size = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPHistoryRequest} returns this
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.setPageSize = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string addr = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPHistoryRequest} returns this
 */
proto.sgn.gateway.v1.LPHistoryRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.LPHistoryResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.LPHistoryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.LPHistoryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistoryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    historyList: googleProtobuf.Message.toObjectList(msg.getHistoryList(),
    proto.sgn.gateway.v1.LPHistory.toObject, includeInstance),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    currentSize: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse}
 */
proto.sgn.gateway.v1.LPHistoryResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.LPHistoryResponse;
  return proto.sgn.gateway.v1.LPHistoryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.LPHistoryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse}
 */
proto.sgn.gateway.v1.LPHistoryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.LPHistory;
      reader.readMessage(value,proto.sgn.gateway.v1.LPHistory.deserializeBinaryFromReader);
      msg.addHistory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCurrentSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.LPHistoryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.LPHistoryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPHistoryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getHistoryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.LPHistory.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCurrentSize();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
*/
proto.sgn.gateway.v1.LPHistoryResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated LPHistory history = 2;
 * @return {!Array<!proto.sgn.gateway.v1.LPHistory>}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.getHistoryList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.LPHistory>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.LPHistory, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.LPHistory>} value
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
*/
proto.sgn.gateway.v1.LPHistoryResponse.prototype.setHistoryList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.LPHistory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.LPHistory}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.addHistory = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.LPHistory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.clearHistoryList = function() {
  return this.setHistoryList([]);
};


/**
 * optional string next_page_token = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 current_size = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.getCurrentSize = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPHistoryResponse} returns this
 */
proto.sgn.gateway.v1.LPHistoryResponse.prototype.setCurrentSize = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.RewardingDataRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.RewardingDataRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.RewardingDataRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RewardingDataRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.RewardingDataRequest}
 */
proto.sgn.gateway.v1.RewardingDataRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.RewardingDataRequest;
  return proto.sgn.gateway.v1.RewardingDataRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.RewardingDataRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.RewardingDataRequest}
 */
proto.sgn.gateway.v1.RewardingDataRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.RewardingDataRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.RewardingDataRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.RewardingDataRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RewardingDataRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.RewardingDataRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RewardingDataRequest} returns this
 */
proto.sgn.gateway.v1.RewardingDataRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.Reward.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.Reward.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.Reward} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.Reward.toObject = function(includeInstance, msg) {
  var f, obj = {
    amt: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    token: (f = msg.getToken()) && query_pb$1.Token.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.Reward}
 */
proto.sgn.gateway.v1.Reward.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.Reward;
  return proto.sgn.gateway.v1.Reward.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.Reward} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.Reward}
 */
proto.sgn.gateway.v1.Reward.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAmt(value);
      break;
    case 2:
      var value = new query_pb$1.Token;
      reader.readMessage(value,query_pb$1.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.Reward.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.Reward.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.Reward} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.Reward.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmt();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      query_pb$1.Token.serializeBinaryToWriter
    );
  }
};


/**
 * optional double amt = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.Reward.prototype.getAmt = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.Reward} returns this
 */
proto.sgn.gateway.v1.Reward.prototype.setAmt = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional sgn.cbridge.v1.Token token = 2;
 * @return {?proto.sgn.cbridge.v1.Token}
 */
proto.sgn.gateway.v1.Reward.prototype.getToken = function() {
  return /** @type{?proto.sgn.cbridge.v1.Token} */ (
    googleProtobuf.Message.getWrapperField(this, query_pb$1.Token, 2));
};


/**
 * @param {?proto.sgn.cbridge.v1.Token|undefined} value
 * @return {!proto.sgn.gateway.v1.Reward} returns this
*/
proto.sgn.gateway.v1.Reward.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.Reward} returns this
 */
proto.sgn.gateway.v1.Reward.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.Reward.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.RewardingDataResponse.repeatedFields_ = [3,4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.RewardingDataResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.RewardingDataResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RewardingDataResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    usdPriceMap: (f = msg.getUsdPriceMap()) ? f.toObject(includeInstance, undefined) : [],
    historicalCumulativeRewardsList: googleProtobuf.Message.toObjectList(msg.getHistoricalCumulativeRewardsList(),
    proto.sgn.gateway.v1.Reward.toObject, includeInstance),
    unlockedCumulativeRewardsList: googleProtobuf.Message.toObjectList(msg.getUnlockedCumulativeRewardsList(),
    proto.sgn.gateway.v1.Reward.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse}
 */
proto.sgn.gateway.v1.RewardingDataResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.RewardingDataResponse;
  return proto.sgn.gateway.v1.RewardingDataResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.RewardingDataResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse}
 */
proto.sgn.gateway.v1.RewardingDataResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = msg.getUsdPriceMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readDouble, null, "", 0.0);
         });
      break;
    case 3:
      var value = new proto.sgn.gateway.v1.Reward;
      reader.readMessage(value,proto.sgn.gateway.v1.Reward.deserializeBinaryFromReader);
      msg.addHistoricalCumulativeRewards(value);
      break;
    case 4:
      var value = new proto.sgn.gateway.v1.Reward;
      reader.readMessage(value,proto.sgn.gateway.v1.Reward.deserializeBinaryFromReader);
      msg.addUnlockedCumulativeRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.RewardingDataResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.RewardingDataResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RewardingDataResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getUsdPriceMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeDouble);
  }
  f = message.getHistoricalCumulativeRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.sgn.gateway.v1.Reward.serializeBinaryToWriter
    );
  }
  f = message.getUnlockedCumulativeRewardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.sgn.gateway.v1.Reward.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
*/
proto.sgn.gateway.v1.RewardingDataResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * map<string, double> usd_price = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.getUsdPriceMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.clearUsdPriceMap = function() {
  this.getUsdPriceMap().clear();
  return this;};


/**
 * repeated Reward historical_cumulative_rewards = 3;
 * @return {!Array<!proto.sgn.gateway.v1.Reward>}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.getHistoricalCumulativeRewardsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.Reward>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.Reward, 3));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.Reward>} value
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
*/
proto.sgn.gateway.v1.RewardingDataResponse.prototype.setHistoricalCumulativeRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.sgn.gateway.v1.Reward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.Reward}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.addHistoricalCumulativeRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.sgn.gateway.v1.Reward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.clearHistoricalCumulativeRewardsList = function() {
  return this.setHistoricalCumulativeRewardsList([]);
};


/**
 * repeated Reward unlocked_cumulative_rewards = 4;
 * @return {!Array<!proto.sgn.gateway.v1.Reward>}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.getUnlockedCumulativeRewardsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.Reward>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.Reward, 4));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.Reward>} value
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
*/
proto.sgn.gateway.v1.RewardingDataResponse.prototype.setUnlockedCumulativeRewardsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.sgn.gateway.v1.Reward=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.Reward}
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.addUnlockedCumulativeRewards = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.sgn.gateway.v1.Reward, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.RewardingDataResponse} returns this
 */
proto.sgn.gateway.v1.RewardingDataResponse.prototype.clearUnlockedCumulativeRewardsList = function() {
  return this.setUnlockedCumulativeRewardsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UpdateChainRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UpdateChainRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateChainRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chain: (f = msg.getChain()) && proto.sgn.gateway.v1.Chain.toObject(includeInstance, f),
    txUrlPrefix: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    sig: msg.getSig_asB64(),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest}
 */
proto.sgn.gateway.v1.UpdateChainRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UpdateChainRequest;
  return proto.sgn.gateway.v1.UpdateChainRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UpdateChainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest}
 */
proto.sgn.gateway.v1.UpdateChainRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxUrlPrefix(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UpdateChainRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UpdateChainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateChainRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getTxUrlPrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional Chain chain = 1;
 * @return {?proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getChain = function() {
  return /** @type{?proto.sgn.gateway.v1.Chain} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.Chain, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.Chain|undefined} value
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest} returns this
*/
proto.sgn.gateway.v1.UpdateChainRequest.prototype.setChain = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest} returns this
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.hasChain = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string tx_url_prefix = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getTxUrlPrefix = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest} returns this
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.setTxUrlPrefix = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes sig = 3;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes sig = 3;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest} returns this
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional string addr = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateChainRequest} returns this
 */
proto.sgn.gateway.v1.UpdateChainRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UpdateChainResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UpdateChainResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateChainResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    chain: (f = msg.getChain()) && proto.sgn.gateway.v1.Chain.toObject(includeInstance, f),
    txUrlPrefix: googleProtobuf.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse}
 */
proto.sgn.gateway.v1.UpdateChainResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UpdateChainResponse;
  return proto.sgn.gateway.v1.UpdateChainResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UpdateChainResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse}
 */
proto.sgn.gateway.v1.UpdateChainResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.Chain;
      reader.readMessage(value,proto.sgn.gateway.v1.Chain.deserializeBinaryFromReader);
      msg.setChain(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxUrlPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UpdateChainResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UpdateChainResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateChainResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getChain();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.Chain.serializeBinaryToWriter
    );
  }
  f = message.getTxUrlPrefix();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse} returns this
*/
proto.sgn.gateway.v1.UpdateChainResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse} returns this
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional Chain chain = 2;
 * @return {?proto.sgn.gateway.v1.Chain}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.getChain = function() {
  return /** @type{?proto.sgn.gateway.v1.Chain} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.Chain, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.Chain|undefined} value
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse} returns this
*/
proto.sgn.gateway.v1.UpdateChainResponse.prototype.setChain = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse} returns this
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.clearChain = function() {
  return this.setChain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.hasChain = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};


/**
 * optional string tx_url_prefix = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.getTxUrlPrefix = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateChainResponse} returns this
 */
proto.sgn.gateway.v1.UpdateChainResponse.prototype.setTxUrlPrefix = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UpdateTokenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UpdateTokenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateTokenRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    tokenName: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    tokenIcon: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    sig: msg.getSig_asB64(),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UpdateTokenRequest;
  return proto.sgn.gateway.v1.UpdateTokenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UpdateTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenIcon(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UpdateTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UpdateTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateTokenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokenName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTokenIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string token_symbol = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string token_name = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getTokenName = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setTokenName = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string token_icon = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getTokenIcon = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setTokenIcon = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bytes sig = 5;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes sig = 5;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional string addr = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenRequest} returns this
 */
proto.sgn.gateway.v1.UpdateTokenRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UpdateTokenResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UpdateTokenResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateTokenResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    token: (f = msg.getToken()) && proto.sgn.gateway.v1.TokenInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UpdateTokenResponse;
  return proto.sgn.gateway.v1.UpdateTokenResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UpdateTokenResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TokenInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.TokenInfo.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UpdateTokenResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UpdateTokenResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UpdateTokenResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.sgn.gateway.v1.TokenInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse} returns this
*/
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse} returns this
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional TokenInfo token = 2;
 * @return {?proto.sgn.gateway.v1.TokenInfo}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.getToken = function() {
  return /** @type{?proto.sgn.gateway.v1.TokenInfo} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.TokenInfo, 2));
};


/**
 * @param {?proto.sgn.gateway.v1.TokenInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse} returns this
*/
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UpdateTokenResponse} returns this
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UpdateTokenResponse.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.StakingConfigRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.StakingConfigRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.StakingConfigRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.StakingConfigRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.StakingConfigRequest}
 */
proto.sgn.gateway.v1.StakingConfigRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.StakingConfigRequest;
  return proto.sgn.gateway.v1.StakingConfigRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.StakingConfigRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.StakingConfigRequest}
 */
proto.sgn.gateway.v1.StakingConfigRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.StakingConfigRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.StakingConfigRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.StakingConfigRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.StakingConfigRequest.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.StakingConfigResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.StakingConfigResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.StakingConfigResponse.toObject = function(includeInstance, msg) {
  var obj = {
    viewerContract: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    stakingContract: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    stakingRewardContract: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    celrContract: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse}
 */
proto.sgn.gateway.v1.StakingConfigResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.StakingConfigResponse;
  return proto.sgn.gateway.v1.StakingConfigResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.StakingConfigResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse}
 */
proto.sgn.gateway.v1.StakingConfigResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewerContract(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakingContract(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStakingRewardContract(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCelrContract(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.StakingConfigResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.StakingConfigResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.StakingConfigResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewerContract();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStakingContract();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStakingRewardContract();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCelrContract();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string viewer_contract = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.getViewerContract = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse} returns this
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.setViewerContract = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string staking_contract = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.getStakingContract = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse} returns this
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.setStakingContract = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string staking_reward_contract = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.getStakingRewardContract = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse} returns this
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.setStakingRewardContract = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string celr_contract = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.getCelrContract = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.StakingConfigResponse} returns this
 */
proto.sgn.gateway.v1.StakingConfigResponse.prototype.setCelrContract = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UnlockStakingRewardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.toObject = function(includeInstance, msg) {
  var obj = {
    delegatorAddress: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardRequest}
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UnlockStakingRewardRequest;
  return proto.sgn.gateway.v1.UnlockStakingRewardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardRequest}
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UnlockStakingRewardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardRequest} returns this
 */
proto.sgn.gateway.v1.UnlockStakingRewardRequest.prototype.setDelegatorAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.UnlockStakingRewardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardResponse}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.UnlockStakingRewardResponse;
  return proto.sgn.gateway.v1.UnlockStakingRewardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardResponse}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.UnlockStakingRewardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.UnlockStakingRewardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardResponse} returns this
*/
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.UnlockStakingRewardResponse} returns this
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.UnlockStakingRewardResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    delegatorAddress: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetStakingRewardDetailsRequest;
  return proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string delegator_address = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.prototype.getDelegatorAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsRequest} returns this
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsRequest.prototype.setDelegatorAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    detail: (f = msg.getDetail()) && distribution_pb.StakingRewardClaimInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetStakingRewardDetailsResponse;
  return proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new distribution_pb.StakingRewardClaimInfo;
      reader.readMessage(value,distribution_pb.StakingRewardClaimInfo.deserializeBinaryFromReader);
      msg.setDetail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getDetail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      distribution_pb.StakingRewardClaimInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} returns this
*/
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} returns this
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional sgn.distribution.v1.StakingRewardClaimInfo detail = 2;
 * @return {?proto.sgn.distribution.v1.StakingRewardClaimInfo}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.getDetail = function() {
  return /** @type{?proto.sgn.distribution.v1.StakingRewardClaimInfo} */ (
    googleProtobuf.Message.getWrapperField(this, distribution_pb.StakingRewardClaimInfo, 2));
};


/**
 * @param {?proto.sgn.distribution.v1.StakingRewardClaimInfo|undefined} value
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} returns this
*/
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.setDetail = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetStakingRewardDetailsResponse} returns this
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.clearDetail = function() {
  return this.setDetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetStakingRewardDetailsResponse.prototype.hasDetail = function() {
  return googleProtobuf.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainIdsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest;
  return proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChainIds(values[i]);
      }
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      1,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated uint32 chain_ids = 1;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.getChainIdsList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.setChainIdsList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.addChainIds = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.clearChainIdsList = function() {
  return this.setChainIdsList([]);
};


/**
 * optional string token_symbol = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceRequest.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    totalLiqMap: (f = msg.getTotalLiqMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse;
  return proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = msg.getTotalLiqMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readUint64, googleProtobuf.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getTotalLiqMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeUint64, googleProtobuf.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} returns this
*/
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * map<uint64, string> total_liq = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.getTotalLiqMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse} returns this
 */
proto.sgn.gateway.v1.GetTotalLiquidityProviderTokenBalanceResponse.prototype.clearTotalLiqMap = function() {
  this.getTotalLiqMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest;
  return proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoRequest.serializeBinaryToWriter = function(message, writer) {
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.toObject = function(includeInstance, msg) {
  var obj = {
    infoList: googleProtobuf.Message.toObjectList(msg.getInfoList(),
    proto.sgn.gateway.v1.AbnormalStatusInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse;
  return proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.AbnormalStatusInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.AbnormalStatusInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.sgn.gateway.v1.AbnormalStatusInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AbnormalStatusInfo info = 1;
 * @return {!Array<!proto.sgn.gateway.v1.AbnormalStatusInfo>}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.AbnormalStatusInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.AbnormalStatusInfo, 1));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.AbnormalStatusInfo>} value
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.setInfoList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.sgn.gateway.v1.AbnormalStatusInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo}
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.addInfo = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.sgn.gateway.v1.AbnormalStatusInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAbnormalStatusInfoResponse.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.repeatedFields_ = [1,2,3,4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllLPInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usrAddressList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    actionTypeList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    chainIdList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    tokenSymbolList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    beginTime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    endTime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    sigAddr: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllLPInfoRequest;
  return proto.sgn.gateway.v1.GetAllLPInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsrAddress(value);
      break;
    case 2:
      var values = /** @type {!Array<!proto.sgn.gateway.v1.LpActionType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addActionType(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChainId(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTokenSymbol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBeginTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextPageToken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigAddr(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllLPInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsrAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getActionTypeList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
  f = message.getChainIdList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getTokenSymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getBeginTime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSigAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * repeated string usr_address = 1;
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getUsrAddressList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setUsrAddressList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.addUsrAddress = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.clearUsrAddressList = function() {
  return this.setUsrAddressList([]);
};


/**
 * repeated LpActionType action_type = 2;
 * @return {!Array<!proto.sgn.gateway.v1.LpActionType>}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getActionTypeList = function() {
  return /** @type {!Array<!proto.sgn.gateway.v1.LpActionType>} */ (googleProtobuf.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.LpActionType>} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setActionTypeList = function(value) {
  return googleProtobuf.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.sgn.gateway.v1.LpActionType} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.addActionType = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.clearActionTypeList = function() {
  return this.setActionTypeList([]);
};


/**
 * repeated uint32 chain_id = 3;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getChainIdList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setChainIdList = function(value) {
  return googleProtobuf.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.addChainId = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.clearChainIdList = function() {
  return this.setChainIdList([]);
};


/**
 * repeated string token_symbol = 4;
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getTokenSymbolList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setTokenSymbolList = function(value) {
  return googleProtobuf.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.addTokenSymbol = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.clearTokenSymbolList = function() {
  return this.setTokenSymbolList([]);
};


/**
 * optional uint64 begin_time = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getBeginTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setBeginTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 end_time = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 next_page_token = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getNextPageToken = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string sig_addr = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getSigAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setSigAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bytes sig = 9;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes sig = 9;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllLPInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    operationList: googleProtobuf.Message.toObjectList(msg.getOperationList(),
    proto.sgn.gateway.v1.LPOperations.toObject, includeInstance),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllLPInfoResponse;
  return proto.sgn.gateway.v1.GetAllLPInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.LPOperations;
      reader.readMessage(value,proto.sgn.gateway.v1.LPOperations.deserializeBinaryFromReader);
      msg.addOperation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllLPInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllLPInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getOperationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.LPOperations.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated LPOperations operation = 2;
 * @return {!Array<!proto.sgn.gateway.v1.LPOperations>}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.getOperationList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.LPOperations>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.LPOperations, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.LPOperations>} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.setOperationList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.LPOperations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.LPOperations}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.addOperation = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.LPOperations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.clearOperationList = function() {
  return this.setOperationList([]);
};


/**
 * optional uint64 next_page_token = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.getNextPageToken = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllLPInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllLPInfoResponse.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.LPOperations.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.LPOperations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.LPOperations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPOperations.toObject = function(includeInstance, msg) {
  var obj = {
    address: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    action: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    amount: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    timestamp: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    txLink: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.LPOperations}
 */
proto.sgn.gateway.v1.LPOperations.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.LPOperations;
  return proto.sgn.gateway.v1.LPOperations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.LPOperations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.LPOperations}
 */
proto.sgn.gateway.v1.LPOperations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {!proto.sgn.gateway.v1.LpActionType} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.LPOperations.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.LPOperations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.LPOperations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.LPOperations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getTxLink();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional LpActionType action = 2;
 * @return {!proto.sgn.gateway.v1.LpActionType}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getAction = function() {
  return /** @type {!proto.sgn.gateway.v1.LpActionType} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.LpActionType} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setAction = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional uint32 chain_id = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string token_symbol = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float amount = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getAmount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setAmount = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional uint64 timestamp = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getTimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setTimestamp = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string tx_link = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.LPOperations.prototype.getTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.LPOperations} returns this
 */
proto.sgn.gateway.v1.LPOperations.prototype.setTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.repeatedFields_ = [1,2,3,4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllTXInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    usrAddressList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    srcChainIdList: (f = googleProtobuf.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    dstChainIdList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    tokenSymbolList: (f = googleProtobuf.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    beginTime: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    endTime: googleProtobuf.Message.getFieldWithDefault(msg, 6, 0),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    sigAddr: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    sig: msg.getSig_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllTXInfoRequest;
  return proto.sgn.gateway.v1.GetAllTXInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addUsrAddress(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSrcChainId(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addDstChainId(values[i]);
      }
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTokenSymbol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBeginTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEndTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextPageToken(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setSigAddr(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllTXInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsrAddressList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getSrcChainIdList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getDstChainIdList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getTokenSymbolList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getBeginTime();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSigAddr();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * repeated string usr_address = 1;
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getUsrAddressList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setUsrAddressList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.addUsrAddress = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.clearUsrAddressList = function() {
  return this.setUsrAddressList([]);
};


/**
 * repeated uint32 src_chain_id = 2;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getSrcChainIdList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setSrcChainIdList = function(value) {
  return googleProtobuf.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.addSrcChainId = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.clearSrcChainIdList = function() {
  return this.setSrcChainIdList([]);
};


/**
 * repeated uint32 dst_chain_id = 3;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getDstChainIdList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setDstChainIdList = function(value) {
  return googleProtobuf.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.addDstChainId = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.clearDstChainIdList = function() {
  return this.setDstChainIdList([]);
};


/**
 * repeated string token_symbol = 4;
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getTokenSymbolList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setTokenSymbolList = function(value) {
  return googleProtobuf.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.addTokenSymbol = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.clearTokenSymbolList = function() {
  return this.setTokenSymbolList([]);
};


/**
 * optional uint64 begin_time = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getBeginTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setBeginTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 end_time = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 next_page_token = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getNextPageToken = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string sig_addr = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getSigAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setSigAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bytes sig = 9;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes sig = 9;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllTXInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    operationList: googleProtobuf.Message.toObjectList(msg.getOperationList(),
    proto.sgn.gateway.v1.TXOperations.toObject, includeInstance),
    nextPageToken: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllTXInfoResponse;
  return proto.sgn.gateway.v1.GetAllTXInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.TXOperations;
      reader.readMessage(value,proto.sgn.gateway.v1.TXOperations.deserializeBinaryFromReader);
      msg.addOperation(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllTXInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllTXInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getOperationList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.TXOperations.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated TXOperations operation = 2;
 * @return {!Array<!proto.sgn.gateway.v1.TXOperations>}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.getOperationList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.TXOperations>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.TXOperations, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.TXOperations>} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.setOperationList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.TXOperations=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.TXOperations}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.addOperation = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.TXOperations, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.clearOperationList = function() {
  return this.setOperationList([]);
};


/**
 * optional uint64 next_page_token = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.getNextPageToken = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetAllTXInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetAllTXInfoResponse.prototype.setNextPageToken = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.TXOperations.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.TXOperations.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.TXOperations} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TXOperations.toObject = function(includeInstance, msg) {
  var obj = {
    address: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    srcChainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    tokenSymbol: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    sendAmount: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    recievedAmount: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    baseFee: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    liqFee: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    price: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    timestamp: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
    srcTxLink: googleProtobuf.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.TXOperations}
 */
proto.sgn.gateway.v1.TXOperations.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.TXOperations;
  return proto.sgn.gateway.v1.TXOperations.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.TXOperations} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.TXOperations}
 */
proto.sgn.gateway.v1.TXOperations.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSrcChainId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDstChainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenSymbol(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSendAmount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRecievedAmount(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBaseFee(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLiqFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimestamp(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcTxLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.TXOperations.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.TXOperations.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.TXOperations} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.TXOperations.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSrcChainId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTokenSymbol();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getSendAmount();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getRecievedAmount();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getBaseFee();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getLiqFee();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getSrcTxLink();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getAddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setAddress = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 src_chain_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getSrcChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setSrcChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 dst_chain_id = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string token_symbol = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getTokenSymbol = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setTokenSymbol = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional float send_amount = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getSendAmount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setSendAmount = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float recieved_amount = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getRecievedAmount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setRecievedAmount = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float base_fee = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getBaseFee = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setBaseFee = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float liq_fee = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getLiqFee = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setLiqFee = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float price = 9;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setPrice = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional uint64 timestamp = 10;
 * @return {number}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getTimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setTimestamp = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string src_tx_link = 11;
 * @return {string}
 */
proto.sgn.gateway.v1.TXOperations.prototype.getSrcTxLink = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.TXOperations} returns this
 */
proto.sgn.gateway.v1.TXOperations.prototype.setSrcTxLink = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 11, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.AbnormalStatusInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.AbnormalStatusInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.toObject = function(includeInstance, msg) {
  var obj = {
    type: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    dstChainId: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    txHash: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    time: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    peggedInfo: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    srcTransferId: googleProtobuf.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.AbnormalStatusInfo;
  return proto.sgn.gateway.v1.AbnormalStatusInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.AbnormalStatusInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDstChainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeggedInfo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcTransferId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.AbnormalStatusInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.AbnormalStatusInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getDstChainId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPeggedInfo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSrcTransferId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getType = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setType = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 chain_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 dst_chain_id = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getDstChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setDstChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string tx_hash = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getTxHash = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setTxHash = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string time = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getTime = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setTime = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string pegged_info = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getPeggedInfo = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setPeggedInfo = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string src_transfer_id = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.getSrcTransferId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.AbnormalStatusInfo} returns this
 */
proto.sgn.gateway.v1.AbnormalStatusInfo.prototype.setSrcTransferId = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetInfoByTxHashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    txHash: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    type: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    sig: msg.getSig_asB64(),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetInfoByTxHashRequest;
  return proto.sgn.gateway.v1.GetInfoByTxHashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 3:
      var value = /** @type {!proto.sgn.gateway.v1.CSType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetInfoByTxHashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tx_hash = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getTxHash = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.setTxHash = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CSType type = 3;
 * @return {!proto.sgn.gateway.v1.CSType}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getType = function() {
  return /** @type {!proto.sgn.gateway.v1.CSType} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.CSType} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.setType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes sig = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes sig = 4;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string addr = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashRequest} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetInfoByTxHashResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.toObject = function(includeInstance, msg) {
  var obj = {
    operation: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    status: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    memo: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    info: googleProtobuf.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetInfoByTxHashResponse;
  return proto.sgn.gateway.v1.GetInfoByTxHashResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.gateway.v1.CSOperation} */ (reader.readEnum());
      msg.setOperation(value);
      break;
    case 2:
      var value = /** @type {!proto.sgn.gateway.v1.UserCaseStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetInfoByTxHashResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional CSOperation operation = 1;
 * @return {!proto.sgn.gateway.v1.CSOperation}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.getOperation = function() {
  return /** @type {!proto.sgn.gateway.v1.CSOperation} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.CSOperation} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.setOperation = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional UserCaseStatus status = 2;
 * @return {!proto.sgn.gateway.v1.UserCaseStatus}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.getStatus = function() {
  return /** @type {!proto.sgn.gateway.v1.UserCaseStatus} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.UserCaseStatus} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.setStatus = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string memo = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.getMemo = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.setMemo = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string info = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.getInfo = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetInfoByTxHashResponse} returns this
 */
proto.sgn.gateway.v1.GetInfoByTxHashResponse.prototype.setInfo = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.FixEventMissRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.FixEventMissRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FixEventMissRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    txHash: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    type: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    sig: msg.getSig_asB64(),
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest}
 */
proto.sgn.gateway.v1.FixEventMissRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.FixEventMissRequest;
  return proto.sgn.gateway.v1.FixEventMissRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.FixEventMissRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest}
 */
proto.sgn.gateway.v1.FixEventMissRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 3:
      var value = /** @type {!proto.sgn.gateway.v1.CSType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.FixEventMissRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.FixEventMissRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FixEventMissRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getSig_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest} returns this
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tx_hash = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getTxHash = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest} returns this
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.setTxHash = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CSType type = 3;
 * @return {!proto.sgn.gateway.v1.CSType}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getType = function() {
  return /** @type {!proto.sgn.gateway.v1.CSType} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.CSType} value
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest} returns this
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.setType = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bytes sig = 4;
 * @return {!(string|Uint8Array)}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getSig = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes sig = 4;
 * This is a type-conversion wrapper around `getSig()`
 * @return {string}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getSig_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSig()));
};


/**
 * optional bytes sig = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSig()`
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getSig_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSig()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest} returns this
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.setSig = function(value) {
  return googleProtobuf.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional string addr = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.FixEventMissRequest} returns this
 */
proto.sgn.gateway.v1.FixEventMissRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.FixEventMissResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.FixEventMissResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.FixEventMissResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FixEventMissResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.FixEventMissResponse}
 */
proto.sgn.gateway.v1.FixEventMissResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.FixEventMissResponse;
  return proto.sgn.gateway.v1.FixEventMissResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.FixEventMissResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.FixEventMissResponse}
 */
proto.sgn.gateway.v1.FixEventMissResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FixEventMissResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.FixEventMissResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.FixEventMissResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FixEventMissResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.FixEventMissResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.FixEventMissResponse} returns this
*/
proto.sgn.gateway.v1.FixEventMissResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.FixEventMissResponse} returns this
 */
proto.sgn.gateway.v1.FixEventMissResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.FixEventMissResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllConfigsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllConfigsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsRequest}
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllConfigsRequest;
  return proto.sgn.gateway.v1.GetAllConfigsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllConfigsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsRequest}
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllConfigsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllConfigsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllConfigsRequest.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ExtendedPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ExtendedPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ExtendedPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    peggedPair: (f = msg.getPeggedPair()) && pegbridge_pb.OrigPeggedPair.toObject(includeInstance, f),
    minDeposit: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    maxDeposit: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    minBurn: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    maxBurn: googleProtobuf.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ExtendedPair}
 */
proto.sgn.gateway.v1.ExtendedPair.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ExtendedPair;
  return proto.sgn.gateway.v1.ExtendedPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ExtendedPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ExtendedPair}
 */
proto.sgn.gateway.v1.ExtendedPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pegbridge_pb.OrigPeggedPair;
      reader.readMessage(value,pegbridge_pb.OrigPeggedPair.deserializeBinaryFromReader);
      msg.setPeggedPair(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinDeposit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxDeposit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinBurn(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxBurn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ExtendedPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ExtendedPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ExtendedPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPeggedPair();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pegbridge_pb.OrigPeggedPair.serializeBinaryToWriter
    );
  }
  f = message.getMinDeposit();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaxDeposit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMinBurn();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaxBurn();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional sgn.pegbridge.v1.OrigPeggedPair pegged_pair = 1;
 * @return {?proto.sgn.pegbridge.v1.OrigPeggedPair}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.getPeggedPair = function() {
  return /** @type{?proto.sgn.pegbridge.v1.OrigPeggedPair} */ (
    googleProtobuf.Message.getWrapperField(this, pegbridge_pb.OrigPeggedPair, 1));
};


/**
 * @param {?proto.sgn.pegbridge.v1.OrigPeggedPair|undefined} value
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
*/
proto.sgn.gateway.v1.ExtendedPair.prototype.setPeggedPair = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.clearPeggedPair = function() {
  return this.setPeggedPair(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.hasPeggedPair = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string min_deposit = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.getMinDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.setMinDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string max_deposit = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.getMaxDeposit = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.setMaxDeposit = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string min_burn = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.getMinBurn = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.setMinBurn = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string max_burn = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.getMaxBurn = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedPair} returns this
 */
proto.sgn.gateway.v1.ExtendedPair.prototype.setMaxBurn = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetAllConfigsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetAllConfigsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    peggedPairsList: googleProtobuf.Message.toObjectList(msg.getPeggedPairsList(),
    proto.sgn.gateway.v1.ExtendedPair.toObject, includeInstance),
    cbrConfig: (f = msg.getCbrConfig()) && cbridge_pb.CbrConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetAllConfigsResponse;
  return proto.sgn.gateway.v1.GetAllConfigsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetAllConfigsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.ExtendedPair;
      reader.readMessage(value,proto.sgn.gateway.v1.ExtendedPair.deserializeBinaryFromReader);
      msg.addPeggedPairs(value);
      break;
    case 3:
      var value = new cbridge_pb.CbrConfig;
      reader.readMessage(value,cbridge_pb.CbrConfig.deserializeBinaryFromReader);
      msg.setCbrConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetAllConfigsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetAllConfigsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getPeggedPairsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.ExtendedPair.serializeBinaryToWriter
    );
  }
  f = message.getCbrConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      cbridge_pb.CbrConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated ExtendedPair pegged_pairs = 2;
 * @return {!Array<!proto.sgn.gateway.v1.ExtendedPair>}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.getPeggedPairsList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.ExtendedPair>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.ExtendedPair, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.ExtendedPair>} value
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.setPeggedPairsList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.ExtendedPair=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.ExtendedPair}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.addPeggedPairs = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.ExtendedPair, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.clearPeggedPairsList = function() {
  return this.setPeggedPairsList([]);
};


/**
 * optional sgn.cbridge.v1.CbrConfig cbr_config = 3;
 * @return {?proto.sgn.cbridge.v1.CbrConfig}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.getCbrConfig = function() {
  return /** @type{?proto.sgn.cbridge.v1.CbrConfig} */ (
    googleProtobuf.Message.getWrapperField(this, cbridge_pb.CbrConfig, 3));
};


/**
 * @param {?proto.sgn.cbridge.v1.CbrConfig|undefined} value
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
*/
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.setCbrConfig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetAllConfigsResponse} returns this
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.clearCbrConfig = function() {
  return this.setCbrConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetAllConfigsResponse.prototype.hasCbrConfig = function() {
  return googleProtobuf.Message.getField(this, 3) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chainId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest;
  return proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChainId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 chain_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.prototype.getChainId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainRequest.prototype.setChainId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ExtendedToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ExtendedToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ExtendedToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = msg.getToken()) && query_pb$1.Token.toObject(includeInstance, f),
    delayThreshold: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    epochVolumeCaps: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    minSend: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    maxSend: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    minAdd: googleProtobuf.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ExtendedToken}
 */
proto.sgn.gateway.v1.ExtendedToken.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ExtendedToken;
  return proto.sgn.gateway.v1.ExtendedToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ExtendedToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ExtendedToken}
 */
proto.sgn.gateway.v1.ExtendedToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new query_pb$1.Token;
      reader.readMessage(value,query_pb$1.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelayThreshold(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochVolumeCaps(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinSend(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxSend(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinAdd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ExtendedToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ExtendedToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ExtendedToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      query_pb$1.Token.serializeBinaryToWriter
    );
  }
  f = message.getDelayThreshold();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEpochVolumeCaps();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMinSend();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaxSend();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMinAdd();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional sgn.cbridge.v1.Token token = 1;
 * @return {?proto.sgn.cbridge.v1.Token}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getToken = function() {
  return /** @type{?proto.sgn.cbridge.v1.Token} */ (
    googleProtobuf.Message.getWrapperField(this, query_pb$1.Token, 1));
};


/**
 * @param {?proto.sgn.cbridge.v1.Token|undefined} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
*/
proto.sgn.gateway.v1.ExtendedToken.prototype.setToken = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.clearToken = function() {
  return this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.hasToken = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string delay_threshold = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getDelayThreshold = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.setDelayThreshold = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string epoch_volume_caps = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getEpochVolumeCaps = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.setEpochVolumeCaps = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string min_send = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getMinSend = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.setMinSend = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string max_send = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getMaxSend = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.setMaxSend = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string min_add = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.getMinAdd = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ExtendedToken} returns this
 */
proto.sgn.gateway.v1.ExtendedToken.prototype.setMinAdd = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.repeatedFields_ = [5];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    delayPeriod: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    epochLength: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    nativeWrap: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    tokensList: googleProtobuf.Message.toObjectList(msg.getTokensList(),
    proto.sgn.gateway.v1.ExtendedToken.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse;
  return proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelayPeriod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEpochLength(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNativeWrap(value);
      break;
    case 5:
      var value = new proto.sgn.gateway.v1.ExtendedToken;
      reader.readMessage(value,proto.sgn.gateway.v1.ExtendedToken.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getDelayPeriod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEpochLength();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNativeWrap();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.sgn.gateway.v1.ExtendedToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
*/
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional string delay_period = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.getDelayPeriod = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.setDelayPeriod = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string epoch_length = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.getEpochLength = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.setEpochLength = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string native_wrap = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.getNativeWrap = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.setNativeWrap = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated ExtendedToken tokens = 5;
 * @return {!Array<!proto.sgn.gateway.v1.ExtendedToken>}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.ExtendedToken>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.ExtendedToken, 5));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.ExtendedToken>} value
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
*/
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.setTokensList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.sgn.gateway.v1.ExtendedToken=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.ExtendedToken}
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.addTokens = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.sgn.gateway.v1.ExtendedToken, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse} returns this
 */
proto.sgn.gateway.v1.GetCbrConfigsOnChainResponse.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.RetentionRewardsEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    eventStartTime: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    eventEndTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    wrapper: (f = msg.getWrapper()) && proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.toObject(includeInstance, f),
    eventPromoImgUrl: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    eventFaqLinkUrl: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    eventRewardsTooltip: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    eventDescription: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    eventTitle: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
    eventMaxRewardCap: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    soFarSumReward: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.RetentionRewardsEvent;
  return proto.sgn.gateway.v1.RetentionRewardsEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventEndTime(value);
      break;
    case 4:
      var value = new proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper;
      reader.readMessage(value,proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.deserializeBinaryFromReader);
      msg.setWrapper(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventPromoImgUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventFaqLinkUrl(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventRewardsTooltip(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventDescription(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventTitle(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEventMaxRewardCap(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoFarSumReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.RetentionRewardsEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventStartTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEventEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getWrapper();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.serializeBinaryToWriter
    );
  }
  f = message.getEventPromoImgUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEventFaqLinkUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEventRewardsTooltip();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEventDescription();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getEventTitle();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEventMaxRewardCap();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getSoFarSumReward();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};


/**
 * optional uint64 event_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 event_start_time = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventStartTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventStartTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 event_end_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional RetentionRewardsEventLevelConfigWrapper wrapper = 4;
 * @return {?proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getWrapper = function() {
  return /** @type{?proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper, 4));
};


/**
 * @param {?proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper|undefined} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
*/
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setWrapper = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.clearWrapper = function() {
  return this.setWrapper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.hasWrapper = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional string event_promo_img_url = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventPromoImgUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventPromoImgUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string event_faq_link_url = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventFaqLinkUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventFaqLinkUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event_rewards_tooltip = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventRewardsTooltip = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventRewardsTooltip = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string event_description = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string event_title = 9;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 9, value);
};


/**
 * optional double event_max_reward_cap = 10;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getEventMaxRewardCap = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setEventMaxRewardCap = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double so_far_sum_reward = 11;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.getSoFarSumReward = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEvent} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEvent.prototype.setSoFarSumReward = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 11, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    levelConfigMap: (f = msg.getLevelConfigMap()) ? f.toObject(includeInstance, proto.sgn.gateway.v1.RetentionRewardsLevelConfig.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper;
  return proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getLevelConfigMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.gateway.v1.RetentionRewardsLevelConfig.deserializeBinaryFromReader, "", new proto.sgn.gateway.v1.RetentionRewardsLevelConfig());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevelConfigMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.gateway.v1.RetentionRewardsLevelConfig.serializeBinaryToWriter);
  }
};


/**
 * map<string, RetentionRewardsLevelConfig> level_config = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.gateway.v1.RetentionRewardsLevelConfig>}
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.prototype.getLevelConfigMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.gateway.v1.RetentionRewardsLevelConfig>} */ (
      googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.sgn.gateway.v1.RetentionRewardsLevelConfig));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsEventLevelConfigWrapper.prototype.clearLevelConfigMap = function() {
  this.getLevelConfigMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.RetentionRewardsLevelConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.toObject = function(includeInstance, msg) {
  var obj = {
    maxReward: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    maxTransferVolume: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.RetentionRewardsLevelConfig;
  return proto.sgn.gateway.v1.RetentionRewardsLevelConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxReward(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxTransferVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.RetentionRewardsLevelConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxReward();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMaxTransferVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional string max_reward = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.getMaxReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.setMaxReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double max_transfer_volume = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.getMaxTransferVolume = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.RetentionRewardsLevelConfig} returns this
 */
proto.sgn.gateway.v1.RetentionRewardsLevelConfig.prototype.setMaxTransferVolume = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest;
  return proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    eventEndTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    maxReward: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    maxTransferVolume: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    currentReward: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    celrUsdPrice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    claimTime: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f),
    eventPromoImgUrl: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
    eventFaqLinkUrl: googleProtobuf.Message.getFieldWithDefault(msg, 11, ""),
    eventRewardsTooltip: googleProtobuf.Message.getFieldWithDefault(msg, 12, ""),
    eventDescription: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
    eventTitle: googleProtobuf.Message.getFieldWithDefault(msg, 14, ""),
    eventMaxRewardCap: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 15, 0.0),
    soFarSumReward: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 16, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse;
  return proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventEndTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxReward(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxTransferVolume(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentReward(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCelrUsdPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setClaimTime(value);
      break;
    case 9:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventPromoImgUrl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventFaqLinkUrl(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventRewardsTooltip(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventDescription(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventTitle(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEventMaxRewardCap(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoFarSumReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEventEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getMaxReward();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMaxTransferVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurrentReward();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCelrUsdPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getClaimTime();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getEventPromoImgUrl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEventFaqLinkUrl();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getEventRewardsTooltip();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEventDescription();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEventTitle();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEventMaxRewardCap();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getSoFarSumReward();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 event_end_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string max_reward = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getMaxReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setMaxReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double max_transfer_volume = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getMaxTransferVolume = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setMaxTransferVolume = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional string current_reward = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getCurrentReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setCurrentReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional double celr_usd_price = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getCelrUsdPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setCelrUsdPrice = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional uint64 claim_time = 8;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getClaimTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setClaimTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 8, value);
};


/**
 * optional sgn.common.v1.Signature signature = 9;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 9));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 9) != null;
};


/**
 * optional string event_promo_img_url = 10;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventPromoImgUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventPromoImgUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string event_faq_link_url = 11;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventFaqLinkUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventFaqLinkUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string event_rewards_tooltip = 12;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventRewardsTooltip = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventRewardsTooltip = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string event_description = 13;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string event_title = 14;
 * @return {string}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 14, value);
};


/**
 * optional double event_max_reward_cap = 15;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getEventMaxRewardCap = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 15, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setEventMaxRewardCap = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional double so_far_sum_reward = 16;
 * @return {number}
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.getSoFarSumReward = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 16, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetRetentionRewardsInfoResponse.prototype.setSoFarSumReward = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 16, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimRetentionRewardsRequest;
  return proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsRequest} returns this
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    currentReward: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimRetentionRewardsResponse;
  return proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentReward(value);
      break;
    case 4:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
*/
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string current_reward = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.getCurrentReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.setCurrentReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sgn.common.v1.Signature signature = 4;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 4));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
*/
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimRetentionRewardsResponse} returns this
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimRetentionRewardsResponse.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest;
  return proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankRequest.serializeBinaryToWriter = function(message, writer) {
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    ranksList: googleProtobuf.Message.toObjectList(msg.getRanksList(),
    proto.sgn.gateway.v1.IncentiveCampaignRank.toObject, includeInstance),
    updateTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse;
  return proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.IncentiveCampaignRank;
      reader.readMessage(value,proto.sgn.gateway.v1.IncentiveCampaignRank.deserializeBinaryFromReader);
      msg.addRanks(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getRanksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.IncentiveCampaignRank.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} returns this
*/
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated IncentiveCampaignRank ranks = 2;
 * @return {!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.getRanksList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.IncentiveCampaignRank, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} returns this
*/
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.setRanksList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.IncentiveCampaignRank=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.addRanks = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.IncentiveCampaignRank, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.clearRanksList = function() {
  return this.setRanksList([]);
};


/**
 * optional uint64 update_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.getUpdateTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignCelrRankResponse.prototype.setUpdateTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest;
  return proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankRequest.serializeBinaryToWriter = function(message, writer) {
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    ranksList: googleProtobuf.Message.toObjectList(msg.getRanksList(),
    proto.sgn.gateway.v1.IncentiveCampaignRank.toObject, includeInstance),
    updateTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse;
  return proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.IncentiveCampaignRank;
      reader.readMessage(value,proto.sgn.gateway.v1.IncentiveCampaignRank.deserializeBinaryFromReader);
      msg.addRanks(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdateTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getRanksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.IncentiveCampaignRank.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} returns this
*/
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated IncentiveCampaignRank ranks = 2;
 * @return {!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.getRanksList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.IncentiveCampaignRank, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.IncentiveCampaignRank>} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} returns this
*/
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.setRanksList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.IncentiveCampaignRank=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.addRanks = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.IncentiveCampaignRank, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.clearRanksList = function() {
  return this.setRanksList([]);
};


/**
 * optional uint64 update_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.getUpdateTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse} returns this
 */
proto.sgn.gateway.v1.GetIncentiveCampaignBnbRankResponse.prototype.setUpdateTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest;
  return proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest} returns this
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eligible: googleProtobuf.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse;
  return proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEligible(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEligible();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} returns this
*/
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} returns this
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional bool eligible = 2;
 * @return {boolean}
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.getEligible = function() {
  return /** @type {boolean} */ (googleProtobuf.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse} returns this
 */
proto.sgn.gateway.v1.InIncentiveCampaignBnbWhiteListResponse.prototype.setEligible = function(value) {
  return googleProtobuf.Message.setProto3BooleanField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.IncentiveCampaignRank.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.IncentiveCampaignRank} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    rank: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    volume: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.IncentiveCampaignRank;
  return proto.sgn.gateway.v1.IncentiveCampaignRank.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.IncentiveCampaignRank} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRank(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVolume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.IncentiveCampaignRank.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.IncentiveCampaignRank} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRank();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank} returns this
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 rank = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.getRank = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank} returns this
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.setRank = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double volume = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.getVolume = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.IncentiveCampaignRank} returns this
 */
proto.sgn.gateway.v1.IncentiveCampaignRank.prototype.setVolume = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.FeeRebateEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.FeeRebateEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    eventStartTime: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    eventEndTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    wrapper: (f = msg.getWrapper()) && proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.toObject(includeInstance, f),
    eventMaxRewardCap: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    soFarSumReward: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent}
 */
proto.sgn.gateway.v1.FeeRebateEvent.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.FeeRebateEvent;
  return proto.sgn.gateway.v1.FeeRebateEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.FeeRebateEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent}
 */
proto.sgn.gateway.v1.FeeRebateEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventEndTime(value);
      break;
    case 4:
      var value = new proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper;
      reader.readMessage(value,proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.deserializeBinaryFromReader);
      msg.setWrapper(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEventMaxRewardCap(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoFarSumReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.FeeRebateEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.FeeRebateEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventStartTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEventEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getWrapper();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.serializeBinaryToWriter
    );
  }
  f = message.getEventMaxRewardCap();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getSoFarSumReward();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
};


/**
 * optional uint64 event_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 event_start_time = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getEventStartTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setEventStartTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 event_end_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getEventEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setEventEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional FeeRebateEventLevelConfigWrapper wrapper = 4;
 * @return {?proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getWrapper = function() {
  return /** @type{?proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper, 4));
};


/**
 * @param {?proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper|undefined} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
*/
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setWrapper = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.clearWrapper = function() {
  return this.setWrapper(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.hasWrapper = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};


/**
 * optional double event_max_reward_cap = 5;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getEventMaxRewardCap = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setEventMaxRewardCap = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double so_far_sum_reward = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.getSoFarSumReward = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEvent} returns this
 */
proto.sgn.gateway.v1.FeeRebateEvent.prototype.setSoFarSumReward = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    levelDivisionLowerBoundList: (f = googleProtobuf.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    levelConfigMap: (f = msg.getLevelConfigMap()) ? f.toObject(includeInstance, proto.sgn.gateway.v1.FeeRebateLevelConfig.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper;
  return proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLevelDivisionLowerBound(values[i]);
      }
      break;
    case 2:
      var value = msg.getLevelConfigMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.gateway.v1.FeeRebateLevelConfig.deserializeBinaryFromReader, "", new proto.sgn.gateway.v1.FeeRebateLevelConfig());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLevelDivisionLowerBoundList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getLevelConfigMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.gateway.v1.FeeRebateLevelConfig.serializeBinaryToWriter);
  }
};


/**
 * repeated double level_division_lower_bound = 1;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.getLevelDivisionLowerBoundList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} returns this
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.setLevelDivisionLowerBoundList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} returns this
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.addLevelDivisionLowerBound = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} returns this
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.clearLevelDivisionLowerBoundList = function() {
  return this.setLevelDivisionLowerBoundList([]);
};


/**
 * map<string, FeeRebateLevelConfig> level_config = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.gateway.v1.FeeRebateLevelConfig>}
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.getLevelConfigMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.gateway.v1.FeeRebateLevelConfig>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.sgn.gateway.v1.FeeRebateLevelConfig));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper} returns this
 */
proto.sgn.gateway.v1.FeeRebateEventLevelConfigWrapper.prototype.clearLevelConfigMap = function() {
  this.getLevelConfigMap().clear();
  return this;};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.FeeRebateLevelConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.FeeRebateLevelConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.toObject = function(includeInstance, msg) {
  var obj = {
    rebatePortion: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    maxReward: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.FeeRebateLevelConfig}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.FeeRebateLevelConfig;
  return proto.sgn.gateway.v1.FeeRebateLevelConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.FeeRebateLevelConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.FeeRebateLevelConfig}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRebatePortion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.FeeRebateLevelConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.FeeRebateLevelConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRebatePortion();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getMaxReward();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional double rebate_portion = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.getRebatePortion = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.FeeRebateLevelConfig} returns this
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.setRebatePortion = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional string max_reward = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.getMaxReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.FeeRebateLevelConfig} returns this
 */
proto.sgn.gateway.v1.FeeRebateLevelConfig.prototype.setMaxReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetFeeRebateInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetFeeRebateInfoRequest;
  return proto.sgn.gateway.v1.GetFeeRebateInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetFeeRebateInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetFeeRebateInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    eventEndTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    rebatePortion: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    reward: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    celrUsdPrice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    claimTime: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f),
    eventMaxRewardCap: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    soFarSumReward: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetFeeRebateInfoResponse;
  return proto.sgn.gateway.v1.GetFeeRebateInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventEndTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRebatePortion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCelrUsdPrice(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setClaimTime(value);
      break;
    case 8:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEventMaxRewardCap(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoFarSumReward(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetFeeRebateInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEventEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getRebatePortion();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCelrUsdPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getClaimTime();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
  f = message.getEventMaxRewardCap();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getSoFarSumReward();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 event_end_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getEventEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setEventEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double rebate_portion = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getRebatePortion = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setRebatePortion = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string reward = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double celr_usd_price = 6;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getCelrUsdPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setCelrUsdPrice = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional uint64 claim_time = 7;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getClaimTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setClaimTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 7, value);
};


/**
 * optional sgn.common.v1.Signature signature = 8;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 8));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};


/**
 * optional double event_max_reward_cap = 9;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getEventMaxRewardCap = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setEventMaxRewardCap = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double so_far_sum_reward = 10;
 * @return {number}
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.getSoFarSumReward = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.GetFeeRebateInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetFeeRebateInfoResponse.prototype.setSoFarSumReward = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 10, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimFeeRebateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateRequest}
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimFeeRebateRequest;
  return proto.sgn.gateway.v1.ClaimFeeRebateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateRequest}
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimFeeRebateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateRequest} returns this
 */
proto.sgn.gateway.v1.ClaimFeeRebateRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimFeeRebateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    reward: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimFeeRebateResponse;
  return proto.sgn.gateway.v1.ClaimFeeRebateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReward(value);
      break;
    case 4:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimFeeRebateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
*/
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string reward = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.getReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.setReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sgn.common.v1.Signature signature = 4;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 4));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
*/
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimFeeRebateResponse} returns this
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimFeeRebateResponse.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.BscCampaignEventConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.BscCampaignEventConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    eventStartTime: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    eventEndTime: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    eventPromoImgUrl: googleProtobuf.Message.getFieldWithDefault(msg, 4, ""),
    eventFaqLinkUrl: googleProtobuf.Message.getFieldWithDefault(msg, 5, ""),
    eventRewardsTooltip: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    eventDescription: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    eventTitle: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    wbnbAddr: googleProtobuf.Message.getFieldWithDefault(msg, 9, ""),
    rewardContractAddr: googleProtobuf.Message.getFieldWithDefault(msg, 10, ""),
    eventMaxRewardCap: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 11, 0.0),
    soFarSumReward: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    maxReward: googleProtobuf.Message.getFieldWithDefault(msg, 13, ""),
    maxTransferVolume: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0),
    transferWhiteList: (f = msg.getTransferWhiteList()) && proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.BscCampaignEventConfig;
  return proto.sgn.gateway.v1.BscCampaignEventConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.BscCampaignEventConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventStartTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventEndTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventPromoImgUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventFaqLinkUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventRewardsTooltip(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWbnbAddr(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRewardContractAddr(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setEventMaxRewardCap(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSoFarSumReward(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxReward(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMaxTransferVolume(value);
      break;
    case 15:
      var value = new proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper;
      reader.readMessage(value,proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.deserializeBinaryFromReader);
      msg.setTransferWhiteList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.BscCampaignEventConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.BscCampaignEventConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getEventStartTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getEventEndTime();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getEventPromoImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEventFaqLinkUrl();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEventRewardsTooltip();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEventDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getEventTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWbnbAddr();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRewardContractAddr();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEventMaxRewardCap();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getSoFarSumReward();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getMaxReward();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMaxTransferVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getTransferWhiteList();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 event_id = 1;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 event_start_time = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventStartTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventStartTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 event_end_time = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventEndTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventEndTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string event_promo_img_url = 4;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventPromoImgUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventPromoImgUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string event_faq_link_url = 5;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventFaqLinkUrl = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventFaqLinkUrl = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string event_rewards_tooltip = 6;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventRewardsTooltip = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventRewardsTooltip = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event_description = 7;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventDescription = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventDescription = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string event_title = 8;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventTitle = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventTitle = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string wbnb_addr = 9;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getWbnbAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setWbnbAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string reward_contract_addr = 10;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getRewardContractAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setRewardContractAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 10, value);
};


/**
 * optional double event_max_reward_cap = 11;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getEventMaxRewardCap = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setEventMaxRewardCap = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double so_far_sum_reward = 12;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getSoFarSumReward = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setSoFarSumReward = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional string max_reward = 13;
 * @return {string}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getMaxReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setMaxReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 13, value);
};


/**
 * optional double max_transfer_volume = 14;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getMaxTransferVolume = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setMaxTransferVolume = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional BscCampaignTransferWhiteListWrapper transfer_white_list = 15;
 * @return {?proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.getTransferWhiteList = function() {
  return /** @type{?proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper, 15));
};


/**
 * @param {?proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper|undefined} value
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
*/
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.setTransferWhiteList = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.BscCampaignEventConfig} returns this
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.clearTransferWhiteList = function() {
  return this.setTransferWhiteList(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.BscCampaignEventConfig.prototype.hasTransferWhiteList = function() {
  return googleProtobuf.Message.getField(this, 15) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferWhiteListMap: (f = msg.getTransferWhiteListMap()) ? f.toObject(includeInstance, proto.sgn.gateway.v1.BscCampaignTransferWhiteList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper;
  return proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getTransferWhiteListMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.gateway.v1.BscCampaignTransferWhiteList.deserializeBinaryFromReader, "", new proto.sgn.gateway.v1.BscCampaignTransferWhiteList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferWhiteListMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.gateway.v1.BscCampaignTransferWhiteList.serializeBinaryToWriter);
  }
};


/**
 * map<string, BscCampaignTransferWhiteList> transfer_white_list = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.gateway.v1.BscCampaignTransferWhiteList>}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.prototype.getTransferWhiteListMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.gateway.v1.BscCampaignTransferWhiteList>} */ (
      googleProtobuf.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.sgn.gateway.v1.BscCampaignTransferWhiteList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper} returns this
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteListWrapper.prototype.clearTransferWhiteListMap = function() {
  this.getTransferWhiteListMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.repeatedFields_ = [1];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.BscCampaignTransferWhiteList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.toObject = function(includeInstance, msg) {
  var f, obj = {
    chainIdsList: (f = googleProtobuf.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.BscCampaignTransferWhiteList;
  return proto.sgn.gateway.v1.BscCampaignTransferWhiteList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint64() : [reader.readUint64()]);
      for (var i = 0; i < values.length; i++) {
        msg.addChainIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.BscCampaignTransferWhiteList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChainIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 chain_ids = 1;
 * @return {!Array<number>}
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.getChainIdsList = function() {
  return /** @type {!Array<number>} */ (googleProtobuf.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} returns this
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.setChainIdsList = function(value) {
  return googleProtobuf.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} returns this
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.addChainIds = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.BscCampaignTransferWhiteList} returns this
 */
proto.sgn.gateway.v1.BscCampaignTransferWhiteList.prototype.clearChainIdsList = function() {
  return this.setChainIdsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetBscCampaignInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetBscCampaignInfoRequest;
  return proto.sgn.gateway.v1.GetBscCampaignInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetBscCampaignInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoRequest} returns this
 */
proto.sgn.gateway.v1.GetBscCampaignInfoRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.BscCampaignInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.BscCampaignInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventConfig: (f = msg.getEventConfig()) && proto.sgn.gateway.v1.BscCampaignEventConfig.toObject(includeInstance, f),
    currentTransferVolume: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    wbnbUsdPrice: googleProtobuf.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    claimTime: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo}
 */
proto.sgn.gateway.v1.BscCampaignInfo.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.BscCampaignInfo;
  return proto.sgn.gateway.v1.BscCampaignInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.BscCampaignInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo}
 */
proto.sgn.gateway.v1.BscCampaignInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.BscCampaignEventConfig;
      reader.readMessage(value,proto.sgn.gateway.v1.BscCampaignEventConfig.deserializeBinaryFromReader);
      msg.setEventConfig(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurrentTransferVolume(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setWbnbUsdPrice(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setClaimTime(value);
      break;
    case 5:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.BscCampaignInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.BscCampaignInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.BscCampaignInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.BscCampaignEventConfig.serializeBinaryToWriter
    );
  }
  f = message.getCurrentTransferVolume();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getWbnbUsdPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getClaimTime();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional BscCampaignEventConfig event_config = 1;
 * @return {?proto.sgn.gateway.v1.BscCampaignEventConfig}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.getEventConfig = function() {
  return /** @type{?proto.sgn.gateway.v1.BscCampaignEventConfig} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.BscCampaignEventConfig, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.BscCampaignEventConfig|undefined} value
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
*/
proto.sgn.gateway.v1.BscCampaignInfo.prototype.setEventConfig = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.clearEventConfig = function() {
  return this.setEventConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.hasEventConfig = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional double current_transfer_volume = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.getCurrentTransferVolume = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.setCurrentTransferVolume = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double wbnb_usd_price = 3;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.getWbnbUsdPrice = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.setWbnbUsdPrice = function(value) {
  return googleProtobuf.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional uint64 claim_time = 4;
 * @return {number}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.getClaimTime = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.setClaimTime = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional sgn.common.v1.Signature signature = 5;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 5));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
*/
proto.sgn.gateway.v1.BscCampaignInfo.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo} returns this
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.BscCampaignInfo.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.repeatedFields_ = [2];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetBscCampaignInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    infoList: googleProtobuf.Message.toObjectList(msg.getInfoList(),
    proto.sgn.gateway.v1.BscCampaignInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetBscCampaignInfoResponse;
  return proto.sgn.gateway.v1.GetBscCampaignInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = new proto.sgn.gateway.v1.BscCampaignInfo;
      reader.readMessage(value,proto.sgn.gateway.v1.BscCampaignInfo.deserializeBinaryFromReader);
      msg.addInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetBscCampaignInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.sgn.gateway.v1.BscCampaignInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * repeated BscCampaignInfo info = 2;
 * @return {!Array<!proto.sgn.gateway.v1.BscCampaignInfo>}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.getInfoList = function() {
  return /** @type{!Array<!proto.sgn.gateway.v1.BscCampaignInfo>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.sgn.gateway.v1.BscCampaignInfo, 2));
};


/**
 * @param {!Array<!proto.sgn.gateway.v1.BscCampaignInfo>} value
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} returns this
*/
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.setInfoList = function(value) {
  return googleProtobuf.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.sgn.gateway.v1.BscCampaignInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.BscCampaignInfo}
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.addInfo = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.sgn.gateway.v1.BscCampaignInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetBscCampaignInfoResponse} returns this
 */
proto.sgn.gateway.v1.GetBscCampaignInfoResponse.prototype.clearInfoList = function() {
  return this.setInfoList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.toObject = function(includeInstance, msg) {
  var obj = {
    addr: googleProtobuf.Message.getFieldWithDefault(msg, 1, ""),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest;
  return proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddr();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string addr = 1;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.getAddr = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.setAddr = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardRequest.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    eventId: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    currentReward: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    signature: (f = msg.getSignature()) && common_pb.Signature.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse;
  return proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentReward(value);
      break;
    case 4:
      var value = new common_pb.Signature;
      reader.readMessage(value,common_pb.Signature.deserializeBinaryFromReader);
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getEventId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCurrentReward();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Signature.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
*/
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint64 event_id = 2;
 * @return {number}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.getEventId = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.setEventId = function(value) {
  return googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string current_reward = 3;
 * @return {string}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.getCurrentReward = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.setCurrentReward = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sgn.common.v1.Signature signature = 4;
 * @return {?proto.sgn.common.v1.Signature}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.getSignature = function() {
  return /** @type{?proto.sgn.common.v1.Signature} */ (
    googleProtobuf.Message.getWrapperField(this, common_pb.Signature, 4));
};


/**
 * @param {?proto.sgn.common.v1.Signature|undefined} value
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
*/
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.setSignature = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse} returns this
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.clearSignature = function() {
  return this.setSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.ClaimGetBscCampaignRewardResponse.prototype.hasSignature = function() {
  return googleProtobuf.Message.getField(this, 4) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest;
  return proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeRequest.serializeBinaryToWriter = function(message, writer) {
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    err: (f = msg.getErr()) && proto.sgn.gateway.v1.ErrMsg.toObject(includeInstance, f),
    reportsMap: (f = msg.getReportsMap()) ? f.toObject(includeInstance, proto.sgn.health.v1.SgnAnalyticsReport.toObject) : [],
    problematicAddrsList: (f = googleProtobuf.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse;
  return proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.sgn.gateway.v1.ErrMsg;
      reader.readMessage(value,proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader);
      msg.setErr(value);
      break;
    case 2:
      var value = msg.getReportsMap();
      reader.readMessage(value, function(message, reader) {
        googleProtobuf.Map.deserializeBinary(message, reader, googleProtobuf.BinaryReader.prototype.readString, googleProtobuf.BinaryReader.prototype.readMessage, proto.sgn.health.v1.SgnAnalyticsReport.deserializeBinaryFromReader, "", new proto.sgn.health.v1.SgnAnalyticsReport());
         });
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addProblematicAddrs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErr();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter
    );
  }
  f = message.getReportsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, googleProtobuf.BinaryWriter.prototype.writeString, googleProtobuf.BinaryWriter.prototype.writeMessage, proto.sgn.health.v1.SgnAnalyticsReport.serializeBinaryToWriter);
  }
  f = message.getProblematicAddrsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional ErrMsg err = 1;
 * @return {?proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.getErr = function() {
  return /** @type{?proto.sgn.gateway.v1.ErrMsg} */ (
    googleProtobuf.Message.getWrapperField(this, proto.sgn.gateway.v1.ErrMsg, 1));
};


/**
 * @param {?proto.sgn.gateway.v1.ErrMsg|undefined} value
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
*/
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.setErr = function(value) {
  return googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.clearErr = function() {
  return this.setErr(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.hasErr = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * map<string, sgn.health.v1.SgnAnalyticsReport> reports = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.sgn.health.v1.SgnAnalyticsReport>}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.getReportsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.sgn.health.v1.SgnAnalyticsReport>} */ (
      googleProtobuf.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.sgn.health.v1.SgnAnalyticsReport));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.clearReportsMap = function() {
  this.getReportsMap().clear();
  return this;};


/**
 * repeated string problematic_addrs = 3;
 * @return {!Array<string>}
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.getProblematicAddrsList = function() {
  return /** @type {!Array<string>} */ (googleProtobuf.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.setProblematicAddrsList = function(value) {
  return googleProtobuf.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.addProblematicAddrs = function(value, opt_index) {
  return googleProtobuf.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse} returns this
 */
proto.sgn.gateway.v1.GetCurrentBlockNumberByNodeResponse.prototype.clearProblematicAddrsList = function() {
  return this.setProblematicAddrsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.sgn.gateway.v1.ErrMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.sgn.gateway.v1.ErrMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.sgn.gateway.v1.ErrMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ErrMsg.toObject = function(includeInstance, msg) {
  var obj = {
    code: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    msg: googleProtobuf.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ErrMsg.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.sgn.gateway.v1.ErrMsg;
  return proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.sgn.gateway.v1.ErrMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.sgn.gateway.v1.ErrMsg}
 */
proto.sgn.gateway.v1.ErrMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.sgn.gateway.v1.ErrCode} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.sgn.gateway.v1.ErrMsg.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.sgn.gateway.v1.ErrMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.sgn.gateway.v1.ErrMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ErrCode code = 1;
 * @return {!proto.sgn.gateway.v1.ErrCode}
 */
proto.sgn.gateway.v1.ErrMsg.prototype.getCode = function() {
  return /** @type {!proto.sgn.gateway.v1.ErrCode} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.sgn.gateway.v1.ErrCode} value
 * @return {!proto.sgn.gateway.v1.ErrMsg} returns this
 */
proto.sgn.gateway.v1.ErrMsg.prototype.setCode = function(value) {
  return googleProtobuf.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.sgn.gateway.v1.ErrMsg.prototype.getMsg = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.sgn.gateway.v1.ErrMsg} returns this
 */
proto.sgn.gateway.v1.ErrMsg.prototype.setMsg = function(value) {
  return googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.sgn.gateway.v1.LPType = {
  LP_TYPE_UNKNOWN: 0,
  LP_TYPE_ADD: 1,
  LP_TYPE_REMOVE: 2
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.CSType = {
  CT_UNKNOWN: 0,
  CT_TX: 1,
  CT_LP_ADD: 2,
  CT_LP_RM: 3,
  CT_DROP_GAS: 4
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.CSOperation = {
  CA_UNKNOWN: 0,
  CA_NORMAL: 1,
  CA_WAITING: 2,
  CA_REPORT: 3,
  CA_USE_RESYNC_TOOL: 4,
  CA_USE_RESIGN_TOOL: 5,
  CA_USE_RESUMBIT_TOOL: 6,
  CA_MORE_INFO_NEEDED: 7,
  CA_CS_TOOL: 8
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.UserCaseStatus = {
  CC_UNKNOWN: 0,
  CC_TRANSFER_NO_HISTORY: 1,
  CC_TRANSFER_SUBMITTING: 2,
  CC_TRANSFER_WAITING_FOR_SGN_CONFIRMATION: 3,
  CC_TRANSFER_WAITING_FOR_FUND_RELEASE: 4,
  CC_TRANSFER_REQUESTING_REFUND: 5,
  CC_TRANSFER_CONFIRMING_YOUR_REFUND: 6,
  CC_ADD_NO_HISTORY: 7,
  CC_ADD_SUBMITTING: 8,
  CC_ADD_WAITING_FOR_SGN: 9,
  CC_WAITING_FOR_LP: 10,
  CC_WITHDRAW_SUBMITTING: 11,
  CC_WITHDRAW_WAITING_FOR_SGN: 12,
  CC_DROP_GAS_FAIL: 13,
  CC_DROP_GAS_SUCCESS: 14,
  CC_DROP_GAS_NO_RECORD: 15
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.WithdrawMethodType = {
  WD_METHOD_TYPE_UNDEFINED: 0,
  WD_METHOD_TYPE_ONE_RM: 1,
  WD_METHOD_TYPE_ALL_IN_ONE: 2,
  WD_METHOD_TYPE_STAKING_CLAIM: 3
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.LpActionType = {
  LAT_UNKNOWN: 0,
  LAT_ADD: 1,
  LAT_REMOVE: 2,
  LAT_AGGREGATE_REMOVE: 3
};

/**
 * @enum {number}
 */
proto.sgn.gateway.v1.ErrCode = {
  ERROR_CODE_UNDEFINED: 0,
  ERROR_CODE_COMMON: 500,
  ERROR_NO_TOKEN_ON_DST_CHAIN: 1001,
  ERROR_NO_TOKEN_ON_SRC_CHAIN: 1002,
  ERROR_INIT_WITHDRAW_FAILED: 1003,
  ERROR_CODE_NO_ENOUGH_TOKEN_ON_DST_CHAIN: 1004
};

goog.object.extend(exports, proto.sgn.gateway.v1);
});

/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var n;function aa(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ba="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value);};function ca(a){a=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof commonjsGlobal&&commonjsGlobal,a];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var r$1=ca(commonjsGlobal);
function t(){t=function(){};r$1.Symbol||(r$1.Symbol=da);}function ea(a,b){this.a=a;ba(this,"description",{configurable:!0,writable:!0,value:b});}ea.prototype.toString=function(){return this.a};var da=function(){function a(c){if(this instanceof a)throw new TypeError("Symbol is not a constructor");return new ea("jscomp_symbol_"+(c||"")+"_"+b++,c)}var b=0;return a}();
function u(){t();var a=r$1.Symbol.iterator;a||(a=r$1.Symbol.iterator=r$1.Symbol("Symbol.iterator"));"function"!=typeof Array.prototype[a]&&ba(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return fa(aa(this))}});u=function(){};}function fa(a){u();a={next:a};a[r$1.Symbol.iterator]=function(){return this};return a}function ha(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:aa(a)}}
var ia="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ja;if("function"==typeof Object.setPrototypeOf)ja=Object.setPrototypeOf;else {var ka;a:{var la={V:!0},ma={};try{ma.__proto__=la;ka=ma.V;break a}catch(a){}ka=!1;}ja=ka?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null;}var na=ja;
function oa(a,b){a.prototype=ia(b.prototype);a.prototype.constructor=a;if(na)na(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d);}else a[c]=b[c];a.O=b.prototype;}
function pa(a,b){u();a instanceof String&&(a+="");var c=0,d={next:function(){if(c<a.length){var f=c++;return {value:b(f,a[f]),done:!1}}d.next=function(){return {done:!0,value:void 0}};return d.next()}};d[Symbol.iterator]=function(){return d};return d}function v(a,b){if(b){var c=r$1;a=a.split(".");for(var d=0;d<a.length-1;d++){var f=a[d];f in c||(c[f]={});c=c[f];}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&ba(c,a,{configurable:!0,writable:!0,value:b});}}
v("Array.prototype.keys",function(a){return a?a:function(){return pa(this,function(b){return b})}});v("Array.prototype.find",function(a){return a?a:function(b,c){a:{var d=this;d instanceof String&&(d=String(d));for(var f=d.length,g=0;g<f;g++){var e=d[g];if(b.call(c,e,g,d)){b=e;break a}}b=void 0;}return b}});v("Object.is",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});
v("Array.prototype.includes",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var f=d.length;c=c||0;for(0>c&&(c=Math.max(c+f,0));c<f;c++){var g=d[c];if(g===b||Object.is(g,b))return !0}return !1}});
v("Promise",function(a){function b(e){this.b=0;this.c=void 0;this.a=[];var h=this.f();try{e(h.resolve,h.reject);}catch(k){h.reject(k);}}function c(){this.a=null;}function d(e){return e instanceof b?e:new b(function(h){h(e);})}if(a)return a;c.prototype.b=function(e){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g();});}this.a.push(e);};var f=r$1.setTimeout;c.prototype.c=function(e){f(e,0);};c.prototype.g=function(){for(;this.a&&this.a.length;){var e=this.a;this.a=[];for(var h=0;h<e.length;++h){var k=
e[h];e[h]=null;try{k();}catch(l){this.f(l);}}}this.a=null;};c.prototype.f=function(e){this.c(function(){throw e;});};b.prototype.f=function(){function e(l){return function(m){k||(k=!0,l.call(h,m));}}var h=this,k=!1;return {resolve:e(this.s),reject:e(this.g)}};b.prototype.s=function(e){if(e===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(e instanceof b)this.v(e);else {a:switch(typeof e){case "object":var h=null!=e;break a;case "function":h=!0;break a;default:h=!1;}h?this.m(e):this.h(e);}};
b.prototype.m=function(e){var h=void 0;try{h=e.then;}catch(k){this.g(k);return}"function"==typeof h?this.w(h,e):this.h(e);};b.prototype.g=function(e){this.i(2,e);};b.prototype.h=function(e){this.i(1,e);};b.prototype.i=function(e,h){if(0!=this.b)throw Error("Cannot settle("+e+", "+h+"): Promise already settled in state"+this.b);this.b=e;this.c=h;this.l();};b.prototype.l=function(){if(null!=this.a){for(var e=0;e<this.a.length;++e)g.b(this.a[e]);this.a=null;}};var g=new c;b.prototype.v=function(e){var h=this.f();
e.F(h.resolve,h.reject);};b.prototype.w=function(e,h){var k=this.f();try{e.call(h,k.resolve,k.reject);}catch(l){k.reject(l);}};b.prototype.then=function(e,h){function k(q,x){return "function"==typeof q?function(z){try{l(q(z));}catch(N){m(N);}}:x}var l,m,p=new b(function(q,x){l=q;m=x;});this.F(k(e,l),k(h,m));return p};b.prototype.catch=function(e){return this.then(void 0,e)};b.prototype.F=function(e,h){function k(){switch(l.b){case 1:e(l.c);break;case 2:h(l.c);break;default:throw Error("Unexpected state: "+
l.b);}}var l=this;null==this.a?g.b(k):this.a.push(k);};b.resolve=d;b.reject=function(e){return new b(function(h,k){k(e);})};b.race=function(e){return new b(function(h,k){for(var l=ha(e),m=l.next();!m.done;m=l.next())d(m.value).F(h,k);})};b.all=function(e){var h=ha(e),k=h.next();return k.done?d([]):new b(function(l,m){function p(z){return function(N){q[z]=N;x--;0==x&&l(q);}}var q=[],x=0;do q.push(void 0),x++,d(k.value).F(p(q.length-1),m),k=h.next();while(!k.done)})};return b});var qa=qa||{},w=commonjsGlobal||self;
function y(a,b){a=a.split(".");b=b||w;for(var c=0;c<a.length;c++)if(b=b[a[c]],null==b)return null;return b}function ra(){}function sa(a){var b=typeof a;return "object"==b&&null!=a||"function"==b}function va(a,b,c){return a.call.apply(a.bind,arguments)}
function wa(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var f=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(f,d);return a.apply(b,f)}}return function(){return a.apply(b,arguments)}}function A(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?A=va:A=wa;return A.apply(null,arguments)}
function B(a,b){function c(){}c.prototype=b.prototype;a.O=b.prototype;a.prototype=new c;a.prototype.constructor=a;}function xa(a){this.a=a||{};}xa.prototype.get=function(a){return this.a[a]};xa.prototype.G=function(){return Object.keys(this.a)};function C(a,b,c,d){this.f=a;this.c=b;this.b=c;this.a=d;}C.prototype.getRequestMessage=function(){return this.f};C.prototype.getMethodDescriptor=function(){return this.c};C.prototype.getMetadata=function(){return this.b};C.prototype.getCallOptions=function(){return this.a};function D(a,b,c,d){c=void 0===c?{}:c;this.c=a;this.a=c;this.b=b;this.f=void 0===d?null:d;}D.prototype.getResponseMessage=function(){return this.c};D.prototype.getMetadata=function(){return this.a};D.prototype.getMethodDescriptor=function(){return this.b};D.prototype.getStatus=function(){return this.f};function E(a,b,c,d,f,g){this.name=a;this.a=b;this.f=c;this.b=d;this.c=f;this.g=g;}function ya(a,b,c){c=void 0===c?{}:c;var d=void 0===d?new xa:d;return new C(b,a,c,d)}n=E.prototype;n.getName=function(){return this.name};n.getMethodType=function(){return this.a};n.getResponseMessageCtor=function(){return this.b};n.getRequestMessageCtor=function(){return this.f};n.getResponseDeserializeFn=function(){return this.g};n.getRequestSerializeFn=function(){return this.c};E.prototype.getRequestSerializeFn=E.prototype.getRequestSerializeFn;
E.prototype.getResponseDeserializeFn=E.prototype.getResponseDeserializeFn;E.prototype.getRequestMessageCtor=E.prototype.getRequestMessageCtor;E.prototype.getResponseMessageCtor=E.prototype.getResponseMessageCtor;E.prototype.getMethodType=E.prototype.getMethodType;E.prototype.getName=E.prototype.getName;function za(a){switch(a){case 200:return 0;case 400:return 3;case 401:return 16;case 403:return 7;case 404:return 5;case 409:return 10;case 412:return 9;case 429:return 8;case 499:return 1;case 500:return 2;case 501:return 12;case 503:return 14;case 504:return 4;default:return 2}}function F(a,b,c){c=void 0===c?{}:c;b=Error.call(this,b);this.message=b.message;"stack"in b&&(this.stack=b.stack);this.code=a;this.metadata=c;}oa(F,Error);F.prototype.name="RpcError";function Aa(a){this.a=a;}Aa.prototype.on=function(a,b){return "data"==a||"error"==a?this:this.a.on(a,b)};Aa.prototype.removeListener=function(a,b){return this.a.removeListener(a,b)};Aa.prototype.cancel=function(){this.a.cancel();};function Ba(a){switch(a){case 0:return "No Error";case 1:return "Access denied to content document";case 2:return "File not found";case 3:return "Firefox silently errored";case 4:return "Application custom error";case 5:return "An exception occurred";case 6:return "Http response at 400 or 500 level";case 7:return "Request was aborted";case 8:return "Request timed out";case 9:return "The resource is not available offline";default:return "Unrecognized error code"}}function G(a){if(Error.captureStackTrace)Error.captureStackTrace(this,G);else {var b=Error().stack;b&&(this.stack=b);}a&&(this.message=String(a));}B(G,Error);G.prototype.name="CustomError";function Ca(a,b){a=a.split("%s");for(var c="",d=a.length-1,f=0;f<d;f++)c+=a[f]+(f<b.length?b[f]:"%s");G.call(this,c+a[d]);}B(Ca,G);Ca.prototype.name="AssertionError";function Da(a,b){throw new Ca("Failure"+(a?": "+a:""),Array.prototype.slice.call(arguments,1));}function Ea(){this.l=null;this.i=[];this.m=0;this.b=Fa;this.f=this.a=this.h=0;this.c=null;this.g=0;}
function Ga(a,b){function c(l){l==Ha?e.h=l:l==H?e.h=l:Ia(e,h,k,"invalid frame byte");e.b=Ja;e.a=0;e.f=0;}function d(l){e.f++;e.a=(e.a<<8)+l;4==e.f&&(e.b=Ka,e.g=0,"undefined"!==typeof Uint8Array?e.c=new Uint8Array(e.a):e.c=Array(e.a),0==e.a&&g());}function f(l){e.c[e.g++]=l;e.g==e.a&&g();}function g(){var l={};l[e.h]=e.c;e.i.push(l);e.b=Fa;}var e=a,h,k=0;for(b instanceof Uint8Array||b instanceof Array?h=b:h=new Uint8Array(b);k<h.length;){switch(e.b){case La:Ia(e,h,k,"stream already broken");break;case Fa:c(h[k]);
break;case Ja:d(h[k]);break;case Ka:f(h[k]);break;default:throw Error("unexpected parser state: "+e.b);}e.m++;k++;}a=e.i;e.i=[];return 0<a.length?a:null}var Fa=0,Ja=1,Ka=2,La=3,Ha=0,H=128;function Ia(a,b,c,d){a.b=La;a.l="The stream is broken @"+a.m+"/"+c+". Error: "+d+". With input:\n"+b;throw Error(a.l);}var Ma=Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b,void 0)}:function(a,b){if("string"===typeof a)return "string"!==typeof b||1!=b.length?-1:a.indexOf(b,0);for(var c=0;c<a.length;c++)if(c in a&&a[c]===b)return c;return -1};var Na=String.prototype.trim?function(a){return a.trim()}:function(a){return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]};function I(a,b){return -1!=a.indexOf(b)}function Oa(a,b){return a<b?-1:a>b?1:0}var J;a:{var Pa=w.navigator;if(Pa){var Qa=Pa.userAgent;if(Qa){J=Qa;break a}}J="";}function Ra(a,b){for(var c in a)b.call(void 0,a[c],c,a);}function Sa(a,b){var c={},d;for(d in a)c[d]=b.call(void 0,a[d],d,a);return c}var Ta="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function Ua(a,b){for(var c,d,f=1;f<arguments.length;f++){d=arguments[f];for(c in d)a[c]=d[c];for(var g=0;g<Ta.length;g++)c=Ta[g],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c]);}}function Va(a){var b=1;a=a.split(":");for(var c=[];0<b&&a.length;)c.push(a.shift()),b--;a.length&&c.push(a.join(":"));return c}function Wa(a){Wa[" "](a);return a}Wa[" "]=ra;function Xa(a){var b=Ya;return Object.prototype.hasOwnProperty.call(b,9)?b[9]:b[9]=a(9)}var Za=I(J,"Opera"),$a=I(J,"Trident")||I(J,"MSIE"),ab=I(J,"Edge"),bb=I(J,"Gecko")&&!(I(J.toLowerCase(),"webkit")&&!I(J,"Edge"))&&!(I(J,"Trident")||I(J,"MSIE"))&&!I(J,"Edge"),cb=I(J.toLowerCase(),"webkit")&&!I(J,"Edge"),db;
a:{var eb="",fb=function(){var a=J;if(bb)return /rv:([^\);]+)(\)|;)/.exec(a);if(ab)return /Edge\/([\d\.]+)/.exec(a);if($a)return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);if(cb)return /WebKit\/(\S+)/.exec(a);if(Za)return /(?:Version)[ \/]?(\S+)/.exec(a)}();fb&&(eb=fb?fb[1]:"");if($a){var gb,hb=w.document;gb=hb?hb.documentMode:void 0;if(null!=gb&&gb>parseFloat(eb)){db=String(gb);break a}}db=eb;}var Ya={};
function ib(){return Xa(function(){for(var a=0,b=Na(String(db)).split("."),c=Na("9").split("."),d=Math.max(b.length,c.length),f=0;0==a&&f<d;f++){var g=b[f]||"",e=c[f]||"";do{g=/(\d*)(\D*)(.*)/.exec(g)||["","","",""];e=/(\d*)(\D*)(.*)/.exec(e)||["","","",""];if(0==g[0].length&&0==e[0].length)break;a=Oa(0==g[1].length?0:parseInt(g[1],10),0==e[1].length?0:parseInt(e[1],10))||Oa(0==g[2].length,0==e[2].length)||Oa(g[2],e[2]);g=g[3];e=e[3];}while(0==a)}return 0<=a})}function jb(){this.K=this.K;}jb.prototype.K=!1;var lb=Object.freeze||function(a){return a};function K$1(a,b){this.type=a;this.a=this.target=b;this.defaultPrevented=!1;}K$1.prototype.b=function(){this.defaultPrevented=!0;};var mb=function(){if(!w.addEventListener||!Object.defineProperty)return !1;var a=!1,b=Object.defineProperty({},"passive",{get:function(){a=!0;}});try{w.addEventListener("test",ra,b),w.removeEventListener("test",ra,b);}catch(c){}return a}();function L(a,b){K$1.call(this,a?a.type:"");this.relatedTarget=this.a=this.target=null;this.button=this.screenY=this.screenX=this.clientY=this.clientX=0;this.key="";this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1;this.pointerId=0;this.pointerType="";this.c=null;if(a){var c=this.type=a.type,d=a.changedTouches&&a.changedTouches.length?a.changedTouches[0]:null;this.target=a.target||a.srcElement;this.a=b;if(b=a.relatedTarget){if(bb){a:{try{Wa(b.nodeName);var f=!0;break a}catch(g){}f=!1;}f||(b=null);}}else "mouseover"==
c?b=a.fromElement:"mouseout"==c&&(b=a.toElement);this.relatedTarget=b;d?(this.clientX=void 0!==d.clientX?d.clientX:d.pageX,this.clientY=void 0!==d.clientY?d.clientY:d.pageY,this.screenX=d.screenX||0,this.screenY=d.screenY||0):(this.clientX=void 0!==a.clientX?a.clientX:a.pageX,this.clientY=void 0!==a.clientY?a.clientY:a.pageY,this.screenX=a.screenX||0,this.screenY=a.screenY||0);this.button=a.button;this.key=a.key||"";this.ctrlKey=a.ctrlKey;this.altKey=a.altKey;this.shiftKey=a.shiftKey;this.metaKey=
a.metaKey;this.pointerId=a.pointerId||0;this.pointerType="string"===typeof a.pointerType?a.pointerType:nb[a.pointerType]||"";this.c=a;a.defaultPrevented&&L.O.b.call(this);}}B(L,K$1);var nb=lb({2:"touch",3:"pen",4:"mouse"});L.prototype.b=function(){L.O.b.call(this);var a=this.c;a.preventDefault?a.preventDefault():a.returnValue=!1;};var ob="closure_listenable_"+(1E6*Math.random()|0);var pb=0;function qb(a,b,c,d,f){this.listener=a;this.proxy=null;this.src=b;this.type=c;this.capture=!!d;this.H=f;this.key=++pb;this.A=this.D=!1;}function rb(a){a.A=!0;a.listener=null;a.proxy=null;a.src=null;a.H=null;}function sb(a){this.src=a;this.a={};this.b=0;}sb.prototype.add=function(a,b,c,d,f){var g=a.toString();a=this.a[g];a||(a=this.a[g]=[],this.b++);var e=tb(a,b,d,f);-1<e?(b=a[e],c||(b.D=!1)):(b=new qb(b,this.src,g,!!d,f),b.D=c,a.push(b));return b};sb.prototype.remove=function(a,b,c,d){a=a.toString();if(!(a in this.a))return !1;var f=this.a[a];b=tb(f,b,c,d);return -1<b?(rb(f[b]),Array.prototype.splice.call(f,b,1),0==f.length&&(delete this.a[a],this.b--),!0):!1};
function ub(a,b){var c=b.type;if(c in a.a){var d=a.a[c],f=Ma(d,b),g;(g=0<=f)&&Array.prototype.splice.call(d,f,1);g&&(rb(b),0==a.a[c].length&&(delete a.a[c],a.b--));}}function tb(a,b,c,d){for(var f=0;f<a.length;++f){var g=a[f];if(!g.A&&g.listener==b&&g.capture==!!c&&g.H==d)return f}return -1}var vb="closure_lm_"+(1E6*Math.random()|0),wb={};function yb(a,b,c,d,f){if(d&&d.once)zb(a,b,c,d,f);else if(Array.isArray(b))for(var g=0;g<b.length;g++)yb(a,b[g],c,d,f);else c=Ab(c),a&&a[ob]?a.f.add(String(b),c,!1,sa(d)?!!d.capture:!!d,f):Bb(a,b,c,!1,d,f);}
function Bb(a,b,c,d,f,g){if(!b)throw Error("Invalid event type");var e=sa(f)?!!f.capture:!!f,h=Cb(a);h||(a[vb]=h=new sb(a));c=h.add(b,c,d,e,g);if(!c.proxy){d=Db();c.proxy=d;d.src=a;d.listener=c;if(a.addEventListener)mb||(f=e),void 0===f&&(f=!1),a.addEventListener(b.toString(),d,f);else if(a.attachEvent)a.attachEvent(Eb(b.toString()),d);else if(a.addListener&&a.removeListener)a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");}}
function Db(){function a(c){return b.call(a.src,a.listener,c)}var b=Fb;return a}function zb(a,b,c,d,f){if(Array.isArray(b))for(var g=0;g<b.length;g++)zb(a,b[g],c,d,f);else c=Ab(c),a&&a[ob]?a.f.add(String(b),c,!0,sa(d)?!!d.capture:!!d,f):Bb(a,b,c,!0,d,f);}
function Gb(a,b,c,d,f){if(Array.isArray(b))for(var g=0;g<b.length;g++)Gb(a,b[g],c,d,f);else (d=sa(d)?!!d.capture:!!d,c=Ab(c),a&&a[ob])?a.f.remove(String(b),c,d,f):a&&(a=Cb(a))&&(b=a.a[b.toString()],a=-1,b&&(a=tb(b,c,d,f)),(c=-1<a?b[a]:null)&&Hb(c));}
function Hb(a){if("number"!==typeof a&&a&&!a.A){var b=a.src;if(b&&b[ob])ub(b.f,a);else {var c=a.type,d=a.proxy;b.removeEventListener?b.removeEventListener(c,d,a.capture):b.detachEvent?b.detachEvent(Eb(c),d):b.addListener&&b.removeListener&&b.removeListener(d);(c=Cb(b))?(ub(c,a),0==c.b&&(c.src=null,b[vb]=null)):rb(a);}}}function Eb(a){return a in wb?wb[a]:wb[a]="on"+a}function Fb(a,b){if(a.A)a=!0;else {b=new L(b,this);var c=a.listener,d=a.H||a.src;a.D&&Hb(a);a=c.call(d,b);}return a}
function Cb(a){a=a[vb];return a instanceof sb?a:null}var Ib="__closure_events_fn_"+(1E9*Math.random()>>>0);function Ab(a){if("function"===typeof a)return a;a[Ib]||(a[Ib]=function(b){return a.handleEvent(b)});return a[Ib]}function M(){jb.call(this);this.f=new sb(this);this.U=this;}B(M,jb);M.prototype[ob]=!0;M.prototype.addEventListener=function(a,b,c,d){yb(this,a,b,c,d);};M.prototype.removeEventListener=function(a,b,c,d){Gb(this,a,b,c,d);};function O(a,b){a=a.U;var c=b.type||b;if("string"===typeof b)b=new K$1(b,a);else if(b instanceof K$1)b.target=b.target||a;else {var d=b;b=new K$1(c,a);Ua(b,d);}a=b.a=a;Jb(a,c,!0,b);Jb(a,c,!1,b);}
function Jb(a,b,c,d){if(b=a.f.a[String(b)]){b=b.concat();for(var f=!0,g=0;g<b.length;++g){var e=b[g];if(e&&!e.A&&e.capture==c){var h=e.listener,k=e.H||e.src;e.D&&ub(a.f,e);f=!1!==h.call(k,d)&&f;}}}}var Kb=w;function Lb(a,b,c){if("function"===typeof a)c&&(a=A(a,c));else if(a&&"function"==typeof a.handleEvent)a=A(a.handleEvent,a);else throw Error("Invalid listener argument");return 2147483647<Number(b)?-1:Kb.setTimeout(a,b||0)}function Mb(a,b){this.name=a;this.value=b;}Mb.prototype.toString=function(){return this.name};var Nb=new Mb("OFF",Infinity),Ob=new Mb("SEVERE",1E3),Pb=new Mb("CONFIG",700),Qb=new Mb("FINE",500);function Rb(){this.clear();}var Sb;Rb.prototype.clear=function(){};function Ub(a,b,c){this.reset(a||Nb,b,c,void 0,void 0);}Ub.prototype.reset=function(){};function Vb(a,b){this.a=null;this.f=[];this.b=(void 0===b?null:b)||null;this.c=[];this.g={getName:function(){return a}};}
function Wb(a){if(a.a)return a.a;if(a.b)return Wb(a.b);Da("Root logger has no level set.");return Nb}function Xb(a,b){for(;a;)a.f.forEach(function(c){c(b);}),a=a.b;}function Yb(){this.entries={};var a=new Vb("");a.a=Pb;this.entries[""]=a;}var Zb;function $b(a,b,c){var d=a.entries[b];if(d)return void 0!==c&&(d.a=c),d;d=$b(a,b.substr(0,b.lastIndexOf(".")));var f=new Vb(b,d);a.entries[b]=f;d.c.push(f);void 0!==c&&(f.a=c);return f}function ac(){Zb||(Zb=new Yb);return Zb}
function bc(a,b,c){var d;if(d=a)if(d=a&&b){d=b.value;var f=a?Wb($b(ac(),a.getName())):Nb;d=d>=f.value;}d&&(b=b||Nb,d=$b(ac(),a.getName()),"function"===typeof c&&(c=c()),Sb||(Sb=new Rb),a=a.getName(),a=new Ub(b,c,a),Xb(d,a));}function P(a,b){a&&bc(a,Qb,b);}function cc(){}cc.prototype.a=null;function dc(a){var b;(b=a.a)||(b={},ec$1(a)&&(b[0]=!0,b[1]=!0),b=a.a=b);return b}var fc;function gc(){}B(gc,cc);function hc(a){return (a=ec$1(a))?new ActiveXObject(a):new XMLHttpRequest}function ec$1(a){if(!a.b&&"undefined"==typeof XMLHttpRequest&&"undefined"!=typeof ActiveXObject){for(var b=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],c=0;c<b.length;c++){var d=b[c];try{return new ActiveXObject(d),a.b=d}catch(f){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");}return a.b}fc=new gc;t();u();function ic(a,b){this.b=a[w.Symbol.iterator]();this.c=b;this.f=0;}ic.prototype[Symbol.iterator]=function(){return this};ic.prototype.next=function(){var a=this.b.next();return {value:a.done?void 0:this.c.call(void 0,a.value,this.f++),done:a.done}};function jc(a,b){return new ic(a,b)}t();u();t();u();var kc="StopIteration"in w?w.StopIteration:{message:"StopIteration",stack:""};function Q(){}Q.prototype.next=function(){return Q.prototype.a.call(this)};Q.prototype.a=function(){throw kc;};Q.prototype.u=function(){return this};function lc(a){if(a instanceof R||a instanceof S||a instanceof T)return a;if("function"==typeof a.next)return new R(function(){return mc(a)});t();u();if("function"==typeof a[Symbol.iterator])return t(),u(),new R(function(){return a[Symbol.iterator]()});if("function"==typeof a.u)return new R(function(){return mc(a.u())});throw Error("Not an iterator or iterable.");}
function mc(a){if(!(a instanceof Q))return a;var b=!1;return {next:function(){for(var c;!b;)try{c=a.a();break}catch(d){if(d!==kc)throw d;b=!0;}return {value:c,done:b}}}}t();u();function R(a){this.b=a;}R.prototype.u=function(){return new S(this.b())};R.prototype[Symbol.iterator]=function(){return new T(this.b())};R.prototype.c=function(){return new T(this.b())};t();u();function S(a){this.b=a;}oa(S,Q);S.prototype.a=function(){var a=this.b.next();if(a.done)throw kc;return a.value};S.prototype.next=function(){return S.prototype.a.call(this)};
S.prototype[Symbol.iterator]=function(){return new T(this.b)};S.prototype.c=function(){return new T(this.b)};function T(a){R.call(this,function(){return a});this.f=a;}oa(T,R);T.prototype.next=function(){return this.f.next()};function nc(a,b){this.o={};this.j=[];this.B=this.size=0;var c=arguments.length;if(1<c){if(c%2)throw Error("Uneven number of arguments");for(var d=0;d<c;d+=2)this.set(arguments[d],arguments[d+1]);}else a&&this.addAll(a);}n=nc.prototype;n.G=function(){oc(this);return this.j.concat()};n.has=function(a){return U(this.o,a)};n.clear=function(){this.o={};this.B=this.size=this.j.length=0;};n.remove=function(a){return this.delete(a)};
n.delete=function(a){return U(this.o,a)?(delete this.o[a],--this.size,this.B++,this.j.length>2*this.size&&oc(this),!0):!1};function oc(a){if(a.size!=a.j.length){for(var b=0,c=0;b<a.j.length;){var d=a.j[b];U(a.o,d)&&(a.j[c++]=d);b++;}a.j.length=c;}if(a.size!=a.j.length){var f={};for(c=b=0;b<a.j.length;)d=a.j[b],U(f,d)||(a.j[c++]=d,f[d]=1),b++;a.j.length=c;}}n.get=function(a,b){return U(this.o,a)?this.o[a]:b};n.set=function(a,b){U(this.o,a)||(this.size+=1,this.j.push(a),this.B++);this.o[a]=b;};
n.addAll=function(a){if(a instanceof nc)for(var b=a.G(),c=0;c<b.length;c++)this.set(b[c],a.get(b[c]));else for(b in a)this.set(b,a[b]);};n.forEach=function(a,b){for(var c=this.G(),d=0;d<c.length;d++){var f=c[d],g=this.get(f);a.call(b,g,f,this);}};n.clone=function(){return new nc(this)};n.keys=function(){return lc(this.u(!0)).c()};n.values=function(){return lc(this.u(!1)).c()};n.entries=function(){var a=this;return jc(this.keys(),function(b){return [b,a.get(b)]})};
n.u=function(a){oc(this);var b=0,c=this.B,d=this,f=new Q;f.a=function(){if(c!=d.B)throw Error("The map has changed since the iterator was created");if(b>=d.j.length)throw kc;var g=d.j[b++];return a?g:d.o[g]};f.next=f.a.bind(f);return f};function U(a,b){return Object.prototype.hasOwnProperty.call(a,b)}var pc=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function qc(a){M.call(this);this.headers=new nc;this.C=a||null;this.c=!1;this.J=this.a=null;this.P=this.v="";this.g=0;this.l="";this.i=this.N=this.s=this.L=!1;this.h=0;this.w=null;this.m=rc;this.I=this.M=!1;}B(qc,M);var rc="";qc.prototype.b=$b(ac(),"goog.net.XhrIo",void 0).g;var sc=/^https?$/i,tc=["POST","PUT"];
function uc(a,b,c){if(a.a)throw Error("[goog.net.XhrIo] Object is active with another request="+a.v+"; newUri="+b);a.v=b;a.l="";a.g=0;a.P="POST";a.L=!1;a.c=!0;a.a=a.C?hc(a.C):hc(fc);a.J=a.C?dc(a.C):dc(fc);a.a.onreadystatechange=A(a.R,a);try{P(a.b,V(a,"Opening Xhr")),a.N=!0,a.a.open("POST",String(b),!0),a.N=!1;}catch(g){P(a.b,V(a,"Error opening Xhr: "+g.message));vc(a,g);return}b=c||"";c=a.headers.clone();var d=c.G().find(function(g){return "content-type"==g.toLowerCase()}),f=w.FormData&&b instanceof
w.FormData;!(0<=Ma(tc,"POST"))||d||f||c.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8");c.forEach(function(g,e){this.a.setRequestHeader(e,g);},a);a.m&&(a.a.responseType=a.m);"withCredentials"in a.a&&a.a.withCredentials!==a.M&&(a.a.withCredentials=a.M);try{wc(a),0<a.h&&(a.I=xc(a.a),P(a.b,V(a,"Will abort after "+a.h+"ms if incomplete, xhr2 "+a.I)),a.I?(a.a.timeout=a.h,a.a.ontimeout=A(a.T,a)):a.w=Lb(a.T,a.h,a)),P(a.b,V(a,"Sending request")),a.s=!0,a.a.send(b),a.s=!1;}catch(g){P(a.b,
V(a,"Send error: "+g.message)),vc(a,g);}}function xc(a){return $a&&ib()&&"number"===typeof a.timeout&&void 0!==a.ontimeout}n=qc.prototype;n.T=function(){"undefined"!=typeof qa&&this.a&&(this.l="Timed out after "+this.h+"ms, aborting",this.g=8,P(this.b,V(this,this.l)),O(this,"timeout"),this.abort(8));};function vc(a,b){a.c=!1;a.a&&(a.i=!0,a.a.abort(),a.i=!1);a.l=b;a.g=5;yc(a);zc(a);}function yc(a){a.L||(a.L=!0,O(a,"complete"),O(a,"error"));}
n.abort=function(a){this.a&&this.c&&(P(this.b,V(this,"Aborting")),this.c=!1,this.i=!0,this.a.abort(),this.i=!1,this.g=a||7,O(this,"complete"),O(this,"abort"),zc(this));};n.R=function(){this.K||(this.N||this.s||this.i?Ac(this):this.W());};n.W=function(){Ac(this);};
function Ac(a){if(a.c&&"undefined"!=typeof qa)if(a.J[1]&&4==W(a)&&2==a.getStatus())P(a.b,V(a,"Local request error detected and ignored"));else if(a.s&&4==W(a))Lb(a.R,0,a);else if(O(a,"readystatechange"),4==W(a)){P(a.b,V(a,"Request complete"));a.c=!1;try{var b=a.getStatus();a:switch(b){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var c=!0;break a;default:c=!1;}var d;if(!(d=c)){var f;if(f=0===b){var g=String(a.v).match(pc)[1]||null;if(!g&&w.self&&w.self.location){var e=w.self.location.protocol;
g=e.substr(0,e.length-1);}f=!sc.test(g?g.toLowerCase():"");}d=f;}if(d)O(a,"complete"),O(a,"success");else {a.g=6;try{var h=2<W(a)?a.a.statusText:"";}catch(k){P(a.b,"Can not get status: "+k.message),h="";}a.l=h+" ["+a.getStatus()+"]";yc(a);}}finally{zc(a);}}}function zc(a){if(a.a){wc(a);var b=a.a,c=a.J[0]?ra:null;a.a=null;a.J=null;O(a,"ready");try{b.onreadystatechange=c;}catch(d){(a=a.b)&&bc(a,Ob,"Problem encountered resetting onreadystatechange: "+d.message);}}}
function wc(a){a.a&&a.I&&(a.a.ontimeout=null);a.w&&(Kb.clearTimeout(a.w),a.w=null);}function W(a){return a.a?a.a.readyState:0}n.getStatus=function(){try{return 2<W(this)?this.a.status:-1}catch(a){return -1}};
function Bc(a){try{if(!a.a)return null;if("response"in a.a)return a.a.response;switch(a.m){case rc:case "text":return a.a.responseText;case "arraybuffer":if("mozResponseArrayBuffer"in a.a)return a.a.mozResponseArrayBuffer}var b=a.b;b&&bc(b,Ob,"Response type "+a.m+" is not supported on this browser");return null}catch(c){return P(a.b,"Can not get response: "+c.message),null}}function Cc(a,b){if(a.a&&4==W(a))return a=a.a.getResponseHeader(b),null===a?void 0:a}
function Dc(a){var b={};a=(a.a&&4==W(a)?a.a.getAllResponseHeaders()||"":"").split("\r\n");for(var c=0;c<a.length;c++)if(!/^[\s\xa0]*$/.test(a[c])){var d=Va(a[c]),f=d[0];d=d[1];if("string"===typeof d){d=d.trim();var g=b[f]||[];b[f]=g;g.push(d);}}return Sa(b,function(e){return e.join(", ")})}function V(a,b){return b+" ["+a.P+" "+a.v+" "+a.getStatus()+"]"}var Ec={},Fc=null;function Gc(a){var b=a.length,c=3*b/4;c%3?c=Math.floor(c):I("=.",a[b-1])&&(c=I("=.",a[b-2])?c-2:c-1);var d=new Uint8Array(c),f=0;Hc(a,function(g){d[f++]=g;});return d.subarray(0,f)}
function Hc(a,b){function c(k){for(;d<a.length;){var l=a.charAt(d++),m=Fc[l];if(null!=m)return m;if(!/^[\s\xa0]*$/.test(l))throw Error("Unknown base64 encoding at char: "+l);}return k}Ic();for(var d=0;;){var f=c(-1),g=c(0),e=c(64),h=c(64);if(64===h&&-1===f)break;b(f<<2|g>>4);64!=e&&(b(g<<4&240|e>>2),64!=h&&b(e<<6&192|h));}}
function Ic(){if(!Fc){Fc={};for(var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),b=["+/=","+/","-_=","-_.","-_"],c=0;5>c;c++){var d=a.concat(b[c].split(""));Ec[c]=d;for(var f=0;f<d.length;f++){var g=d[f];void 0===Fc[g]&&(Fc[g]=f);}}}}var Jc=["content-type","grpc-status","grpc-message"];
function X(a){this.a=a.Z;this.m=null;this.b=[];this.h=[];this.g=[];this.f=[];this.c=[];this.l=!1;this.i=0;this.s=new Ea;var b=this;yb(this.a,"readystatechange",function(){var c=b.a;if(c=c.a?c.a.getResponseHeader("Content-Type"):null){c=c.toLowerCase();if(0==c.lastIndexOf("application/grpc-web-text",0)){c=b.a;try{var d=c.a?c.a.responseText:"";}catch(k){P(c.b,"Can not get responseText: "+k.message),d="";}c=d||"";d=c.length-c.length%4;c=c.substr(b.i,d-b.i);if(0==c.length)return;b.i=d;c=Gc(c);}else if(0==
c.lastIndexOf("application/grpc",0))c=new Uint8Array(Bc(b.a));else {Y(b,new F(2,"Unknown Content-type received."));return}d=null;try{d=Ga(b.s,c);}catch(k){Y(b,new F(2,"Error in parsing response body"));}if(d)for(c=0;c<d.length;c++){if(Ha in d[c]){var f=d[c][Ha];if(f){var g=void 0;try{g=b.m(f);}catch(k){Y(b,new F(13,"Error when deserializing response data; error: "+k+(", response: "+g)));}if(g){f=b;for(var e=0;e<f.b.length;e++)f.b[e](g);}}}if(H in d[c]&&0<d[c][H].length){f="";for(g=0;g<d[c][H].length;g++)f+=
String.fromCharCode(d[c][H][g]);f=f.trim().split("\r\n");g={};for(e=0;e<f.length;e++){var h=f[e].indexOf(":");g[f[e].substring(0,h).trim()]=f[e].substring(h+1).trim();}f=g;g=0;e="";"grpc-status"in f&&(g=Number(f["grpc-status"]),delete f["grpc-status"]);"grpc-message"in f&&(e=f["grpc-message"],delete f["grpc-message"]);Y(b,new F(g,e,f));}}}});yb(this.a,"complete",function(){var c=b.a.g,d=2,f="",g={},e=Dc(b.a);Object.keys(e).forEach(function(h){Jc.includes(h)||(g[h]=e[h]);});Kc(b,g);if(0!=c){switch(c){case 7:d=
10;break;case 8:d=4;break;case 6:d=za(b.a.getStatus());break;default:d=14;}10==d&&b.l||Y(b,new F(d,Ba(c)));}else c=!1,"grpc-status"in e&&(d=Number(Cc(b.a,"grpc-status")),"grpc-message"in e&&(f=Cc(b.a,"grpc-message")),0!=d&&(Y(b,new F(d,f||"",e)),c=!0)),c||Lc(b);});}X.prototype.on=function(a,b){"data"==a?this.b.push(b):"status"==a?this.h.push(b):"metadata"==a?this.g.push(b):"end"==a?this.c.push(b):"error"==a&&this.f.push(b);return this};function Mc(a,b){b=a.indexOf(b);-1<b&&a.splice(b,1);}
X.prototype.removeListener=function(a,b){"data"==a?Mc(this.b,b):"status"==a?Mc(this.h,b):"metadata"==a?Mc(this.g,b):"end"==a?Mc(this.c,b):"error"==a&&Mc(this.f,b);return this};X.prototype.cancel=function(){this.l=!0;this.a.abort();};function Y(a,b){if(0!=b.code)for(var c=new F(b.code,decodeURIComponent(b.message||""),b.metadata),d=0;d<a.f.length;d++)a.f[d](c);b={code:b.code,details:decodeURIComponent(b.message||""),metadata:b.metadata};for(c=0;c<a.h.length;c++)a.h[c](b);}
function Kc(a,b){for(var c=0;c<a.g.length;c++)a.g[c](b);}function Lc(a){for(var b=0;b<a.c.length;b++)a.c[b]();}X.prototype.cancel=X.prototype.cancel;X.prototype.removeListener=X.prototype.removeListener;X.prototype.on=X.prototype.on;function Nc(a){var b="";Ra(a,function(c,d){b+=d;b+=":";b+=c;b+="\r\n";});return b}function Z(a,b){a=void 0===a?{}:a;this.a=a.format||y("format",a)||"text";this.g=a.aa||y("suppressCorsPreflight",a)||!1;this.f=a.withCredentials||y("withCredentials",a)||!1;this.b=a.$||y("streamInterceptors",a)||[];this.h=a.ba||y("unaryInterceptors",a)||[];this.c=b||null;}Z.prototype.X=function(a,b,c,d,f){var g=this,e=a.substr(0,a.length-d.name.length);a=Oc(function(h){return Pc(g,h,e)},this.b).call(this,ya(d,b,c));Qc(a,f,!1);return new Aa(a)};
Z.prototype.S=function(a,b,c,d){var f=this,g=a.substr(0,a.length-d.name.length);return Oc(function(e){return new Promise(function(h,k){var l=Pc(f,e,g),m,p,q;Qc(l,function(x,z,N,Tb){x?k(x):z?q=z:N?p=N:Tb?m=Tb:(x=e.getMethodDescriptor(),z=m,z=void 0===z?{}:z,h(new D(q,x,z,void 0===p?null:p)));},!0);})},this.h).call(this,ya(d,b,c)).then(function(e){return e.getResponseMessage()})};Z.prototype.unaryCall=function(a,b,c,d){return this.S(a,b,c,d)};
Z.prototype.Y=function(a,b,c,d){var f=this,g=a.substr(0,a.length-d.name.length);return Oc(function(e){return Pc(f,e,g)},this.b).call(this,ya(d,b,c))};
function Pc(a,b,c){var d=b.getMethodDescriptor(),f=c+d.getName();c=a.c?a.c:new qc;c.M=a.f;var g=new X({Z:c}),e=d.getResponseDeserializeFn();g.m=e;e=b.getMetadata();for(var h in e)c.headers.set(h,e[h]);"text"==a.a?(c.headers.set("Content-Type","application/grpc-web-text"),c.headers.set("Accept","application/grpc-web-text")):c.headers.set("Content-Type","application/grpc-web+proto");c.headers.set("X-User-Agent","grpc-web-javascript/0.1");c.headers.set("X-Grpc-Web","1");c.headers.has("deadline")&&(h=
Number(c.headers.get("deadline")),h=Math.ceil(h-(new Date).getTime()),c.headers.delete("deadline"),Infinity===h&&(h=0),0<h&&(c.headers.set("grpc-timeout",h+"m"),c.h=Math.max(0,Math.max(1E3,Math.ceil(1.1*h)))));if(a.g){e=c.headers;h={};for(var k=ha(e.keys()),l=k.next();!l.done;l=k.next())l=l.value,h[l]=e.get(l);c.headers.clear();b:{for(m in h){var m=!1;break b}m=!0;}if(!m)if(h=Nc(h),"string"===typeof f){if(m=encodeURIComponent("$httpHeaders"),h=null!=h?"="+encodeURIComponent(String(h)):"",m+=h)h=f.indexOf("#"),
0>h&&(h=f.length),e=f.indexOf("?"),0>e||e>h?(e=h,k=""):k=f.substring(e+1,h),f=[f.substr(0,e),k,f.substr(h)],h=f[1],f[1]=m?h?h+"&"+m:m:h,f=f[0]+(f[1]?"?"+f[1]:"")+f[2];}else f.a("$httpHeaders",h);}b=d.getRequestSerializeFn()(b.getRequestMessage());d=b.length;m=[0,0,0,0];h=new Uint8Array(5+d);for(e=3;0<=e;e--)m[e]=d%256,d>>>=8;h.set(new Uint8Array(m),1);h.set(b,5);b=h;if("text"==a.a){a=b;var p;void 0===p&&(p=0);Ic();p=Ec[p];b=Array(Math.floor(a.length/3));d=p[64]||"";for(m=h=0;h<a.length-2;h+=3){l=a[h];
var q=a[h+1];k=a[h+2];e=p[l>>2];l=p[(l&3)<<4|q>>4];q=p[(q&15)<<2|k>>6];k=p[k&63];b[m++]=e+l+q+k;}e=0;k=d;switch(a.length-h){case 2:e=a[h+1],k=p[(e&15)<<2]||d;case 1:a=a[h],b[m]=p[a>>2]+p[(a&3)<<4|e>>4]+k+d;}b=b.join("");}else "binary"==a.a&&(c.m="arraybuffer");uc(c,f,b);return g}
function Qc(a,b,c){var d=!1,f=null,g=!1;a.on("data",function(e){d=!0;f=e;});a.on("error",function(e){0==e.code||g||(g=!0,b(e,null));});a.on("status",function(e){0==e.code||g?c&&b(null,null,e):(g=!0,b({code:e.code,message:e.details,metadata:e.metadata},null));});if(c)a.on("metadata",function(e){b(null,null,null,e);});a.on("end",function(){g||(d?b(null,f):b({code:2,message:"Incomplete response"}));c&&b(null,null);});}
function Oc(a,b){var c=a;b.forEach(function(d){var f=c;c=function(g){return d.intercept(g,f)};});return c}Z.prototype.serverStreaming=Z.prototype.Y;Z.prototype.unaryCall=Z.prototype.unaryCall;Z.prototype.thenableCall=Z.prototype.S;Z.prototype.rpcCall=Z.prototype.X;var MethodDescriptor=E;var GrpcWebClientBase=Z;var MethodType={UNARY:"unary",SERVER_STREAMING:"server_streaming",BIDI_STREAMING:"bidi_streaming"};
Kb="undefined"!==typeof globalThis&&globalThis||self;

/**
 * @fileoverview gRPC-Web generated client stub for sgn.gateway.v1
 * @enhanceable
 * @public
 */
var WebClient = /** @class */ (function () {
    function WebClient(hostname, credentials, options) {
        this.methodInfoGetTransferConfigs = new MethodDescriptor('/sgn.gateway.v1.Web/GetTransferConfigs', MethodType.UNARY, gateway_pb.GetTransferConfigsRequest, gateway_pb.GetTransferConfigsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetTransferConfigsResponse.deserializeBinary);
        this.methodInfoGetTransferConfigsForAll = new MethodDescriptor('/sgn.gateway.v1.Web/GetTransferConfigsForAll', MethodType.UNARY, gateway_pb.GetTransferConfigsRequest, gateway_pb.GetTransferConfigsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetTransferConfigsResponse.deserializeBinary);
        this.methodInfoGetTokenInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetTokenInfo', MethodType.UNARY, gateway_pb.GetTokenInfoRequest, gateway_pb.GetTokenInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetTokenInfoResponse.deserializeBinary);
        this.methodInfoEstimateAmt = new MethodDescriptor('/sgn.gateway.v1.Web/EstimateAmt', MethodType.UNARY, gateway_pb.EstimateAmtRequest, gateway_pb.EstimateAmtResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.EstimateAmtResponse.deserializeBinary);
        this.methodInfoGetTransferStatus = new MethodDescriptor('/sgn.gateway.v1.Web/GetTransferStatus', MethodType.UNARY, gateway_pb.GetTransferStatusRequest, gateway_pb.GetTransferStatusResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetTransferStatusResponse.deserializeBinary);
        this.methodInfoGetLPInfoList = new MethodDescriptor('/sgn.gateway.v1.Web/GetLPInfoList', MethodType.UNARY, gateway_pb.GetLPInfoListRequest, gateway_pb.GetLPInfoListResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetLPInfoListResponse.deserializeBinary);
        this.methodInfoWithdrawLiquidity = new MethodDescriptor('/sgn.gateway.v1.Web/WithdrawLiquidity', MethodType.UNARY, gateway_pb.WithdrawLiquidityRequest, gateway_pb.WithdrawLiquidityResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.WithdrawLiquidityResponse.deserializeBinary);
        this.methodInfoEstimateWithdrawAmt = new MethodDescriptor('/sgn.gateway.v1.Web/EstimateWithdrawAmt', MethodType.UNARY, gateway_pb.EstimateWithdrawAmtRequest, gateway_pb.EstimateWithdrawAmtResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.EstimateWithdrawAmtResponse.deserializeBinary);
        this.methodInfoQueryLiquidityStatus = new MethodDescriptor('/sgn.gateway.v1.Web/QueryLiquidityStatus', MethodType.UNARY, gateway_pb.QueryLiquidityStatusRequest, gateway_pb.QueryLiquidityStatusResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.QueryLiquidityStatusResponse.deserializeBinary);
        this.methodInfoUnlockFarmingReward = new MethodDescriptor('/sgn.gateway.v1.Web/UnlockFarmingReward', MethodType.UNARY, gateway_pb.UnlockFarmingRewardRequest, gateway_pb.UnlockFarmingRewardResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.UnlockFarmingRewardResponse.deserializeBinary);
        this.methodInfoGetFarmingRewardDetails = new MethodDescriptor('/sgn.gateway.v1.Web/GetFarmingRewardDetails', MethodType.UNARY, gateway_pb.GetFarmingRewardDetailsRequest, gateway_pb.GetFarmingRewardDetailsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetFarmingRewardDetailsResponse.deserializeBinary);
        this.methodInfoTransferHistory = new MethodDescriptor('/sgn.gateway.v1.Web/TransferHistory', MethodType.UNARY, gateway_pb.TransferHistoryRequest, gateway_pb.TransferHistoryResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.TransferHistoryResponse.deserializeBinary);
        this.methodInfoLPHistory = new MethodDescriptor('/sgn.gateway.v1.Web/LPHistory', MethodType.UNARY, gateway_pb.LPHistoryRequest, gateway_pb.LPHistoryResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.LPHistoryResponse.deserializeBinary);
        this.methodInfoRewardingData = new MethodDescriptor('/sgn.gateway.v1.Web/RewardingData', MethodType.UNARY, gateway_pb.RewardingDataRequest, gateway_pb.RewardingDataResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.RewardingDataResponse.deserializeBinary);
        this.methodInfoStakingConfig = new MethodDescriptor('/sgn.gateway.v1.Web/StakingConfig', MethodType.UNARY, gateway_pb.StakingConfigRequest, gateway_pb.StakingConfigResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.StakingConfigResponse.deserializeBinary);
        this.methodInfoUnlockStakingReward = new MethodDescriptor('/sgn.gateway.v1.Web/UnlockStakingReward', MethodType.UNARY, gateway_pb.UnlockStakingRewardRequest, gateway_pb.UnlockStakingRewardResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.UnlockStakingRewardResponse.deserializeBinary);
        this.methodInfoGetStakingRewardDetails = new MethodDescriptor('/sgn.gateway.v1.Web/GetStakingRewardDetails', MethodType.UNARY, gateway_pb.GetStakingRewardDetailsRequest, gateway_pb.GetStakingRewardDetailsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetStakingRewardDetailsResponse.deserializeBinary);
        this.methodInfoGetTotalLiquidityProviderTokenBalance = new MethodDescriptor('/sgn.gateway.v1.Web/GetTotalLiquidityProviderTokenBalance', MethodType.UNARY, gateway_pb.GetTotalLiquidityProviderTokenBalanceRequest, gateway_pb.GetTotalLiquidityProviderTokenBalanceResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetTotalLiquidityProviderTokenBalanceResponse.deserializeBinary);
        this.methodInfoUpdateChain = new MethodDescriptor('/sgn.gateway.v1.Web/UpdateChain', MethodType.UNARY, gateway_pb.UpdateChainRequest, gateway_pb.UpdateChainResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.UpdateChainResponse.deserializeBinary);
        this.methodInfoUpdateToken = new MethodDescriptor('/sgn.gateway.v1.Web/UpdateToken', MethodType.UNARY, gateway_pb.UpdateTokenRequest, gateway_pb.UpdateTokenResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.UpdateTokenResponse.deserializeBinary);
        this.methodInfoGetCampaignScores = new MethodDescriptor('/sgn.gateway.v1.Web/GetCampaignScores', MethodType.UNARY, gateway_pb.GetCampaignScoresRequest, gateway_pb.GetCampaignScoresResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetCampaignScoresResponse.deserializeBinary);
        this.methodInfoGetInfoByTxHash = new MethodDescriptor('/sgn.gateway.v1.Web/GetInfoByTxHash', MethodType.UNARY, gateway_pb.GetInfoByTxHashRequest, gateway_pb.GetInfoByTxHashResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetInfoByTxHashResponse.deserializeBinary);
        this.methodInfoGetAbnormalStatusInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetAbnormalStatusInfo', MethodType.UNARY, gateway_pb.GetAbnormalStatusInfoRequest, gateway_pb.GetAbnormalStatusInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetAbnormalStatusInfoResponse.deserializeBinary);
        this.methodInfoGetAllLPInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetAllLPInfo', MethodType.UNARY, gateway_pb.GetAllLPInfoRequest, gateway_pb.GetAllLPInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetAllLPInfoResponse.deserializeBinary);
        this.methodInfoGetAllTXInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetAllTXInfo', MethodType.UNARY, gateway_pb.GetAllTXInfoRequest, gateway_pb.GetAllTXInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetAllTXInfoResponse.deserializeBinary);
        this.methodInfoFixEventMiss = new MethodDescriptor('/sgn.gateway.v1.Web/FixEventMiss', MethodType.UNARY, gateway_pb.FixEventMissRequest, gateway_pb.FixEventMissResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.FixEventMissResponse.deserializeBinary);
        this.methodInfoGetUsrBalance = new MethodDescriptor('/sgn.gateway.v1.Web/GetUsrBalance', MethodType.UNARY, gateway_pb.GetUsrBalanceRequest, gateway_pb.GetUsrBalanceResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetUsrBalanceResponse.deserializeBinary);
        this.methodInfoGetAllConfigs = new MethodDescriptor('/sgn.gateway.v1.Web/GetAllConfigs', MethodType.UNARY, gateway_pb.GetAllConfigsRequest, gateway_pb.GetAllConfigsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetAllConfigsResponse.deserializeBinary);
        this.methodInfoGetCbrConfigsOnChain = new MethodDescriptor('/sgn.gateway.v1.Web/GetCbrConfigsOnChain', MethodType.UNARY, gateway_pb.GetCbrConfigsOnChainRequest, gateway_pb.GetCbrConfigsOnChainResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetCbrConfigsOnChainResponse.deserializeBinary);
        this.methodInfoReportCurrentBlockNumber = new MethodDescriptor('/sgn.gateway.v1.Web/ReportCurrentBlockNumber', MethodType.UNARY, health_pb.ReportSgnAnalyticsRequest, health_pb.ReportSgnAnalyticsResponse, function (request) {
            return request.serializeBinary();
        }, health_pb.ReportSgnAnalyticsResponse.deserializeBinary);
        this.methodInfoGetCurrentBlockNumberByNode = new MethodDescriptor('/sgn.gateway.v1.Web/GetCurrentBlockNumberByNode', MethodType.UNARY, gateway_pb.GetCurrentBlockNumberByNodeRequest, gateway_pb.GetCurrentBlockNumberByNodeResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetCurrentBlockNumberByNodeResponse.deserializeBinary);
        this.methodInfoGetRetentionRewardsInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetRetentionRewardsInfo', MethodType.UNARY, gateway_pb.GetRetentionRewardsInfoRequest, gateway_pb.GetRetentionRewardsInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetRetentionRewardsInfoResponse.deserializeBinary);
        this.methodInfoGetIncentiveCampaignCelrRank = new MethodDescriptor('/sgn.gateway.v1.Web/GetIncentiveCampaignCelrRank', MethodType.UNARY, gateway_pb.GetIncentiveCampaignCelrRankRequest, gateway_pb.GetIncentiveCampaignCelrRankResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetIncentiveCampaignCelrRankResponse.deserializeBinary);
        this.methodInfoInIncentiveCampaignBnbWhiteList = new MethodDescriptor('/sgn.gateway.v1.Web/InIncentiveCampaignBnbWhiteList', MethodType.UNARY, gateway_pb.InIncentiveCampaignBnbWhiteListRequest, gateway_pb.InIncentiveCampaignBnbWhiteListResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.InIncentiveCampaignBnbWhiteListResponse.deserializeBinary);
        this.methodInfoGetIncentiveCampaignBnbRank = new MethodDescriptor('/sgn.gateway.v1.Web/GetIncentiveCampaignBnbRank', MethodType.UNARY, gateway_pb.GetIncentiveCampaignBnbRankRequest, gateway_pb.GetIncentiveCampaignBnbRankResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetIncentiveCampaignBnbRankResponse.deserializeBinary);
        this.methodInfoClaimRetentionRewards = new MethodDescriptor('/sgn.gateway.v1.Web/ClaimRetentionRewards', MethodType.UNARY, gateway_pb.ClaimRetentionRewardsRequest, gateway_pb.ClaimRetentionRewardsResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.ClaimRetentionRewardsResponse.deserializeBinary);
        this.methodInfoGetBscCampaignInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetBscCampaignInfo', MethodType.UNARY, gateway_pb.GetBscCampaignInfoRequest, gateway_pb.GetBscCampaignInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetBscCampaignInfoResponse.deserializeBinary);
        this.methodInfoClaimGetBscCampaignReward = new MethodDescriptor('/sgn.gateway.v1.Web/ClaimGetBscCampaignReward', MethodType.UNARY, gateway_pb.ClaimGetBscCampaignRewardRequest, gateway_pb.ClaimGetBscCampaignRewardResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.ClaimGetBscCampaignRewardResponse.deserializeBinary);
        this.methodInfoGetFeeRebateInfo = new MethodDescriptor('/sgn.gateway.v1.Web/GetFeeRebateInfo', MethodType.UNARY, gateway_pb.GetFeeRebateInfoRequest, gateway_pb.GetFeeRebateInfoResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.GetFeeRebateInfoResponse.deserializeBinary);
        this.methodInfoClaimFeeRebate = new MethodDescriptor('/sgn.gateway.v1.Web/ClaimFeeRebate', MethodType.UNARY, gateway_pb.ClaimFeeRebateRequest, gateway_pb.ClaimFeeRebateResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.ClaimFeeRebateResponse.deserializeBinary);
        this.methodInfoClaimPegBridgeFee = new MethodDescriptor('/sgn.gateway.v1.Web/ClaimPegBridgeFee', MethodType.UNARY, gateway_pb.ClaimPegBridgeFeeRequest, gateway_pb.ClaimPegBridgeFeeResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.ClaimPegBridgeFeeResponse.deserializeBinary);
        this.methodInfoInitWithdraw = new MethodDescriptor('/sgn.gateway.v1.Web/InitWithdraw', MethodType.UNARY, gateway_pb.InitWithdrawRequest, gateway_pb.InitWithdrawResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.InitWithdrawResponse.deserializeBinary);
        this.methodInfoInitPegRefund = new MethodDescriptor('/sgn.gateway.v1.Web/InitPegRefund', MethodType.UNARY, gateway_pb.InitPegRefundRequest, gateway_pb.InitPegRefundResponse, function (request) {
            return request.serializeBinary();
        }, gateway_pb.InitPegRefundResponse.deserializeBinary);
        this.methodInfoExecutionContexts = new MethodDescriptor('/sgn.gateway.v1.Web/ExecutionContexts', MethodType.UNARY, query_pb.QueryExecutionContextsRequest, query_pb.QueryExecutionContextsResponse, function (request) {
            return request.serializeBinary();
        }, query_pb.QueryExecutionContextsResponse.deserializeBinary);
        if (!options)
            options = {};
        if (!credentials)
            credentials = {};
        options['format'] = 'binary';
        this.client_ = new GrpcWebClientBase(options);
        this.hostname_ = hostname;
        this.credentials_ = credentials;
        this.options_ = options;
    }
    WebClient.prototype.getTransferConfigs = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetTransferConfigs', request, metadata || {}, this.methodInfoGetTransferConfigs, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetTransferConfigs', request, metadata || {}, this.methodInfoGetTransferConfigs);
    };
    WebClient.prototype.getTransferConfigsForAll = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetTransferConfigsForAll', request, metadata || {}, this.methodInfoGetTransferConfigsForAll, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetTransferConfigsForAll', request, metadata || {}, this.methodInfoGetTransferConfigsForAll);
    };
    WebClient.prototype.getTokenInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetTokenInfo', request, metadata || {}, this.methodInfoGetTokenInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetTokenInfo', request, metadata || {}, this.methodInfoGetTokenInfo);
    };
    WebClient.prototype.estimateAmt = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/EstimateAmt', request, metadata || {}, this.methodInfoEstimateAmt, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/EstimateAmt', request, metadata || {}, this.methodInfoEstimateAmt);
    };
    WebClient.prototype.getTransferStatus = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetTransferStatus', request, metadata || {}, this.methodInfoGetTransferStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetTransferStatus', request, metadata || {}, this.methodInfoGetTransferStatus);
    };
    WebClient.prototype.getLPInfoList = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetLPInfoList', request, metadata || {}, this.methodInfoGetLPInfoList, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetLPInfoList', request, metadata || {}, this.methodInfoGetLPInfoList);
    };
    WebClient.prototype.withdrawLiquidity = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/WithdrawLiquidity', request, metadata || {}, this.methodInfoWithdrawLiquidity, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/WithdrawLiquidity', request, metadata || {}, this.methodInfoWithdrawLiquidity);
    };
    WebClient.prototype.estimateWithdrawAmt = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/EstimateWithdrawAmt', request, metadata || {}, this.methodInfoEstimateWithdrawAmt, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/EstimateWithdrawAmt', request, metadata || {}, this.methodInfoEstimateWithdrawAmt);
    };
    WebClient.prototype.queryLiquidityStatus = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/QueryLiquidityStatus', request, metadata || {}, this.methodInfoQueryLiquidityStatus, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/QueryLiquidityStatus', request, metadata || {}, this.methodInfoQueryLiquidityStatus);
    };
    WebClient.prototype.unlockFarmingReward = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/UnlockFarmingReward', request, metadata || {}, this.methodInfoUnlockFarmingReward, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/UnlockFarmingReward', request, metadata || {}, this.methodInfoUnlockFarmingReward);
    };
    WebClient.prototype.getFarmingRewardDetails = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetFarmingRewardDetails', request, metadata || {}, this.methodInfoGetFarmingRewardDetails, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetFarmingRewardDetails', request, metadata || {}, this.methodInfoGetFarmingRewardDetails);
    };
    WebClient.prototype.transferHistory = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/TransferHistory', request, metadata || {}, this.methodInfoTransferHistory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/TransferHistory', request, metadata || {}, this.methodInfoTransferHistory);
    };
    WebClient.prototype.lPHistory = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/LPHistory', request, metadata || {}, this.methodInfoLPHistory, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/LPHistory', request, metadata || {}, this.methodInfoLPHistory);
    };
    WebClient.prototype.rewardingData = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/RewardingData', request, metadata || {}, this.methodInfoRewardingData, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/RewardingData', request, metadata || {}, this.methodInfoRewardingData);
    };
    WebClient.prototype.stakingConfig = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/StakingConfig', request, metadata || {}, this.methodInfoStakingConfig, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/StakingConfig', request, metadata || {}, this.methodInfoStakingConfig);
    };
    WebClient.prototype.unlockStakingReward = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/UnlockStakingReward', request, metadata || {}, this.methodInfoUnlockStakingReward, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/UnlockStakingReward', request, metadata || {}, this.methodInfoUnlockStakingReward);
    };
    WebClient.prototype.getStakingRewardDetails = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetStakingRewardDetails', request, metadata || {}, this.methodInfoGetStakingRewardDetails, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetStakingRewardDetails', request, metadata || {}, this.methodInfoGetStakingRewardDetails);
    };
    WebClient.prototype.getTotalLiquidityProviderTokenBalance = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetTotalLiquidityProviderTokenBalance', request, metadata || {}, this.methodInfoGetTotalLiquidityProviderTokenBalance, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetTotalLiquidityProviderTokenBalance', request, metadata || {}, this.methodInfoGetTotalLiquidityProviderTokenBalance);
    };
    WebClient.prototype.updateChain = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/UpdateChain', request, metadata || {}, this.methodInfoUpdateChain, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/UpdateChain', request, metadata || {}, this.methodInfoUpdateChain);
    };
    WebClient.prototype.updateToken = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/UpdateToken', request, metadata || {}, this.methodInfoUpdateToken, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/UpdateToken', request, metadata || {}, this.methodInfoUpdateToken);
    };
    WebClient.prototype.getCampaignScores = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetCampaignScores', request, metadata || {}, this.methodInfoGetCampaignScores, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetCampaignScores', request, metadata || {}, this.methodInfoGetCampaignScores);
    };
    WebClient.prototype.getInfoByTxHash = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetInfoByTxHash', request, metadata || {}, this.methodInfoGetInfoByTxHash, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetInfoByTxHash', request, metadata || {}, this.methodInfoGetInfoByTxHash);
    };
    WebClient.prototype.getAbnormalStatusInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetAbnormalStatusInfo', request, metadata || {}, this.methodInfoGetAbnormalStatusInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetAbnormalStatusInfo', request, metadata || {}, this.methodInfoGetAbnormalStatusInfo);
    };
    WebClient.prototype.getAllLPInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetAllLPInfo', request, metadata || {}, this.methodInfoGetAllLPInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetAllLPInfo', request, metadata || {}, this.methodInfoGetAllLPInfo);
    };
    WebClient.prototype.getAllTXInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetAllTXInfo', request, metadata || {}, this.methodInfoGetAllTXInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetAllTXInfo', request, metadata || {}, this.methodInfoGetAllTXInfo);
    };
    WebClient.prototype.fixEventMiss = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/FixEventMiss', request, metadata || {}, this.methodInfoFixEventMiss, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/FixEventMiss', request, metadata || {}, this.methodInfoFixEventMiss);
    };
    WebClient.prototype.getUsrBalance = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetUsrBalance', request, metadata || {}, this.methodInfoGetUsrBalance, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetUsrBalance', request, metadata || {}, this.methodInfoGetUsrBalance);
    };
    WebClient.prototype.getAllConfigs = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetAllConfigs', request, metadata || {}, this.methodInfoGetAllConfigs, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetAllConfigs', request, metadata || {}, this.methodInfoGetAllConfigs);
    };
    WebClient.prototype.getCbrConfigsOnChain = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetCbrConfigsOnChain', request, metadata || {}, this.methodInfoGetCbrConfigsOnChain, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetCbrConfigsOnChain', request, metadata || {}, this.methodInfoGetCbrConfigsOnChain);
    };
    WebClient.prototype.reportCurrentBlockNumber = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ReportCurrentBlockNumber', request, metadata || {}, this.methodInfoReportCurrentBlockNumber, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ReportCurrentBlockNumber', request, metadata || {}, this.methodInfoReportCurrentBlockNumber);
    };
    WebClient.prototype.getCurrentBlockNumberByNode = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetCurrentBlockNumberByNode', request, metadata || {}, this.methodInfoGetCurrentBlockNumberByNode, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetCurrentBlockNumberByNode', request, metadata || {}, this.methodInfoGetCurrentBlockNumberByNode);
    };
    WebClient.prototype.getRetentionRewardsInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetRetentionRewardsInfo', request, metadata || {}, this.methodInfoGetRetentionRewardsInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetRetentionRewardsInfo', request, metadata || {}, this.methodInfoGetRetentionRewardsInfo);
    };
    WebClient.prototype.getIncentiveCampaignCelrRank = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetIncentiveCampaignCelrRank', request, metadata || {}, this.methodInfoGetIncentiveCampaignCelrRank, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetIncentiveCampaignCelrRank', request, metadata || {}, this.methodInfoGetIncentiveCampaignCelrRank);
    };
    WebClient.prototype.inIncentiveCampaignBnbWhiteList = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/InIncentiveCampaignBnbWhiteList', request, metadata || {}, this.methodInfoInIncentiveCampaignBnbWhiteList, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/InIncentiveCampaignBnbWhiteList', request, metadata || {}, this.methodInfoInIncentiveCampaignBnbWhiteList);
    };
    WebClient.prototype.getIncentiveCampaignBnbRank = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetIncentiveCampaignBnbRank', request, metadata || {}, this.methodInfoGetIncentiveCampaignBnbRank, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetIncentiveCampaignBnbRank', request, metadata || {}, this.methodInfoGetIncentiveCampaignBnbRank);
    };
    WebClient.prototype.claimRetentionRewards = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ClaimRetentionRewards', request, metadata || {}, this.methodInfoClaimRetentionRewards, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ClaimRetentionRewards', request, metadata || {}, this.methodInfoClaimRetentionRewards);
    };
    WebClient.prototype.getBscCampaignInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetBscCampaignInfo', request, metadata || {}, this.methodInfoGetBscCampaignInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetBscCampaignInfo', request, metadata || {}, this.methodInfoGetBscCampaignInfo);
    };
    WebClient.prototype.claimGetBscCampaignReward = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ClaimGetBscCampaignReward', request, metadata || {}, this.methodInfoClaimGetBscCampaignReward, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ClaimGetBscCampaignReward', request, metadata || {}, this.methodInfoClaimGetBscCampaignReward);
    };
    WebClient.prototype.getFeeRebateInfo = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/GetFeeRebateInfo', request, metadata || {}, this.methodInfoGetFeeRebateInfo, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/GetFeeRebateInfo', request, metadata || {}, this.methodInfoGetFeeRebateInfo);
    };
    WebClient.prototype.claimFeeRebate = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ClaimFeeRebate', request, metadata || {}, this.methodInfoClaimFeeRebate, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ClaimFeeRebate', request, metadata || {}, this.methodInfoClaimFeeRebate);
    };
    WebClient.prototype.claimPegBridgeFee = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ClaimPegBridgeFee', request, metadata || {}, this.methodInfoClaimPegBridgeFee, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ClaimPegBridgeFee', request, metadata || {}, this.methodInfoClaimPegBridgeFee);
    };
    WebClient.prototype.initWithdraw = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/InitWithdraw', request, metadata || {}, this.methodInfoInitWithdraw, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/InitWithdraw', request, metadata || {}, this.methodInfoInitWithdraw);
    };
    WebClient.prototype.initPegRefund = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/InitPegRefund', request, metadata || {}, this.methodInfoInitPegRefund, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/InitPegRefund', request, metadata || {}, this.methodInfoInitPegRefund);
    };
    WebClient.prototype.executionContexts = function (request, metadata, callback) {
        if (callback !== undefined) {
            return this.client_.rpcCall(this.hostname_ +
                '/sgn.gateway.v1.Web/ExecutionContexts', request, metadata || {}, this.methodInfoExecutionContexts, callback);
        }
        return this.client_.unaryCall(this.hostname_ +
            '/sgn.gateway.v1.Web/ExecutionContexts', request, metadata || {}, this.methodInfoExecutionContexts);
    };
    return WebClient;
}());

var byteLength_1 = byteLength;
var toByteArray_1 = toByteArray;
var fromByteArray_1 = fromByteArray;

var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i];
  revLookup[code.charCodeAt(i)] = i;
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;

function getLens (b64) {
  var len = b64.length;

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=');
  if (validLen === -1) validLen = len;

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4);

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp;
  var lens = getLens(b64);
  var validLen = lens[0];
  var placeHoldersLen = lens[1];

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));

  var curByte = 0;

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen;

  var i;
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)];
    arr[curByte++] = (tmp >> 16) & 0xFF;
    arr[curByte++] = (tmp >> 8) & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4);
    arr[curByte++] = tmp & 0xFF;
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2);
    arr[curByte++] = (tmp >> 8) & 0xFF;
    arr[curByte++] = tmp & 0xFF;
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp;
  var output = [];
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF);
    output.push(tripletToBase64(tmp));
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp;
  var len = uint8.length;
  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
  var parts = [];
  var maxChunkLength = 16383; // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1];
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    );
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1];
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    );
  }

  return parts.join('')
}

var base64Js = {
	byteLength: byteLength_1,
	toByteArray: toByteArray_1,
	fromByteArray: fromByteArray_1
};

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
var read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m;
  var eLen = (nBytes * 8) - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = -7;
  var i = isLE ? (nBytes - 1) : 0;
  var d = isLE ? -1 : 1;
  var s = buffer[offset + i];

  i += d;

  e = s & ((1 << (-nBits)) - 1);
  s >>= (-nBits);
  nBits += eLen;
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1);
  e >>= (-nBits);
  nBits += mLen;
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen);
    e = e - eBias;
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
};

var write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c;
  var eLen = (nBytes * 8) - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
  var i = isLE ? 0 : (nBytes - 1);
  var d = isLE ? 1 : -1;
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

  value = Math.abs(value);

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0;
    e = eMax;
  } else {
    e = Math.floor(Math.log(value) / Math.LN2);
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * Math.pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }

    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
      e = 0;
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m;
  eLen += mLen;
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128;
};

var ieee754 = {
	read: read,
	write: write
};

var toString = {}.toString;

var isarray = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

var buffer = createCommonjsModule$1(function (module, exports) {





exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = commonjsGlobal.TYPED_ARRAY_SUPPORT !== undefined
  ? commonjsGlobal.TYPED_ARRAY_SUPPORT
  : typedArraySupport();

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength();

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1);
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }};
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length);
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length);
    }
    that.length = length;
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192; // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype;
  return arr
};

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
};

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype;
  Buffer.__proto__ = Uint8Array;
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    });
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size);
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
};

function allocUnsafe (that, size) {
  assertSize(size);
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0;
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
};

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8';
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0;
  that = createBuffer(that, length);

  var actual = that.write(string, encoding);

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual);
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0;
  that = createBuffer(that, length);
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255;
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength; // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array);
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset);
  } else {
    array = new Uint8Array(array, byteOffset, length);
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array;
    that.__proto__ = Buffer.prototype;
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array);
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0;
    that = createBuffer(that, len);

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len);
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isarray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0;
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
};

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length;
  var y = b.length;

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i];
      y = b[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
};

Buffer.concat = function concat (list, length) {
  if (!isarray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i;
  if (length === undefined) {
    length = 0;
    for (i = 0; i < list.length; ++i) {
      length += list[i].length;
    }
  }

  var buffer = Buffer.allocUnsafe(length);
  var pos = 0;
  for (i = 0; i < list.length; ++i) {
    var buf = list[i];
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos);
    pos += buf.length;
  }
  return buffer
};

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string;
  }

  var len = string.length;
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
}
Buffer.byteLength = byteLength;

function slowToString (encoding, start, end) {
  var loweredCase = false;

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0;
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length;
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0;
  start >>>= 0;

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8';

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase();
        loweredCase = true;
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true;

function swap (b, n, m) {
  var i = b[n];
  b[n] = b[m];
  b[m] = i;
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length;
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1);
  }
  return this
};

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length;
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3);
    swap(this, i + 1, i + 2);
  }
  return this
};

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length;
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7);
    swap(this, i + 1, i + 6);
    swap(this, i + 2, i + 5);
    swap(this, i + 3, i + 4);
  }
  return this
};

Buffer.prototype.toString = function toString () {
  var length = this.length | 0;
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
};

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
};

Buffer.prototype.inspect = function inspect () {
  var str = '';
  var max = exports.INSPECT_MAX_BYTES;
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
    if (this.length > max) str += ' ... ';
  }
  return '<Buffer ' + str + '>'
};

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0;
  }
  if (end === undefined) {
    end = target ? target.length : 0;
  }
  if (thisStart === undefined) {
    thisStart = 0;
  }
  if (thisEnd === undefined) {
    thisEnd = this.length;
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0;
  end >>>= 0;
  thisStart >>>= 0;
  thisEnd >>>= 0;

  if (this === target) return 0

  var x = thisEnd - thisStart;
  var y = end - start;
  var len = Math.min(x, y);

  var thisCopy = this.slice(thisStart, thisEnd);
  var targetCopy = target.slice(start, end);

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i];
      y = targetCopy[i];
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
};

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset;
    byteOffset = 0;
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff;
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000;
  }
  byteOffset = +byteOffset;  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1);
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1;
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0;
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding);
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF; // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1;
  var arrLength = arr.length;
  var valLength = val.length;

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase();
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2;
      arrLength /= 2;
      valLength /= 2;
      byteOffset /= 2;
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i;
  if (dir) {
    var foundIndex = -1;
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i;
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex;
        foundIndex = -1;
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
    for (i = byteOffset; i >= 0; i--) {
      var found = true;
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false;
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
};

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
};

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
};

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0;
  var remaining = buf.length - offset;
  if (!length) {
    length = remaining;
  } else {
    length = Number(length);
    if (length > remaining) {
      length = remaining;
    }
  }

  // must be an even number of digits
  var strLen = string.length;
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2;
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16);
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed;
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8';
    length = this.length;
    offset = 0;
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset;
    length = this.length;
    offset = 0;
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0;
    if (isFinite(length)) {
      length = length | 0;
      if (encoding === undefined) encoding = 'utf8';
    } else {
      encoding = length;
      length = undefined;
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset;
  if (length === undefined || length > remaining) length = remaining;

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8';

  var loweredCase = false;
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase();
        loweredCase = true;
    }
  }
};

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
};

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64Js.fromByteArray(buf)
  } else {
    return base64Js.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end);
  var res = [];

  var i = start;
  while (i < end) {
    var firstByte = buf[i];
    var codePoint = null;
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1;

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint;

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte;
          }
          break
        case 2:
          secondByte = buf[i + 1];
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 3:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint;
            }
          }
          break
        case 4:
          secondByte = buf[i + 1];
          thirdByte = buf[i + 2];
          fourthByte = buf[i + 3];
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint;
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD;
      bytesPerSequence = 1;
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000;
      res.push(codePoint >>> 10 & 0x3FF | 0xD800);
      codePoint = 0xDC00 | codePoint & 0x3FF;
    }

    res.push(codePoint);
    i += bytesPerSequence;
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length;
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = '';
  var i = 0;
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    );
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F);
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = '';
  end = Math.min(buf.length, end);

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i]);
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length;

  if (!start || start < 0) start = 0;
  if (!end || end < 0 || end > len) end = len;

  var out = '';
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i]);
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end);
  var res = '';
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length;
  start = ~~start;
  end = end === undefined ? len : ~~end;

  if (start < 0) {
    start += len;
    if (start < 0) start = 0;
  } else if (start > len) {
    start = len;
  }

  if (end < 0) {
    end += len;
    if (end < 0) end = 0;
  } else if (end > len) {
    end = len;
  }

  if (end < start) end = start;

  var newBuf;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end);
    newBuf.__proto__ = Buffer.prototype;
  } else {
    var sliceLen = end - start;
    newBuf = new Buffer(sliceLen, undefined);
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start];
    }
  }

  return newBuf
};

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }

  return val
};

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length);
  }

  var val = this[offset + --byteLength];
  var mul = 1;
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul;
  }

  return val
};

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  return this[offset]
};

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return this[offset] | (this[offset + 1] << 8)
};

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  return (this[offset] << 8) | this[offset + 1]
};

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
};

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
};

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var val = this[offset];
  var mul = 1;
  var i = 0;
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) checkOffset(offset, byteLength, this.length);

  var i = byteLength;
  var mul = 1;
  var val = this[offset + --i];
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul;
  }
  mul *= 0x80;

  if (val >= mul) val -= Math.pow(2, 8 * byteLength);

  return val
};

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length);
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
};

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset] | (this[offset + 1] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length);
  var val = this[offset + 1] | (this[offset] << 8);
  return (val & 0x8000) ? val | 0xFFFF0000 : val
};

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
};

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
};

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, true, 23, 4)
};

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length);
  return ieee754.read(this, offset, false, 23, 4)
};

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, true, 52, 8)
};

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length);
  return ieee754.read(this, offset, false, 52, 8)
};

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var mul = 1;
  var i = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  byteLength = byteLength | 0;
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1;
    checkInt(this, value, offset, byteLength, maxBytes, 0);
  }

  var i = byteLength - 1;
  var mul = 1;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  this[offset] = (value & 0xff);
  return offset + 1
};

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8;
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1;
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24);
    this[offset + 2] = (value >>> 16);
    this[offset + 1] = (value >>> 8);
    this[offset] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = 0;
  var mul = 1;
  var sub = 0;
  this[offset] = value & 0xFF;
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1);

    checkInt(this, value, offset, byteLength, limit - 1, -limit);
  }

  var i = byteLength - 1;
  var mul = 1;
  var sub = 0;
  this[offset + i] = value & 0xFF;
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1;
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
  }

  return offset + byteLength
};

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
  if (value < 0) value = 0xff + value + 1;
  this[offset] = (value & 0xff);
  return offset + 1
};

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
  } else {
    objectWriteUInt16(this, value, offset, true);
  }
  return offset + 2
};

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8);
    this[offset + 1] = (value & 0xff);
  } else {
    objectWriteUInt16(this, value, offset, false);
  }
  return offset + 2
};

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff);
    this[offset + 1] = (value >>> 8);
    this[offset + 2] = (value >>> 16);
    this[offset + 3] = (value >>> 24);
  } else {
    objectWriteUInt32(this, value, offset, true);
  }
  return offset + 4
};

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value;
  offset = offset | 0;
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
  if (value < 0) value = 0xffffffff + value + 1;
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24);
    this[offset + 1] = (value >>> 16);
    this[offset + 2] = (value >>> 8);
    this[offset + 3] = (value & 0xff);
  } else {
    objectWriteUInt32(this, value, offset, false);
  }
  return offset + 4
};

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4);
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4);
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
};

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
};

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8);
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8);
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
};

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
};

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0;
  if (!end && end !== 0) end = this.length;
  if (targetStart >= target.length) targetStart = target.length;
  if (!targetStart) targetStart = 0;
  if (end > 0 && end < start) end = start;

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length;
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start;
  }

  var len = end - start;
  var i;

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start];
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start];
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    );
  }

  return len
};

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start;
      start = 0;
      end = this.length;
    } else if (typeof end === 'string') {
      encoding = end;
      end = this.length;
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0);
      if (code < 256) {
        val = code;
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255;
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0;
  end = end === undefined ? this.length : end >>> 0;

  if (!val) val = 0;

  var i;
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val;
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString());
    var len = bytes.length;
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len];
    }
  }

  return this
};

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '');
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '=';
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity;
  var codePoint;
  var length = string.length;
  var leadSurrogate = null;
  var bytes = [];

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i);

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          continue
        }

        // valid lead
        leadSurrogate = codePoint;

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        leadSurrogate = codePoint;
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
    }

    leadSurrogate = null;

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint);
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      );
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF);
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo;
  var byteArray = [];
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i);
    hi = c >> 8;
    lo = c % 256;
    byteArray.push(lo);
    byteArray.push(hi);
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64Js.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i];
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}
});

var bn = createCommonjsModule$1(function (module) {
(function (module, exports) {

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {
      Buffer = window.Buffer;
    } else {
      Buffer = buffer.Buffer;
    }
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
      this.negative = 1;
    }

    if (start < number.length) {
      if (base === 16) {
        this._parseHex(number, start, endian);
      } else {
        this._parseBase(number, base, start);
        if (endian === 'le') {
          this._initArray(this.toArray(), base, endian);
        }
      }
    }
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex4Bits (string, index) {
    var c = string.charCodeAt(index);
    // 'A' - 'F'
    if (c >= 65 && c <= 70) {
      return c - 55;
    // 'a' - 'f'
    } else if (c >= 97 && c <= 102) {
      return c - 87;
    // '0' - '9'
    } else {
      return (c - 48) & 0xf;
    }
  }

  function parseHexByte (string, lowerBound, index) {
    var r = parseHex4Bits(string, index);
    if (index - 1 >= lowerBound) {
      r |= parseHex4Bits(string, index - 1) << 4;
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start, endian) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    // 24-bits chunks
    var off = 0;
    var j = 0;

    var w;
    if (endian === 'be') {
      for (i = number.length - 1; i >= start; i -= 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    } else {
      var parseLength = number.length - start;
      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
        w = parseHexByte(number, start, i) << off;
        this.words[j] |= w & 0x3ffffff;
        if (off >= 18) {
          off -= 18;
          j += 1;
          this.words[j] |= w >>> 26;
        } else {
          off += 8;
        }
      }
    }

    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    this.strip();
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) ; else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      if (r.strip !== undefined) {
        // r is BN v4 instance
        r.strip();
      } else {
        // r is BN v5 instance
        r._strip();
      }
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(module, commonjsGlobal);
});

const version$j = "logger/5.5.0";

let _permanentCensorErrors = false;
let _censorErrors = false;
const LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
let _logLevel = LogLevels["default"];
let _globalLogger = null;
function _checkNormalize() {
    try {
        const missing = [];
        // Make sure all forms of normalization are supported
        ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
            try {
                if ("test".normalize(form) !== "test") {
                    throw new Error("bad normalize");
                }
                ;
            }
            catch (error) {
                missing.push(form);
            }
        });
        if (missing.length) {
            throw new Error("missing " + missing.join(", "));
        }
        if (String.fromCharCode(0xe9).normalize("NFD") !== String.fromCharCode(0x65, 0x0301)) {
            throw new Error("broken implementation");
        }
    }
    catch (error) {
        return error.message;
    }
    return null;
}
const _normalizeError = _checkNormalize();
var LogLevel;
(function (LogLevel) {
    LogLevel["DEBUG"] = "DEBUG";
    LogLevel["INFO"] = "INFO";
    LogLevel["WARNING"] = "WARNING";
    LogLevel["ERROR"] = "ERROR";
    LogLevel["OFF"] = "OFF";
})(LogLevel || (LogLevel = {}));
var ErrorCode;
(function (ErrorCode) {
    ///////////////////
    // Generic Errors
    // Unknown Error
    ErrorCode["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    // Not Implemented
    ErrorCode["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    // Unsupported Operation
    //   - operation
    ErrorCode["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)
    //   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)
    ErrorCode["NETWORK_ERROR"] = "NETWORK_ERROR";
    // Some sort of bad response from the server
    ErrorCode["SERVER_ERROR"] = "SERVER_ERROR";
    // Timeout
    ErrorCode["TIMEOUT"] = "TIMEOUT";
    ///////////////////
    // Operational  Errors
    // Buffer Overrun
    ErrorCode["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    // Numeric Fault
    //   - operation: the operation being executed
    //   - fault: the reason this faulted
    ErrorCode["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ///////////////////
    // Argument Errors
    // Missing new operator to an object
    //  - name: The name of the class
    ErrorCode["MISSING_NEW"] = "MISSING_NEW";
    // Invalid argument (e.g. value is incompatible with type) to a function:
    //   - argument: The argument name that was invalid
    //   - value: The value of the argument
    ErrorCode["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    // Missing argument to a function:
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    // Too many arguments
    //   - count: The number of arguments received
    //   - expectedCount: The number of arguments expected
    ErrorCode["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ///////////////////
    // Blockchain Errors
    // Call exception
    //  - transaction: the transaction
    //  - address?: the contract address
    //  - args?: The arguments passed into the function
    //  - method?: The Solidity method signature
    //  - errorSignature?: The EIP848 error signature
    //  - errorArgs?: The EIP848 error parameters
    //  - reason: The reason (only for EIP848 "Error(string)")
    ErrorCode["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    // Insufficient funds (< value + gasLimit * gasPrice)
    //   - transaction: the transaction attempted
    ErrorCode["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    // Nonce has already been used
    //   - transaction: the transaction attempted
    ErrorCode["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    // The replacement fee for the transaction is too low
    //   - transaction: the transaction attempted
    ErrorCode["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    // The gas limit could not be estimated
    //   - transaction: the transaction passed to estimateGas
    ErrorCode["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    // The transaction was replaced by one with a higher gas price
    //   - reason: "cancelled", "replaced" or "repriced"
    //   - cancelled: true if reason == "cancelled" or reason == "replaced")
    //   - hash: original transaction hash
    //   - replacement: the full TransactionsResponse for the replacement
    //   - receipt: the receipt of the replacement
    ErrorCode["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
})(ErrorCode || (ErrorCode = {}));
const HEX = "0123456789abcdef";
class Logger {
    constructor(version) {
        Object.defineProperty(this, "version", {
            enumerable: true,
            value: version,
            writable: false
        });
    }
    _log(logLevel, args) {
        const level = logLevel.toLowerCase();
        if (LogLevels[level] == null) {
            this.throwArgumentError("invalid log level name", "logLevel", logLevel);
        }
        if (_logLevel > LogLevels[level]) {
            return;
        }
        console.log.apply(console, args);
    }
    debug(...args) {
        this._log(Logger.levels.DEBUG, args);
    }
    info(...args) {
        this._log(Logger.levels.INFO, args);
    }
    warn(...args) {
        this._log(Logger.levels.WARNING, args);
    }
    makeError(message, code, params) {
        // Errors are being censored
        if (_censorErrors) {
            return this.makeError("censored error", code, {});
        }
        if (!code) {
            code = Logger.errors.UNKNOWN_ERROR;
        }
        if (!params) {
            params = {};
        }
        const messageDetails = [];
        Object.keys(params).forEach((key) => {
            const value = params[key];
            try {
                if (value instanceof Uint8Array) {
                    let hex = "";
                    for (let i = 0; i < value.length; i++) {
                        hex += HEX[value[i] >> 4];
                        hex += HEX[value[i] & 0x0f];
                    }
                    messageDetails.push(key + "=Uint8Array(0x" + hex + ")");
                }
                else {
                    messageDetails.push(key + "=" + JSON.stringify(value));
                }
            }
            catch (error) {
                messageDetails.push(key + "=" + JSON.stringify(params[key].toString()));
            }
        });
        messageDetails.push(`code=${code}`);
        messageDetails.push(`version=${this.version}`);
        const reason = message;
        if (messageDetails.length) {
            message += " (" + messageDetails.join(", ") + ")";
        }
        // @TODO: Any??
        const error = new Error(message);
        error.reason = reason;
        error.code = code;
        Object.keys(params).forEach(function (key) {
            error[key] = params[key];
        });
        return error;
    }
    throwError(message, code, params) {
        throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {
            argument: name,
            value: value
        });
    }
    assert(condition, message, code, params) {
        if (!!condition) {
            return;
        }
        this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
        if (!!condition) {
            return;
        }
        this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
        if (_normalizeError) {
            this.throwError("platform missing String.prototype.normalize", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "String.prototype.normalize", form: _normalizeError
            });
        }
    }
    checkSafeUint53(value, message) {
        if (typeof (value) !== "number") {
            return;
        }
        if (message == null) {
            message = "value not safe";
        }
        if (value < 0 || value >= 0x1fffffffffffff) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "out-of-safe-range",
                value: value
            });
        }
        if (value % 1) {
            this.throwError(message, Logger.errors.NUMERIC_FAULT, {
                operation: "checkSafeInteger",
                fault: "non-integer",
                value: value
            });
        }
    }
    checkArgumentCount(count, expectedCount, message) {
        if (message) {
            message = ": " + message;
        }
        else {
            message = "";
        }
        if (count < expectedCount) {
            this.throwError("missing argument" + message, Logger.errors.MISSING_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
        if (count > expectedCount) {
            this.throwError("too many arguments" + message, Logger.errors.UNEXPECTED_ARGUMENT, {
                count: count,
                expectedCount: expectedCount
            });
        }
    }
    checkNew(target, kind) {
        if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
        }
    }
    checkAbstract(target, kind) {
        if (target === kind) {
            this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
        }
        else if (target === Object || target == null) {
            this.throwError("missing new", Logger.errors.MISSING_NEW, { name: kind.name });
        }
    }
    static globalLogger() {
        if (!_globalLogger) {
            _globalLogger = new Logger(version$j);
        }
        return _globalLogger;
    }
    static setCensorship(censorship, permanent) {
        if (!censorship && permanent) {
            this.globalLogger().throwError("cannot permanently disable censorship", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        if (_permanentCensorErrors) {
            if (!censorship) {
                return;
            }
            this.globalLogger().throwError("error censorship permanent", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "setCensorship"
            });
        }
        _censorErrors = !!censorship;
        _permanentCensorErrors = !!permanent;
    }
    static setLogLevel(logLevel) {
        const level = LogLevels[logLevel.toLowerCase()];
        if (level == null) {
            Logger.globalLogger().warn("invalid log level - " + logLevel);
            return;
        }
        _logLevel = level;
    }
    static from(version) {
        return new Logger(version);
    }
}
Logger.errors = ErrorCode;
Logger.levels = LogLevel;

const version$i = "bytes/5.5.0";

const logger$p = new Logger(version$i);
///////////////////////////////
function isHexable(value) {
    return !!(value.toHexString);
}
function addSlice(array) {
    if (array.slice) {
        return array;
    }
    array.slice = function () {
        const args = Array.prototype.slice.call(arguments);
        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
}
function isBytesLike(value) {
    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));
}
function isInteger(value) {
    return (typeof (value) === "number" && value == value && (value % 1) === 0);
}
function isBytes(value) {
    if (value == null) {
        return false;
    }
    if (value.constructor === Uint8Array) {
        return true;
    }
    if (typeof (value) === "string") {
        return false;
    }
    if (!isInteger(value.length) || value.length < 0) {
        return false;
    }
    for (let i = 0; i < value.length; i++) {
        const v = value[i];
        if (!isInteger(v) || v < 0 || v >= 256) {
            return false;
        }
    }
    return true;
}
function arrayify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof (value) === "number") {
        logger$p.checkSafeUint53(value, "invalid arrayify value");
        const result = [];
        while (value) {
            result.unshift(value & 0xff);
            value = parseInt(String(value / 256));
        }
        if (result.length === 0) {
            result.push(0);
        }
        return addSlice(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        value = value.toHexString();
    }
    if (isHexString(value)) {
        let hex = value.substring(2);
        if (hex.length % 2) {
            if (options.hexPad === "left") {
                hex = "0x0" + hex.substring(2);
            }
            else if (options.hexPad === "right") {
                hex += "0";
            }
            else {
                logger$p.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        const result = [];
        for (let i = 0; i < hex.length; i += 2) {
            result.push(parseInt(hex.substring(i, i + 2), 16));
        }
        return addSlice(new Uint8Array(result));
    }
    if (isBytes(value)) {
        return addSlice(new Uint8Array(value));
    }
    return logger$p.throwArgumentError("invalid arrayify value", "value", value);
}
function concat(items) {
    const objects = items.map(item => arrayify(item));
    const length = objects.reduce((accum, item) => (accum + item.length), 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object) => {
        result.set(object, offset);
        return offset + object.length;
    }, 0);
    return addSlice(result);
}
function stripZeros(value) {
    let result = arrayify(value);
    if (result.length === 0) {
        return result;
    }
    // Find the first non-zero entry
    let start = 0;
    while (start < result.length && result[start] === 0) {
        start++;
    }
    // If we started with zeros, strip them
    if (start) {
        result = result.slice(start);
    }
    return result;
}
function zeroPad(value, length) {
    value = arrayify(value);
    if (value.length > length) {
        logger$p.throwArgumentError("value out of range", "value", arguments[0]);
    }
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice(result);
}
function isHexString(value, length) {
    if (typeof (value) !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
        return false;
    }
    if (length && value.length !== 2 + 2 * length) {
        return false;
    }
    return true;
}
const HexCharacters = "0123456789abcdef";
function hexlify(value, options) {
    if (!options) {
        options = {};
    }
    if (typeof (value) === "number") {
        logger$p.checkSafeUint53(value, "invalid hexlify value");
        let hex = "";
        while (value) {
            hex = HexCharacters[value & 0xf] + hex;
            value = Math.floor(value / 16);
        }
        if (hex.length) {
            if (hex.length % 2) {
                hex = "0" + hex;
            }
            return "0x" + hex;
        }
        return "0x00";
    }
    if (typeof (value) === "bigint") {
        value = value.toString(16);
        if (value.length % 2) {
            return ("0x0" + value);
        }
        return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof (value) === "string" && value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    if (isHexable(value)) {
        return value.toHexString();
    }
    if (isHexString(value)) {
        if (value.length % 2) {
            if (options.hexPad === "left") {
                value = "0x0" + value.substring(2);
            }
            else if (options.hexPad === "right") {
                value += "0";
            }
            else {
                logger$p.throwArgumentError("hex data is odd-length", "value", value);
            }
        }
        return value.toLowerCase();
    }
    if (isBytes(value)) {
        let result = "0x";
        for (let i = 0; i < value.length; i++) {
            let v = value[i];
            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];
        }
        return result;
    }
    return logger$p.throwArgumentError("invalid hexlify value", "value", value);
}
/*
function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
    if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
        return "0x0" + value.substring(2);
    }
    return value;
}
*/
function hexDataLength(data) {
    if (typeof (data) !== "string") {
        data = hexlify(data);
    }
    else if (!isHexString(data) || (data.length % 2)) {
        return null;
    }
    return (data.length - 2) / 2;
}
function hexDataSlice(data, offset, endOffset) {
    if (typeof (data) !== "string") {
        data = hexlify(data);
    }
    else if (!isHexString(data) || (data.length % 2)) {
        logger$p.throwArgumentError("invalid hexData", "value", data);
    }
    offset = 2 + 2 * offset;
    if (endOffset != null) {
        return "0x" + data.substring(offset, 2 + 2 * endOffset);
    }
    return "0x" + data.substring(offset);
}
function hexConcat(items) {
    let result = "0x";
    items.forEach((item) => {
        result += hexlify(item).substring(2);
    });
    return result;
}
function hexValue(value) {
    const trimmed = hexStripZeros(hexlify(value, { hexPad: "left" }));
    if (trimmed === "0x") {
        return "0x0";
    }
    return trimmed;
}
function hexStripZeros(value) {
    if (typeof (value) !== "string") {
        value = hexlify(value);
    }
    if (!isHexString(value)) {
        logger$p.throwArgumentError("invalid hex string", "value", value);
    }
    value = value.substring(2);
    let offset = 0;
    while (offset < value.length && value[offset] === "0") {
        offset++;
    }
    return "0x" + value.substring(offset);
}
function hexZeroPad(value, length) {
    if (typeof (value) !== "string") {
        value = hexlify(value);
    }
    else if (!isHexString(value)) {
        logger$p.throwArgumentError("invalid hex string", "value", value);
    }
    if (value.length > 2 * length + 2) {
        logger$p.throwArgumentError("value out of range", "value", arguments[1]);
    }
    while (value.length < 2 * length + 2) {
        value = "0x0" + value.substring(2);
    }
    return value;
}
function splitSignature(signature) {
    const result = {
        r: "0x",
        s: "0x",
        _vs: "0x",
        recoveryParam: 0,
        v: 0
    };
    if (isBytesLike(signature)) {
        const bytes = arrayify(signature);
        if (bytes.length !== 65) {
            logger$p.throwArgumentError("invalid signature string; must be 65 bytes", "signature", signature);
        }
        // Get the r, s and v
        result.r = hexlify(bytes.slice(0, 32));
        result.s = hexlify(bytes.slice(32, 64));
        result.v = bytes[64];
        // Allow a recid to be used as the v
        if (result.v < 27) {
            if (result.v === 0 || result.v === 1) {
                result.v += 27;
            }
            else {
                logger$p.throwArgumentError("signature invalid v byte", "signature", signature);
            }
        }
        // Compute recoveryParam from v
        result.recoveryParam = 1 - (result.v % 2);
        // Compute _vs from recoveryParam and s
        if (result.recoveryParam) {
            bytes[32] |= 0x80;
        }
        result._vs = hexlify(bytes.slice(32, 64));
    }
    else {
        result.r = signature.r;
        result.s = signature.s;
        result.v = signature.v;
        result.recoveryParam = signature.recoveryParam;
        result._vs = signature._vs;
        // If the _vs is available, use it to populate missing s, v and recoveryParam
        // and verify non-missing s, v and recoveryParam
        if (result._vs != null) {
            const vs = zeroPad(arrayify(result._vs), 32);
            result._vs = hexlify(vs);
            // Set or check the recid
            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);
            if (result.recoveryParam == null) {
                result.recoveryParam = recoveryParam;
            }
            else if (result.recoveryParam !== recoveryParam) {
                logger$p.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature);
            }
            // Set or check the s
            vs[0] &= 0x7f;
            const s = hexlify(vs);
            if (result.s == null) {
                result.s = s;
            }
            else if (result.s !== s) {
                logger$p.throwArgumentError("signature v mismatch _vs", "signature", signature);
            }
        }
        // Use recid and v to populate each other
        if (result.recoveryParam == null) {
            if (result.v == null) {
                logger$p.throwArgumentError("signature missing v and recoveryParam", "signature", signature);
            }
            else if (result.v === 0 || result.v === 1) {
                result.recoveryParam = result.v;
            }
            else {
                result.recoveryParam = 1 - (result.v % 2);
            }
        }
        else {
            if (result.v == null) {
                result.v = 27 + result.recoveryParam;
            }
            else {
                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));
                if (result.recoveryParam !== recId) {
                    logger$p.throwArgumentError("signature recoveryParam mismatch v", "signature", signature);
                }
            }
        }
        if (result.r == null || !isHexString(result.r)) {
            logger$p.throwArgumentError("signature missing or invalid r", "signature", signature);
        }
        else {
            result.r = hexZeroPad(result.r, 32);
        }
        if (result.s == null || !isHexString(result.s)) {
            logger$p.throwArgumentError("signature missing or invalid s", "signature", signature);
        }
        else {
            result.s = hexZeroPad(result.s, 32);
        }
        const vs = arrayify(result.s);
        if (vs[0] >= 128) {
            logger$p.throwArgumentError("signature s out of range", "signature", signature);
        }
        if (result.recoveryParam) {
            vs[0] |= 0x80;
        }
        const _vs = hexlify(vs);
        if (result._vs) {
            if (!isHexString(result._vs)) {
                logger$p.throwArgumentError("signature invalid _vs", "signature", signature);
            }
            result._vs = hexZeroPad(result._vs, 32);
        }
        // Set or check the _vs
        if (result._vs == null) {
            result._vs = _vs;
        }
        else if (result._vs !== _vs) {
            logger$p.throwArgumentError("signature _vs mismatch v and s", "signature", signature);
        }
    }
    return result;
}

const version$h = "bignumber/5.5.0";

var BN = bn.BN;
const logger$o = new Logger(version$h);
const _constructorGuard$3 = {};
const MAX_SAFE = 0x1fffffffffffff;
function isBigNumberish(value) {
    return (value != null) && (BigNumber.isBigNumber(value) ||
        (typeof (value) === "number" && (value % 1) === 0) ||
        (typeof (value) === "string" && !!value.match(/^-?[0-9]+$/)) ||
        isHexString(value) ||
        (typeof (value) === "bigint") ||
        isBytes(value));
}
// Only warn about passing 10 into radix once
let _warnedToStringRadix = false;
class BigNumber {
    constructor(constructorGuard, hex) {
        logger$o.checkNew(new.target, BigNumber);
        if (constructorGuard !== _constructorGuard$3) {
            logger$o.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new (BigNumber)"
            });
        }
        this._hex = hex;
        this._isBigNumber = true;
        Object.freeze(this);
    }
    fromTwos(value) {
        return toBigNumber(toBN(this).fromTwos(value));
    }
    toTwos(value) {
        return toBigNumber(toBN(this).toTwos(value));
    }
    abs() {
        if (this._hex[0] === "-") {
            return BigNumber.from(this._hex.substring(1));
        }
        return this;
    }
    add(other) {
        return toBigNumber(toBN(this).add(toBN(other)));
    }
    sub(other) {
        return toBigNumber(toBN(this).sub(toBN(other)));
    }
    div(other) {
        const o = BigNumber.from(other);
        if (o.isZero()) {
            throwFault$1("division by zero", "div");
        }
        return toBigNumber(toBN(this).div(toBN(other)));
    }
    mul(other) {
        return toBigNumber(toBN(this).mul(toBN(other)));
    }
    mod(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault$1("cannot modulo negative values", "mod");
        }
        return toBigNumber(toBN(this).umod(value));
    }
    pow(other) {
        const value = toBN(other);
        if (value.isNeg()) {
            throwFault$1("cannot raise to negative values", "pow");
        }
        return toBigNumber(toBN(this).pow(value));
    }
    and(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault$1("cannot 'and' negative values", "and");
        }
        return toBigNumber(toBN(this).and(value));
    }
    or(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault$1("cannot 'or' negative values", "or");
        }
        return toBigNumber(toBN(this).or(value));
    }
    xor(other) {
        const value = toBN(other);
        if (this.isNegative() || value.isNeg()) {
            throwFault$1("cannot 'xor' negative values", "xor");
        }
        return toBigNumber(toBN(this).xor(value));
    }
    mask(value) {
        if (this.isNegative() || value < 0) {
            throwFault$1("cannot mask negative values", "mask");
        }
        return toBigNumber(toBN(this).maskn(value));
    }
    shl(value) {
        if (this.isNegative() || value < 0) {
            throwFault$1("cannot shift negative values", "shl");
        }
        return toBigNumber(toBN(this).shln(value));
    }
    shr(value) {
        if (this.isNegative() || value < 0) {
            throwFault$1("cannot shift negative values", "shr");
        }
        return toBigNumber(toBN(this).shrn(value));
    }
    eq(other) {
        return toBN(this).eq(toBN(other));
    }
    lt(other) {
        return toBN(this).lt(toBN(other));
    }
    lte(other) {
        return toBN(this).lte(toBN(other));
    }
    gt(other) {
        return toBN(this).gt(toBN(other));
    }
    gte(other) {
        return toBN(this).gte(toBN(other));
    }
    isNegative() {
        return (this._hex[0] === "-");
    }
    isZero() {
        return toBN(this).isZero();
    }
    toNumber() {
        try {
            return toBN(this).toNumber();
        }
        catch (error) {
            throwFault$1("overflow", "toNumber", this.toString());
        }
        return null;
    }
    toBigInt() {
        try {
            return BigInt(this.toString());
        }
        catch (e) { }
        return logger$o.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
            value: this.toString()
        });
    }
    toString() {
        // Lots of people expect this, which we do not support, so check (See: #889)
        if (arguments.length > 0) {
            if (arguments[0] === 10) {
                if (!_warnedToStringRadix) {
                    _warnedToStringRadix = true;
                    logger$o.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
                }
            }
            else if (arguments[0] === 16) {
                logger$o.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
            }
            else {
                logger$o.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
            }
        }
        return toBN(this).toString(10);
    }
    toHexString() {
        return this._hex;
    }
    toJSON(key) {
        return { type: "BigNumber", hex: this.toHexString() };
    }
    static from(value) {
        if (value instanceof BigNumber) {
            return value;
        }
        if (typeof (value) === "string") {
            if (value.match(/^-?0x[0-9a-f]+$/i)) {
                return new BigNumber(_constructorGuard$3, toHex$1(value));
            }
            if (value.match(/^-?[0-9]+$/)) {
                return new BigNumber(_constructorGuard$3, toHex$1(new BN(value)));
            }
            return logger$o.throwArgumentError("invalid BigNumber string", "value", value);
        }
        if (typeof (value) === "number") {
            if (value % 1) {
                throwFault$1("underflow", "BigNumber.from", value);
            }
            if (value >= MAX_SAFE || value <= -MAX_SAFE) {
                throwFault$1("overflow", "BigNumber.from", value);
            }
            return BigNumber.from(String(value));
        }
        const anyValue = value;
        if (typeof (anyValue) === "bigint") {
            return BigNumber.from(anyValue.toString());
        }
        if (isBytes(anyValue)) {
            return BigNumber.from(hexlify(anyValue));
        }
        if (anyValue) {
            // Hexable interface (takes priority)
            if (anyValue.toHexString) {
                const hex = anyValue.toHexString();
                if (typeof (hex) === "string") {
                    return BigNumber.from(hex);
                }
            }
            else {
                // For now, handle legacy JSON-ified values (goes away in v6)
                let hex = anyValue._hex;
                // New-form JSON
                if (hex == null && anyValue.type === "BigNumber") {
                    hex = anyValue.hex;
                }
                if (typeof (hex) === "string") {
                    if (isHexString(hex) || (hex[0] === "-" && isHexString(hex.substring(1)))) {
                        return BigNumber.from(hex);
                    }
                }
            }
        }
        return logger$o.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
        return !!(value && value._isBigNumber);
    }
}
// Normalize the hex string
function toHex$1(value) {
    // For BN, call on the hex string
    if (typeof (value) !== "string") {
        return toHex$1(value.toString(16));
    }
    // If negative, prepend the negative sign to the normalized positive value
    if (value[0] === "-") {
        // Strip off the negative sign
        value = value.substring(1);
        // Cannot have multiple negative signs (e.g. "--0x04")
        if (value[0] === "-") {
            logger$o.throwArgumentError("invalid hex", "value", value);
        }
        // Call toHex on the positive component
        value = toHex$1(value);
        // Do not allow "-0x00"
        if (value === "0x00") {
            return value;
        }
        // Negate the value
        return "-" + value;
    }
    // Add a "0x" prefix if missing
    if (value.substring(0, 2) !== "0x") {
        value = "0x" + value;
    }
    // Normalize zero
    if (value === "0x") {
        return "0x00";
    }
    // Make the string even length
    if (value.length % 2) {
        value = "0x0" + value.substring(2);
    }
    // Trim to smallest even-length string
    while (value.length > 4 && value.substring(0, 4) === "0x00") {
        value = "0x" + value.substring(4);
    }
    return value;
}
function toBigNumber(value) {
    return BigNumber.from(toHex$1(value));
}
function toBN(value) {
    const hex = BigNumber.from(value).toHexString();
    if (hex[0] === "-") {
        return (new BN("-" + hex.substring(3), 16));
    }
    return new BN(hex.substring(2), 16);
}
function throwFault$1(fault, operation, value) {
    const params = { fault: fault, operation: operation };
    if (value != null) {
        params.value = value;
    }
    return logger$o.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
}
// value should have no prefix
function _base36To16(value) {
    return (new BN(value, 36)).toString(16);
}

const logger$n = new Logger(version$h);
const _constructorGuard$2 = {};
const Zero$2 = BigNumber.from(0);
const NegativeOne$2 = BigNumber.from(-1);
function throwFault(message, fault, operation, value) {
    const params = { fault: fault, operation: operation };
    if (value !== undefined) {
        params.value = value;
    }
    return logger$n.throwError(message, Logger.errors.NUMERIC_FAULT, params);
}
// Constant to pull zeros from for multipliers
let zeros = "0";
while (zeros.length < 256) {
    zeros += zeros;
}
// Returns a string "1" followed by decimal "0"s
function getMultiplier(decimals) {
    if (typeof (decimals) !== "number") {
        try {
            decimals = BigNumber.from(decimals).toNumber();
        }
        catch (e) { }
    }
    if (typeof (decimals) === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
        return ("1" + zeros.substring(0, decimals));
    }
    return logger$n.throwArgumentError("invalid decimal size", "decimals", decimals);
}
function formatFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    // Make sure wei is a big number (convert as necessary)
    value = BigNumber.from(value);
    const negative = value.lt(Zero$2);
    if (negative) {
        value = value.mul(NegativeOne$2);
    }
    let fraction = value.mod(multiplier).toString();
    while (fraction.length < multiplier.length - 1) {
        fraction = "0" + fraction;
    }
    // Strip training 0
    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    const whole = value.div(multiplier).toString();
    if (multiplier.length === 1) {
        value = whole;
    }
    else {
        value = whole + "." + fraction;
    }
    if (negative) {
        value = "-" + value;
    }
    return value;
}
function parseFixed(value, decimals) {
    if (decimals == null) {
        decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    if (typeof (value) !== "string" || !value.match(/^-?[0-9.]+$/)) {
        logger$n.throwArgumentError("invalid decimal value", "value", value);
    }
    // Is it negative?
    const negative = (value.substring(0, 1) === "-");
    if (negative) {
        value = value.substring(1);
    }
    if (value === ".") {
        logger$n.throwArgumentError("missing value", "value", value);
    }
    // Split it into a whole and fractional part
    const comps = value.split(".");
    if (comps.length > 2) {
        logger$n.throwArgumentError("too many decimal points", "value", value);
    }
    let whole = comps[0], fraction = comps[1];
    if (!whole) {
        whole = "0";
    }
    if (!fraction) {
        fraction = "0";
    }
    // Trim trailing zeros
    while (fraction[fraction.length - 1] === "0") {
        fraction = fraction.substring(0, fraction.length - 1);
    }
    // Check the fraction doesn't exceed our decimals size
    if (fraction.length > multiplier.length - 1) {
        throwFault("fractional component exceeds decimals", "underflow", "parseFixed");
    }
    // If decimals is 0, we have an empty string for fraction
    if (fraction === "") {
        fraction = "0";
    }
    // Fully pad the string with zeros to get to wei
    while (fraction.length < multiplier.length - 1) {
        fraction += "0";
    }
    const wholeValue = BigNumber.from(whole);
    const fractionValue = BigNumber.from(fraction);
    let wei = (wholeValue.mul(multiplier)).add(fractionValue);
    if (negative) {
        wei = wei.mul(NegativeOne$2);
    }
    return wei;
}
class FixedFormat {
    constructor(constructorGuard, signed, width, decimals) {
        if (constructorGuard !== _constructorGuard$2) {
            logger$n.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.signed = signed;
        this.width = width;
        this.decimals = decimals;
        this.name = (signed ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
        this._multiplier = getMultiplier(decimals);
        Object.freeze(this);
    }
    static from(value) {
        if (value instanceof FixedFormat) {
            return value;
        }
        if (typeof (value) === "number") {
            value = `fixed128x${value}`;
        }
        let signed = true;
        let width = 128;
        let decimals = 18;
        if (typeof (value) === "string") {
            if (value === "fixed") ;
            else if (value === "ufixed") {
                signed = false;
            }
            else {
                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
                if (!match) {
                    logger$n.throwArgumentError("invalid fixed format", "format", value);
                }
                signed = (match[1] !== "u");
                width = parseInt(match[2]);
                decimals = parseInt(match[3]);
            }
        }
        else if (value) {
            const check = (key, type, defaultValue) => {
                if (value[key] == null) {
                    return defaultValue;
                }
                if (typeof (value[key]) !== type) {
                    logger$n.throwArgumentError("invalid fixed format (" + key + " not " + type + ")", "format." + key, value[key]);
                }
                return value[key];
            };
            signed = check("signed", "boolean", signed);
            width = check("width", "number", width);
            decimals = check("decimals", "number", decimals);
        }
        if (width % 8) {
            logger$n.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
        }
        if (decimals > 80) {
            logger$n.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
        }
        return new FixedFormat(_constructorGuard$2, signed, width, decimals);
    }
}
class FixedNumber {
    constructor(constructorGuard, hex, value, format) {
        logger$n.checkNew(new.target, FixedNumber);
        if (constructorGuard !== _constructorGuard$2) {
            logger$n.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new FixedFormat"
            });
        }
        this.format = format;
        this._hex = hex;
        this._value = value;
        this._isFixedNumber = true;
        Object.freeze(this);
    }
    _checkFormat(other) {
        if (this.format.name !== other.format.name) {
            logger$n.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
        }
    }
    addUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
    }
    subUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
    }
    mulUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
    divUnsafe(other) {
        this._checkFormat(other);
        const a = parseFixed(this._value, this.format.decimals);
        const b = parseFixed(other._value, other.format.decimals);
        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
    floor() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (this.isNegative() && hasFraction) {
            result = result.subUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    ceiling() {
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        let result = FixedNumber.from(comps[0], this.format);
        const hasFraction = !comps[1].match(/^(0*)$/);
        if (!this.isNegative() && hasFraction) {
            result = result.addUnsafe(ONE.toFormat(result.format));
        }
        return result;
    }
    // @TODO: Support other rounding algorithms
    round(decimals) {
        if (decimals == null) {
            decimals = 0;
        }
        // If we are already in range, we're done
        const comps = this.toString().split(".");
        if (comps.length === 1) {
            comps.push("0");
        }
        if (decimals < 0 || decimals > 80 || (decimals % 1)) {
            logger$n.throwArgumentError("invalid decimal count", "decimals", decimals);
        }
        if (comps[1].length <= decimals) {
            return this;
        }
        const factor = FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
        const bump = BUMP.toFormat(this.format);
        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
    isZero() {
        return (this._value === "0.0" || this._value === "0");
    }
    isNegative() {
        return (this._value[0] === "-");
    }
    toString() { return this._value; }
    toHexString(width) {
        if (width == null) {
            return this._hex;
        }
        if (width % 8) {
            logger$n.throwArgumentError("invalid byte width", "width", width);
        }
        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
        return hexZeroPad(hex, width / 8);
    }
    toUnsafeFloat() { return parseFloat(this.toString()); }
    toFormat(format) {
        return FixedNumber.fromString(this._value, format);
    }
    static fromValue(value, decimals, format) {
        // If decimals looks more like a format, and there is no format, shift the parameters
        if (format == null && decimals != null && !isBigNumberish(decimals)) {
            format = decimals;
            decimals = null;
        }
        if (decimals == null) {
            decimals = 0;
        }
        if (format == null) {
            format = "fixed";
        }
        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
    }
    static fromString(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        const numeric = parseFixed(value, fixedFormat.decimals);
        if (!fixedFormat.signed && numeric.lt(Zero$2)) {
            throwFault("unsigned value cannot be negative", "overflow", "value", value);
        }
        let hex = null;
        if (fixedFormat.signed) {
            hex = numeric.toTwos(fixedFormat.width).toHexString();
        }
        else {
            hex = numeric.toHexString();
            hex = hexZeroPad(hex, fixedFormat.width / 8);
        }
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard$2, hex, decimal, fixedFormat);
    }
    static fromBytes(value, format) {
        if (format == null) {
            format = "fixed";
        }
        const fixedFormat = FixedFormat.from(format);
        if (arrayify(value).length > fixedFormat.width / 8) {
            throw new Error("overflow");
        }
        let numeric = BigNumber.from(value);
        if (fixedFormat.signed) {
            numeric = numeric.fromTwos(fixedFormat.width);
        }
        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
        const decimal = formatFixed(numeric, fixedFormat.decimals);
        return new FixedNumber(_constructorGuard$2, hex, decimal, fixedFormat);
    }
    static from(value, format) {
        if (typeof (value) === "string") {
            return FixedNumber.fromString(value, format);
        }
        if (isBytes(value)) {
            return FixedNumber.fromBytes(value, format);
        }
        try {
            return FixedNumber.fromValue(value, 0, format);
        }
        catch (error) {
            // Allow NUMERIC_FAULT to bubble up
            if (error.code !== Logger.errors.INVALID_ARGUMENT) {
                throw error;
            }
        }
        return logger$n.throwArgumentError("invalid FixedNumber value", "value", value);
    }
    static isFixedNumber(value) {
        return !!(value && value._isFixedNumber);
    }
}
const ONE = FixedNumber.from(1);
const BUMP = FixedNumber.from("0.5");

const version$g = "properties/5.5.0";

var __awaiter$8 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$m = new Logger(version$g);
function defineReadOnly(object, name, value) {
    Object.defineProperty(object, name, {
        enumerable: true,
        value: value,
        writable: false,
    });
}
// Crawl up the constructor chain to find a static method
function getStatic(ctor, key) {
    for (let i = 0; i < 32; i++) {
        if (ctor[key]) {
            return ctor[key];
        }
        if (!ctor.prototype || typeof (ctor.prototype) !== "object") {
            break;
        }
        ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
}
function resolveProperties(object) {
    return __awaiter$8(this, void 0, void 0, function* () {
        const promises = Object.keys(object).map((key) => {
            const value = object[key];
            return Promise.resolve(value).then((v) => ({ key: key, value: v }));
        });
        const results = yield Promise.all(promises);
        return results.reduce((accum, result) => {
            accum[(result.key)] = result.value;
            return accum;
        }, {});
    });
}
function checkProperties(object, properties) {
    if (!object || typeof (object) !== "object") {
        logger$m.throwArgumentError("invalid object", "object", object);
    }
    Object.keys(object).forEach((key) => {
        if (!properties[key]) {
            logger$m.throwArgumentError("invalid object key - " + key, "transaction:" + key, object);
        }
    });
}
function shallowCopy(object) {
    const result = {};
    for (const key in object) {
        result[key] = object[key];
    }
    return result;
}
const opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
function _isFrozen(object) {
    // Opaque objects are not mutable, so safe to copy by assignment
    if (object === undefined || object === null || opaque[typeof (object)]) {
        return true;
    }
    if (Array.isArray(object) || typeof (object) === "object") {
        if (!Object.isFrozen(object)) {
            return false;
        }
        const keys = Object.keys(object);
        for (let i = 0; i < keys.length; i++) {
            let value = null;
            try {
                value = object[keys[i]];
            }
            catch (error) {
                // If accessing a value triggers an error, it is a getter
                // designed to do so (e.g. Result) and is therefore "frozen"
                continue;
            }
            if (!_isFrozen(value)) {
                return false;
            }
        }
        return true;
    }
    return logger$m.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
}
// Returns a new copy of object, such that no properties may be replaced.
// New properties may be added only to objects.
function _deepCopy(object) {
    if (_isFrozen(object)) {
        return object;
    }
    // Arrays are mutable, so we need to create a copy
    if (Array.isArray(object)) {
        return Object.freeze(object.map((item) => deepCopy(item)));
    }
    if (typeof (object) === "object") {
        const result = {};
        for (const key in object) {
            const value = object[key];
            if (value === undefined) {
                continue;
            }
            defineReadOnly(result, key, deepCopy(value));
        }
        return result;
    }
    return logger$m.throwArgumentError(`Cannot deepCopy ${typeof (object)}`, "object", object);
}
function deepCopy(object) {
    return _deepCopy(object);
}
class Description {
    constructor(info) {
        for (const key in info) {
            this[key] = deepCopy(info[key]);
        }
    }
}

const version$f = "abi/5.5.0";

const logger$l = new Logger(version$f);
const _constructorGuard$1 = {};
let ModifiersBytes = { calldata: true, memory: true, storage: true };
let ModifiersNest = { calldata: true, memory: true };
function checkModifier(type, name) {
    if (type === "bytes" || type === "string") {
        if (ModifiersBytes[name]) {
            return true;
        }
    }
    else if (type === "address") {
        if (name === "payable") {
            return true;
        }
    }
    else if (type.indexOf("[") >= 0 || type === "tuple") {
        if (ModifiersNest[name]) {
            return true;
        }
    }
    if (ModifiersBytes[name] || name === "payable") {
        logger$l.throwArgumentError("invalid modifier", "name", name);
    }
    return false;
}
// @TODO: Make sure that children of an indexed tuple are marked with a null indexed
function parseParamType(param, allowIndexed) {
    let originalParam = param;
    function throwError(i) {
        logger$l.throwArgumentError(`unexpected character at position ${i}`, "param", param);
    }
    param = param.replace(/\s/g, " ");
    function newNode(parent) {
        let node = { type: "", name: "", parent: parent, state: { allowType: true } };
        if (allowIndexed) {
            node.indexed = false;
        }
        return node;
    }
    let parent = { type: "", name: "", state: { allowType: true } };
    let node = parent;
    for (let i = 0; i < param.length; i++) {
        let c = param[i];
        switch (c) {
            case "(":
                if (node.state.allowType && node.type === "") {
                    node.type = "tuple";
                }
                else if (!node.state.allowParams) {
                    throwError(i);
                }
                node.state.allowType = false;
                node.type = verifyType(node.type);
                node.components = [newNode(node)];
                node = node.components[0];
                break;
            case ")":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) {
                        throwError(i);
                    }
                    node.indexed = true;
                    node.name = "";
                }
                if (checkModifier(node.type, node.name)) {
                    node.name = "";
                }
                node.type = verifyType(node.type);
                let child = node;
                node = node.parent;
                if (!node) {
                    throwError(i);
                }
                delete child.parent;
                node.state.allowParams = false;
                node.state.allowName = true;
                node.state.allowArray = true;
                break;
            case ",":
                delete node.state;
                if (node.name === "indexed") {
                    if (!allowIndexed) {
                        throwError(i);
                    }
                    node.indexed = true;
                    node.name = "";
                }
                if (checkModifier(node.type, node.name)) {
                    node.name = "";
                }
                node.type = verifyType(node.type);
                let sibling = newNode(node.parent);
                //{ type: "", name: "", parent: node.parent, state: { allowType: true } };
                node.parent.components.push(sibling);
                delete node.parent;
                node = sibling;
                break;
            // Hit a space...
            case " ":
                // If reading type, the type is done and may read a param or name
                if (node.state.allowType) {
                    if (node.type !== "") {
                        node.type = verifyType(node.type);
                        delete node.state.allowType;
                        node.state.allowName = true;
                        node.state.allowParams = true;
                    }
                }
                // If reading name, the name is done
                if (node.state.allowName) {
                    if (node.name !== "") {
                        if (node.name === "indexed") {
                            if (!allowIndexed) {
                                throwError(i);
                            }
                            if (node.indexed) {
                                throwError(i);
                            }
                            node.indexed = true;
                            node.name = "";
                        }
                        else if (checkModifier(node.type, node.name)) {
                            node.name = "";
                        }
                        else {
                            node.state.allowName = false;
                        }
                    }
                }
                break;
            case "[":
                if (!node.state.allowArray) {
                    throwError(i);
                }
                node.type += c;
                node.state.allowArray = false;
                node.state.allowName = false;
                node.state.readArray = true;
                break;
            case "]":
                if (!node.state.readArray) {
                    throwError(i);
                }
                node.type += c;
                node.state.readArray = false;
                node.state.allowArray = true;
                node.state.allowName = true;
                break;
            default:
                if (node.state.allowType) {
                    node.type += c;
                    node.state.allowParams = true;
                    node.state.allowArray = true;
                }
                else if (node.state.allowName) {
                    node.name += c;
                    delete node.state.allowArray;
                }
                else if (node.state.readArray) {
                    node.type += c;
                }
                else {
                    throwError(i);
                }
        }
    }
    if (node.parent) {
        logger$l.throwArgumentError("unexpected eof", "param", param);
    }
    delete parent.state;
    if (node.name === "indexed") {
        if (!allowIndexed) {
            throwError(originalParam.length - 7);
        }
        if (node.indexed) {
            throwError(originalParam.length - 7);
        }
        node.indexed = true;
        node.name = "";
    }
    else if (checkModifier(node.type, node.name)) {
        node.name = "";
    }
    parent.type = verifyType(parent.type);
    return parent;
}
function populate(object, params) {
    for (let key in params) {
        defineReadOnly(object, key, params[key]);
    }
}
const FormatTypes = Object.freeze({
    // Bare formatting, as is needed for computing a sighash of an event or function
    sighash: "sighash",
    // Human-Readable with Minimal spacing and without names (compact human-readable)
    minimal: "minimal",
    // Human-Readable with nice spacing, including all names
    full: "full",
    // JSON-format a la Solidity
    json: "json"
});
const paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/);
class ParamType {
    constructor(constructorGuard, params) {
        if (constructorGuard !== _constructorGuard$1) {
            logger$l.throwError("use fromString", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new ParamType()"
            });
        }
        populate(this, params);
        let match = this.type.match(paramTypeArray);
        if (match) {
            populate(this, {
                arrayLength: parseInt(match[2] || "-1"),
                arrayChildren: ParamType.fromObject({
                    type: match[1],
                    components: this.components
                }),
                baseType: "array"
            });
        }
        else {
            populate(this, {
                arrayLength: null,
                arrayChildren: null,
                baseType: ((this.components != null) ? "tuple" : this.type)
            });
        }
        this._isParamType = true;
        Object.freeze(this);
    }
    // Format the parameter fragment
    //   - sighash: "(uint256,address)"
    //   - minimal: "tuple(uint256,address) indexed"
    //   - full:    "tuple(uint256 foo, address bar) indexed baz"
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger$l.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            let result = {
                type: ((this.baseType === "tuple") ? "tuple" : this.type),
                name: (this.name || undefined)
            };
            if (typeof (this.indexed) === "boolean") {
                result.indexed = this.indexed;
            }
            if (this.components) {
                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));
            }
            return JSON.stringify(result);
        }
        let result = "";
        // Array
        if (this.baseType === "array") {
            result += this.arrayChildren.format(format);
            result += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]";
        }
        else {
            if (this.baseType === "tuple") {
                if (format !== FormatTypes.sighash) {
                    result += this.type;
                }
                result += "(" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ")";
            }
            else {
                result += this.type;
            }
        }
        if (format !== FormatTypes.sighash) {
            if (this.indexed === true) {
                result += " indexed";
            }
            if (format === FormatTypes.full && this.name) {
                result += " " + this.name;
            }
        }
        return result;
    }
    static from(value, allowIndexed) {
        if (typeof (value) === "string") {
            return ParamType.fromString(value, allowIndexed);
        }
        return ParamType.fromObject(value);
    }
    static fromObject(value) {
        if (ParamType.isParamType(value)) {
            return value;
        }
        return new ParamType(_constructorGuard$1, {
            name: (value.name || null),
            type: verifyType(value.type),
            indexed: ((value.indexed == null) ? null : !!value.indexed),
            components: (value.components ? value.components.map(ParamType.fromObject) : null)
        });
    }
    static fromString(value, allowIndexed) {
        function ParamTypify(node) {
            return ParamType.fromObject({
                name: node.name,
                type: node.type,
                indexed: node.indexed,
                components: node.components
            });
        }
        return ParamTypify(parseParamType(value, !!allowIndexed));
    }
    static isParamType(value) {
        return !!(value != null && value._isParamType);
    }
}
function parseParams(value, allowIndex) {
    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));
}
class Fragment {
    constructor(constructorGuard, params) {
        if (constructorGuard !== _constructorGuard$1) {
            logger$l.throwError("use a static from method", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "new Fragment()"
            });
        }
        populate(this, params);
        this._isFragment = true;
        Object.freeze(this);
    }
    static from(value) {
        if (Fragment.isFragment(value)) {
            return value;
        }
        if (typeof (value) === "string") {
            return Fragment.fromString(value);
        }
        return Fragment.fromObject(value);
    }
    static fromObject(value) {
        if (Fragment.isFragment(value)) {
            return value;
        }
        switch (value.type) {
            case "function":
                return FunctionFragment.fromObject(value);
            case "event":
                return EventFragment.fromObject(value);
            case "constructor":
                return ConstructorFragment.fromObject(value);
            case "error":
                return ErrorFragment.fromObject(value);
            case "fallback":
            case "receive":
                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?
                return null;
        }
        return logger$l.throwArgumentError("invalid fragment object", "value", value);
    }
    static fromString(value) {
        // Make sure the "returns" is surrounded by a space and all whitespace is exactly one space
        value = value.replace(/\s/g, " ");
        value = value.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ");
        value = value.trim();
        if (value.split(" ")[0] === "event") {
            return EventFragment.fromString(value.substring(5).trim());
        }
        else if (value.split(" ")[0] === "function") {
            return FunctionFragment.fromString(value.substring(8).trim());
        }
        else if (value.split("(")[0].trim() === "constructor") {
            return ConstructorFragment.fromString(value.trim());
        }
        else if (value.split(" ")[0] === "error") {
            return ErrorFragment.fromString(value.substring(5).trim());
        }
        return logger$l.throwArgumentError("unsupported fragment", "value", value);
    }
    static isFragment(value) {
        return !!(value && value._isFragment);
    }
}
class EventFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger$l.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "event",
                anonymous: this.anonymous,
                name: this.name,
                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "event ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (format !== FormatTypes.sighash) {
            if (this.anonymous) {
                result += "anonymous ";
            }
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return EventFragment.fromString(value);
        }
        return EventFragment.fromObject(value);
    }
    static fromObject(value) {
        if (EventFragment.isEventFragment(value)) {
            return value;
        }
        if (value.type !== "event") {
            logger$l.throwArgumentError("invalid event object", "value", value);
        }
        const params = {
            name: verifyIdentifier(value.name),
            anonymous: value.anonymous,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            type: "event"
        };
        return new EventFragment(_constructorGuard$1, params);
    }
    static fromString(value) {
        let match = value.match(regexParen);
        if (!match) {
            logger$l.throwArgumentError("invalid event string", "value", value);
        }
        let anonymous = false;
        match[3].split(" ").forEach((modifier) => {
            switch (modifier.trim()) {
                case "anonymous":
                    anonymous = true;
                    break;
                case "":
                    break;
                default:
                    logger$l.warn("unknown modifier: " + modifier);
            }
        });
        return EventFragment.fromObject({
            name: match[1].trim(),
            anonymous: anonymous,
            inputs: parseParams(match[2], true),
            type: "event"
        });
    }
    static isEventFragment(value) {
        return (value && value._isFragment && value.type === "event");
    }
}
function parseGas(value, params) {
    params.gas = null;
    let comps = value.split("@");
    if (comps.length !== 1) {
        if (comps.length > 2) {
            logger$l.throwArgumentError("invalid human-readable ABI signature", "value", value);
        }
        if (!comps[1].match(/^[0-9]+$/)) {
            logger$l.throwArgumentError("invalid human-readable ABI signature gas", "value", value);
        }
        params.gas = BigNumber.from(comps[1]);
        return comps[0];
    }
    return value;
}
function parseModifiers(value, params) {
    params.constant = false;
    params.payable = false;
    params.stateMutability = "nonpayable";
    value.split(" ").forEach((modifier) => {
        switch (modifier.trim()) {
            case "constant":
                params.constant = true;
                break;
            case "payable":
                params.payable = true;
                params.stateMutability = "payable";
                break;
            case "nonpayable":
                params.payable = false;
                params.stateMutability = "nonpayable";
                break;
            case "pure":
                params.constant = true;
                params.stateMutability = "pure";
                break;
            case "view":
                params.constant = true;
                params.stateMutability = "view";
                break;
            case "external":
            case "public":
            case "":
                break;
            default:
                console.log("unknown modifier: " + modifier);
        }
    });
}
function verifyState(value) {
    let result = {
        constant: false,
        payable: true,
        stateMutability: "payable"
    };
    if (value.stateMutability != null) {
        result.stateMutability = value.stateMutability;
        // Set (and check things are consistent) the constant property
        result.constant = (result.stateMutability === "view" || result.stateMutability === "pure");
        if (value.constant != null) {
            if ((!!value.constant) !== result.constant) {
                logger$l.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value);
            }
        }
        // Set (and check things are consistent) the payable property
        result.payable = (result.stateMutability === "payable");
        if (value.payable != null) {
            if ((!!value.payable) !== result.payable) {
                logger$l.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value);
            }
        }
    }
    else if (value.payable != null) {
        result.payable = !!value.payable;
        // If payable we can assume non-constant; otherwise we can't assume
        if (value.constant == null && !result.payable && value.type !== "constructor") {
            logger$l.throwArgumentError("unable to determine stateMutability", "value", value);
        }
        result.constant = !!value.constant;
        if (result.constant) {
            result.stateMutability = "view";
        }
        else {
            result.stateMutability = (result.payable ? "payable" : "nonpayable");
        }
        if (result.payable && result.constant) {
            logger$l.throwArgumentError("cannot have constant payable function", "value", value);
        }
    }
    else if (value.constant != null) {
        result.constant = !!value.constant;
        result.payable = !result.constant;
        result.stateMutability = (result.constant ? "view" : "payable");
    }
    else if (value.type !== "constructor") {
        logger$l.throwArgumentError("unable to determine stateMutability", "value", value);
    }
    return result;
}
class ConstructorFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger$l.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "constructor",
                stateMutability: ((this.stateMutability !== "nonpayable") ? this.stateMutability : undefined),
                payable: this.payable,
                gas: (this.gas ? this.gas.toNumber() : undefined),
                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
            });
        }
        if (format === FormatTypes.sighash) {
            logger$l.throwError("cannot format a constructor for sighash", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "format(sighash)"
            });
        }
        let result = "constructor(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (this.stateMutability && this.stateMutability !== "nonpayable") {
            result += this.stateMutability + " ";
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return ConstructorFragment.fromString(value);
        }
        return ConstructorFragment.fromObject(value);
    }
    static fromObject(value) {
        if (ConstructorFragment.isConstructorFragment(value)) {
            return value;
        }
        if (value.type !== "constructor") {
            logger$l.throwArgumentError("invalid constructor object", "value", value);
        }
        let state = verifyState(value);
        if (state.constant) {
            logger$l.throwArgumentError("constructor cannot be constant", "value", value);
        }
        const params = {
            name: null,
            type: value.type,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: (value.gas ? BigNumber.from(value.gas) : null)
        };
        return new ConstructorFragment(_constructorGuard$1, params);
    }
    static fromString(value) {
        let params = { type: "constructor" };
        value = parseGas(value, params);
        let parens = value.match(regexParen);
        if (!parens || parens[1].trim() !== "constructor") {
            logger$l.throwArgumentError("invalid constructor string", "value", value);
        }
        params.inputs = parseParams(parens[2].trim(), false);
        parseModifiers(parens[3].trim(), params);
        return ConstructorFragment.fromObject(params);
    }
    static isConstructorFragment(value) {
        return (value && value._isFragment && value.type === "constructor");
    }
}
class FunctionFragment extends ConstructorFragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger$l.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "function",
                name: this.name,
                constant: this.constant,
                stateMutability: ((this.stateMutability !== "nonpayable") ? this.stateMutability : undefined),
                payable: this.payable,
                gas: (this.gas ? this.gas.toNumber() : undefined),
                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "function ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        if (format !== FormatTypes.sighash) {
            if (this.stateMutability) {
                if (this.stateMutability !== "nonpayable") {
                    result += (this.stateMutability + " ");
                }
            }
            else if (this.constant) {
                result += "view ";
            }
            if (this.outputs && this.outputs.length) {
                result += "returns (" + this.outputs.map((output) => output.format(format)).join(", ") + ") ";
            }
            if (this.gas != null) {
                result += "@" + this.gas.toString() + " ";
            }
        }
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return FunctionFragment.fromString(value);
        }
        return FunctionFragment.fromObject(value);
    }
    static fromObject(value) {
        if (FunctionFragment.isFunctionFragment(value)) {
            return value;
        }
        if (value.type !== "function") {
            logger$l.throwArgumentError("invalid function object", "value", value);
        }
        let state = verifyState(value);
        const params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            constant: state.constant,
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),
            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),
            payable: state.payable,
            stateMutability: state.stateMutability,
            gas: (value.gas ? BigNumber.from(value.gas) : null)
        };
        return new FunctionFragment(_constructorGuard$1, params);
    }
    static fromString(value) {
        let params = { type: "function" };
        value = parseGas(value, params);
        let comps = value.split(" returns ");
        if (comps.length > 2) {
            logger$l.throwArgumentError("invalid function string", "value", value);
        }
        let parens = comps[0].match(regexParen);
        if (!parens) {
            logger$l.throwArgumentError("invalid function signature", "value", value);
        }
        params.name = parens[1].trim();
        if (params.name) {
            verifyIdentifier(params.name);
        }
        params.inputs = parseParams(parens[2], false);
        parseModifiers(parens[3].trim(), params);
        // We have outputs
        if (comps.length > 1) {
            let returns = comps[1].match(regexParen);
            if (returns[1].trim() != "" || returns[3].trim() != "") {
                logger$l.throwArgumentError("unexpected tokens", "value", value);
            }
            params.outputs = parseParams(returns[2], false);
        }
        else {
            params.outputs = [];
        }
        return FunctionFragment.fromObject(params);
    }
    static isFunctionFragment(value) {
        return (value && value._isFragment && value.type === "function");
    }
}
//export class StructFragment extends Fragment {
//}
function checkForbidden(fragment) {
    const sig = fragment.format();
    if (sig === "Error(string)" || sig === "Panic(uint256)") {
        logger$l.throwArgumentError(`cannot specify user defined ${sig} error`, "fragment", fragment);
    }
    return fragment;
}
class ErrorFragment extends Fragment {
    format(format) {
        if (!format) {
            format = FormatTypes.sighash;
        }
        if (!FormatTypes[format]) {
            logger$l.throwArgumentError("invalid format type", "format", format);
        }
        if (format === FormatTypes.json) {
            return JSON.stringify({
                type: "error",
                name: this.name,
                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
            });
        }
        let result = "";
        if (format !== FormatTypes.sighash) {
            result += "error ";
        }
        result += this.name + "(" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? ", " : ",") + ") ";
        return result.trim();
    }
    static from(value) {
        if (typeof (value) === "string") {
            return ErrorFragment.fromString(value);
        }
        return ErrorFragment.fromObject(value);
    }
    static fromObject(value) {
        if (ErrorFragment.isErrorFragment(value)) {
            return value;
        }
        if (value.type !== "error") {
            logger$l.throwArgumentError("invalid error object", "value", value);
        }
        const params = {
            type: value.type,
            name: verifyIdentifier(value.name),
            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])
        };
        return checkForbidden(new ErrorFragment(_constructorGuard$1, params));
    }
    static fromString(value) {
        let params = { type: "error" };
        let parens = value.match(regexParen);
        if (!parens) {
            logger$l.throwArgumentError("invalid error signature", "value", value);
        }
        params.name = parens[1].trim();
        if (params.name) {
            verifyIdentifier(params.name);
        }
        params.inputs = parseParams(parens[2], false);
        return checkForbidden(ErrorFragment.fromObject(params));
    }
    static isErrorFragment(value) {
        return (value && value._isFragment && value.type === "error");
    }
}
function verifyType(type) {
    // These need to be transformed to their full description
    if (type.match(/^uint($|[^1-9])/)) {
        type = "uint256" + type.substring(4);
    }
    else if (type.match(/^int($|[^1-9])/)) {
        type = "int256" + type.substring(3);
    }
    // @TODO: more verification
    return type;
}
// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234
const regexIdentifier = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
function verifyIdentifier(value) {
    if (!value || !value.match(regexIdentifier)) {
        logger$l.throwArgumentError(`invalid identifier "${value}"`, "value", value);
    }
    return value;
}
const regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
function splitNesting(value) {
    value = value.trim();
    let result = [];
    let accum = "";
    let depth = 0;
    for (let offset = 0; offset < value.length; offset++) {
        let c = value[offset];
        if (c === "," && depth === 0) {
            result.push(accum);
            accum = "";
        }
        else {
            accum += c;
            if (c === "(") {
                depth++;
            }
            else if (c === ")") {
                depth--;
                if (depth === -1) {
                    logger$l.throwArgumentError("unbalanced parenthesis", "value", value);
                }
            }
        }
    }
    if (accum) {
        result.push(accum);
    }
    return result;
}

const logger$k = new Logger(version$f);
function checkResultErrors(result) {
    // Find the first error (if any)
    const errors = [];
    const checkErrors = function (path, object) {
        if (!Array.isArray(object)) {
            return;
        }
        for (let key in object) {
            const childPath = path.slice();
            childPath.push(key);
            try {
                checkErrors(childPath, object[key]);
            }
            catch (error) {
                errors.push({ path: childPath, error: error });
            }
        }
    };
    checkErrors([], result);
    return errors;
}
class Coder {
    constructor(name, type, localName, dynamic) {
        // @TODO: defineReadOnly these
        this.name = name;
        this.type = type;
        this.localName = localName;
        this.dynamic = dynamic;
    }
    _throwError(message, value) {
        logger$k.throwArgumentError(message, this.localName, value);
    }
}
class Writer {
    constructor(wordSize) {
        defineReadOnly(this, "wordSize", wordSize || 32);
        this._data = [];
        this._dataLength = 0;
        this._padding = new Uint8Array(wordSize);
    }
    get data() {
        return hexConcat(this._data);
    }
    get length() { return this._dataLength; }
    _writeData(data) {
        this._data.push(data);
        this._dataLength += data.length;
        return data.length;
    }
    appendWriter(writer) {
        return this._writeData(concat(writer._data));
    }
    // Arrayish items; padded on the right to wordSize
    writeBytes(value) {
        let bytes = arrayify(value);
        const paddingOffset = bytes.length % this.wordSize;
        if (paddingOffset) {
            bytes = concat([bytes, this._padding.slice(paddingOffset)]);
        }
        return this._writeData(bytes);
    }
    _getValue(value) {
        let bytes = arrayify(BigNumber.from(value));
        if (bytes.length > this.wordSize) {
            logger$k.throwError("value out-of-bounds", Logger.errors.BUFFER_OVERRUN, {
                length: this.wordSize,
                offset: bytes.length
            });
        }
        if (bytes.length % this.wordSize) {
            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);
        }
        return bytes;
    }
    // BigNumberish items; padded on the left to wordSize
    writeValue(value) {
        return this._writeData(this._getValue(value));
    }
    writeUpdatableValue() {
        const offset = this._data.length;
        this._data.push(this._padding);
        this._dataLength += this.wordSize;
        return (value) => {
            this._data[offset] = this._getValue(value);
        };
    }
}
class Reader {
    constructor(data, wordSize, coerceFunc, allowLoose) {
        defineReadOnly(this, "_data", arrayify(data));
        defineReadOnly(this, "wordSize", wordSize || 32);
        defineReadOnly(this, "_coerceFunc", coerceFunc);
        defineReadOnly(this, "allowLoose", allowLoose);
        this._offset = 0;
    }
    get data() { return hexlify(this._data); }
    get consumed() { return this._offset; }
    // The default Coerce function
    static coerce(name, value) {
        let match = name.match("^u?int([0-9]+)$");
        if (match && parseInt(match[1]) <= 48) {
            value = value.toNumber();
        }
        return value;
    }
    coerce(name, value) {
        if (this._coerceFunc) {
            return this._coerceFunc(name, value);
        }
        return Reader.coerce(name, value);
    }
    _peekBytes(offset, length, loose) {
        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
        if (this._offset + alignedLength > this._data.length) {
            if (this.allowLoose && loose && this._offset + length <= this._data.length) {
                alignedLength = length;
            }
            else {
                logger$k.throwError("data out-of-bounds", Logger.errors.BUFFER_OVERRUN, {
                    length: this._data.length,
                    offset: this._offset + alignedLength
                });
            }
        }
        return this._data.slice(this._offset, this._offset + alignedLength);
    }
    subReader(offset) {
        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
    }
    readBytes(length, loose) {
        let bytes = this._peekBytes(0, length, !!loose);
        this._offset += bytes.length;
        // @TODO: Make sure the length..end bytes are all 0?
        return bytes.slice(0, length);
    }
    readValue() {
        return BigNumber.from(this.readBytes(this.wordSize));
    }
}

var sha3 = createCommonjsModule$1(function (module) {
/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */
/*jslint bitwise: true */
(function () {

  var INPUT_ERROR = 'input is invalid type';
  var FINALIZE_ERROR = 'finalize already called';
  var WINDOW = typeof window === 'object';
  var root = WINDOW ? window : {};
  if (root.JS_SHA3_NO_WINDOW) {
    WINDOW = false;
  }
  var WEB_WORKER = !WINDOW && typeof self === 'object';
  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;
  if (NODE_JS) {
    root = commonjsGlobal;
  } else if (WEB_WORKER) {
    root = self;
  }
  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && 'object' === 'object' && module.exports;
  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
  var HEX_CHARS = '0123456789abcdef'.split('');
  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
  var KECCAK_PADDING = [1, 256, 65536, 16777216];
  var PADDING = [6, 1536, 393216, 100663296];
  var SHIFT = [0, 8, 16, 24];
  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,
    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,
    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,
    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,
    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];
  var BITS = [224, 256, 384, 512];
  var SHAKE_BITS = [128, 256];
  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];
  var CSHAKE_BYTEPAD = {
    '128': 168,
    '256': 136
  };

  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
    Array.isArray = function (obj) {
      return Object.prototype.toString.call(obj) === '[object Array]';
    };
  }

  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
    ArrayBuffer.isView = function (obj) {
      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
  }

  var createOutputMethod = function (bits, padding, outputType) {
    return function (message) {
      return new Keccak(bits, padding, bits).update(message)[outputType]();
    };
  };

  var createShakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits) {
      return new Keccak(bits, padding, outputBits).update(message)[outputType]();
    };
  };

  var createCshakeOutputMethod = function (bits, padding, outputType) {
    return function (message, outputBits, n, s) {
      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();
    };
  };

  var createKmacOutputMethod = function (bits, padding, outputType) {
    return function (key, message, outputBits, s) {
      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();
    };
  };

  var createOutputMethods = function (method, createMethod, bits, padding) {
    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {
      var type = OUTPUT_TYPES[i];
      method[type] = createMethod(bits, padding, type);
    }
    return method;
  };

  var createMethod = function (bits, padding) {
    var method = createOutputMethod(bits, padding, 'hex');
    method.create = function () {
      return new Keccak(bits, padding, bits);
    };
    method.update = function (message) {
      return method.create().update(message);
    };
    return createOutputMethods(method, createOutputMethod, bits, padding);
  };

  var createShakeMethod = function (bits, padding) {
    var method = createShakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits) {
      return new Keccak(bits, padding, outputBits);
    };
    method.update = function (message, outputBits) {
      return method.create(outputBits).update(message);
    };
    return createOutputMethods(method, createShakeOutputMethod, bits, padding);
  };

  var createCshakeMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createCshakeOutputMethod(bits, padding, 'hex');
    method.create = function (outputBits, n, s) {
      if (!n && !s) {
        return methods['shake' + bits].create(outputBits);
      } else {
        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);
      }
    };
    method.update = function (message, outputBits, n, s) {
      return method.create(outputBits, n, s).update(message);
    };
    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);
  };

  var createKmacMethod = function (bits, padding) {
    var w = CSHAKE_BYTEPAD[bits];
    var method = createKmacOutputMethod(bits, padding, 'hex');
    method.create = function (key, outputBits, s) {
      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);
    };
    method.update = function (key, message, outputBits, s) {
      return method.create(key, outputBits, s).update(message);
    };
    return createOutputMethods(method, createKmacOutputMethod, bits, padding);
  };

  var algorithms = [
    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },
    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },
    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
  ];

  var methods = {}, methodNames = [];

  for (var i = 0; i < algorithms.length; ++i) {
    var algorithm = algorithms[i];
    var bits = algorithm.bits;
    for (var j = 0; j < bits.length; ++j) {
      var methodName = algorithm.name + '_' + bits[j];
      methodNames.push(methodName);
      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
      if (algorithm.name !== 'sha3') {
        var newMethodName = algorithm.name + bits[j];
        methodNames.push(newMethodName);
        methods[newMethodName] = methods[methodName];
      }
    }
  }

  function Keccak(bits, padding, outputBits) {
    this.blocks = [];
    this.s = [];
    this.padding = padding;
    this.outputBits = outputBits;
    this.reset = true;
    this.finalized = false;
    this.block = 0;
    this.start = 0;
    this.blockCount = (1600 - (bits << 1)) >> 5;
    this.byteCount = this.blockCount << 2;
    this.outputBlocks = outputBits >> 5;
    this.extraBytes = (outputBits & 31) >> 3;

    for (var i = 0; i < 50; ++i) {
      this.s[i] = 0;
    }
  }

  Keccak.prototype.update = function (message) {
    if (this.finalized) {
      throw new Error(FINALIZE_ERROR);
    }
    var notString, type = typeof message;
    if (type !== 'string') {
      if (type === 'object') {
        if (message === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
          message = new Uint8Array(message);
        } else if (!Array.isArray(message)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,
      blockCount = this.blockCount, index = 0, s = this.s, i, code;

    while (index < length) {
      if (this.reset) {
        this.reset = false;
        blocks[0] = this.block;
        for (i = 1; i < blockCount + 1; ++i) {
          blocks[i] = 0;
        }
      }
      if (notString) {
        for (i = this.start; index < length && i < byteCount; ++index) {
          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];
        }
      } else {
        for (i = this.start; index < length && i < byteCount; ++index) {
          code = message.charCodeAt(index);
          if (code < 0x80) {
            blocks[i >> 2] |= code << SHIFT[i++ & 3];
          } else if (code < 0x800) {
            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else if (code < 0xd800 || code >= 0xe000) {
            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          } else {
            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));
            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];
            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];
          }
        }
      }
      this.lastByteIndex = i;
      if (i >= byteCount) {
        this.start = i - byteCount;
        this.block = blocks[blockCount];
        for (i = 0; i < blockCount; ++i) {
          s[i] ^= blocks[i];
        }
        f(s);
        this.reset = true;
      } else {
        this.start = i;
      }
    }
    return this;
  };

  Keccak.prototype.encode = function (x, right) {
    var o = x & 255, n = 1;
    var bytes = [o];
    x = x >> 8;
    o = x & 255;
    while (o > 0) {
      bytes.unshift(o);
      x = x >> 8;
      o = x & 255;
      ++n;
    }
    if (right) {
      bytes.push(n);
    } else {
      bytes.unshift(n);
    }
    this.update(bytes);
    return bytes.length;
  };

  Keccak.prototype.encodeString = function (str) {
    var notString, type = typeof str;
    if (type !== 'string') {
      if (type === 'object') {
        if (str === null) {
          throw new Error(INPUT_ERROR);
        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
          str = new Uint8Array(str);
        } else if (!Array.isArray(str)) {
          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
            throw new Error(INPUT_ERROR);
          }
        }
      } else {
        throw new Error(INPUT_ERROR);
      }
      notString = true;
    }
    var bytes = 0, length = str.length;
    if (notString) {
      bytes = length;
    } else {
      for (var i = 0; i < str.length; ++i) {
        var code = str.charCodeAt(i);
        if (code < 0x80) {
          bytes += 1;
        } else if (code < 0x800) {
          bytes += 2;
        } else if (code < 0xd800 || code >= 0xe000) {
          bytes += 3;
        } else {
          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));
          bytes += 4;
        }
      }
    }
    bytes += this.encode(bytes * 8);
    this.update(str);
    return bytes;
  };

  Keccak.prototype.bytepad = function (strs, w) {
    var bytes = this.encode(w);
    for (var i = 0; i < strs.length; ++i) {
      bytes += this.encodeString(strs[i]);
    }
    var paddingBytes = w - bytes % w;
    var zeros = [];
    zeros.length = paddingBytes;
    this.update(zeros);
    return this;
  };

  Keccak.prototype.finalize = function () {
    if (this.finalized) {
      return;
    }
    this.finalized = true;
    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
    blocks[i >> 2] |= this.padding[i & 3];
    if (this.lastByteIndex === this.byteCount) {
      blocks[0] = blocks[blockCount];
      for (i = 1; i < blockCount + 1; ++i) {
        blocks[i] = 0;
      }
    }
    blocks[blockCount - 1] |= 0x80000000;
    for (i = 0; i < blockCount; ++i) {
      s[i] ^= blocks[i];
    }
    f(s);
  };

  Keccak.prototype.toString = Keccak.prototype.hex = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var hex = '', block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        block = s[i];
        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +
          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +
          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +
          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];
      }
      if (j % blockCount === 0) {
        f(s);
        i = 0;
      }
    }
    if (extraBytes) {
      block = s[i];
      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];
      if (extraBytes > 1) {
        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];
      }
      if (extraBytes > 2) {
        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];
      }
    }
    return hex;
  };

  Keccak.prototype.arrayBuffer = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var bytes = this.outputBits >> 3;
    var buffer;
    if (extraBytes) {
      buffer = new ArrayBuffer((outputBlocks + 1) << 2);
    } else {
      buffer = new ArrayBuffer(bytes);
    }
    var array = new Uint32Array(buffer);
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        array[j] = s[i];
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      array[i] = s[i];
      buffer = buffer.slice(0, bytes);
    }
    return buffer;
  };

  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;

  Keccak.prototype.digest = Keccak.prototype.array = function () {
    this.finalize();

    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,
      extraBytes = this.extraBytes, i = 0, j = 0;
    var array = [], offset, block;
    while (j < outputBlocks) {
      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {
        offset = j << 2;
        block = s[i];
        array[offset] = block & 0xFF;
        array[offset + 1] = (block >> 8) & 0xFF;
        array[offset + 2] = (block >> 16) & 0xFF;
        array[offset + 3] = (block >> 24) & 0xFF;
      }
      if (j % blockCount === 0) {
        f(s);
      }
    }
    if (extraBytes) {
      offset = j << 2;
      block = s[i];
      array[offset] = block & 0xFF;
      if (extraBytes > 1) {
        array[offset + 1] = (block >> 8) & 0xFF;
      }
      if (extraBytes > 2) {
        array[offset + 2] = (block >> 16) & 0xFF;
      }
    }
    return array;
  };

  function Kmac(bits, padding, outputBits) {
    Keccak.call(this, bits, padding, outputBits);
  }

  Kmac.prototype = new Keccak();

  Kmac.prototype.finalize = function () {
    this.encode(this.outputBits, true);
    return Keccak.prototype.finalize.call(this);
  };

  var f = function (s) {
    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,
      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,
      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,
      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
    for (n = 0; n < 48; n += 2) {
      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];

      h = c8 ^ ((c2 << 1) | (c3 >>> 31));
      l = c9 ^ ((c3 << 1) | (c2 >>> 31));
      s[0] ^= h;
      s[1] ^= l;
      s[10] ^= h;
      s[11] ^= l;
      s[20] ^= h;
      s[21] ^= l;
      s[30] ^= h;
      s[31] ^= l;
      s[40] ^= h;
      s[41] ^= l;
      h = c0 ^ ((c4 << 1) | (c5 >>> 31));
      l = c1 ^ ((c5 << 1) | (c4 >>> 31));
      s[2] ^= h;
      s[3] ^= l;
      s[12] ^= h;
      s[13] ^= l;
      s[22] ^= h;
      s[23] ^= l;
      s[32] ^= h;
      s[33] ^= l;
      s[42] ^= h;
      s[43] ^= l;
      h = c2 ^ ((c6 << 1) | (c7 >>> 31));
      l = c3 ^ ((c7 << 1) | (c6 >>> 31));
      s[4] ^= h;
      s[5] ^= l;
      s[14] ^= h;
      s[15] ^= l;
      s[24] ^= h;
      s[25] ^= l;
      s[34] ^= h;
      s[35] ^= l;
      s[44] ^= h;
      s[45] ^= l;
      h = c4 ^ ((c8 << 1) | (c9 >>> 31));
      l = c5 ^ ((c9 << 1) | (c8 >>> 31));
      s[6] ^= h;
      s[7] ^= l;
      s[16] ^= h;
      s[17] ^= l;
      s[26] ^= h;
      s[27] ^= l;
      s[36] ^= h;
      s[37] ^= l;
      s[46] ^= h;
      s[47] ^= l;
      h = c6 ^ ((c0 << 1) | (c1 >>> 31));
      l = c7 ^ ((c1 << 1) | (c0 >>> 31));
      s[8] ^= h;
      s[9] ^= l;
      s[18] ^= h;
      s[19] ^= l;
      s[28] ^= h;
      s[29] ^= l;
      s[38] ^= h;
      s[39] ^= l;
      s[48] ^= h;
      s[49] ^= l;

      b0 = s[0];
      b1 = s[1];
      b32 = (s[11] << 4) | (s[10] >>> 28);
      b33 = (s[10] << 4) | (s[11] >>> 28);
      b14 = (s[20] << 3) | (s[21] >>> 29);
      b15 = (s[21] << 3) | (s[20] >>> 29);
      b46 = (s[31] << 9) | (s[30] >>> 23);
      b47 = (s[30] << 9) | (s[31] >>> 23);
      b28 = (s[40] << 18) | (s[41] >>> 14);
      b29 = (s[41] << 18) | (s[40] >>> 14);
      b20 = (s[2] << 1) | (s[3] >>> 31);
      b21 = (s[3] << 1) | (s[2] >>> 31);
      b2 = (s[13] << 12) | (s[12] >>> 20);
      b3 = (s[12] << 12) | (s[13] >>> 20);
      b34 = (s[22] << 10) | (s[23] >>> 22);
      b35 = (s[23] << 10) | (s[22] >>> 22);
      b16 = (s[33] << 13) | (s[32] >>> 19);
      b17 = (s[32] << 13) | (s[33] >>> 19);
      b48 = (s[42] << 2) | (s[43] >>> 30);
      b49 = (s[43] << 2) | (s[42] >>> 30);
      b40 = (s[5] << 30) | (s[4] >>> 2);
      b41 = (s[4] << 30) | (s[5] >>> 2);
      b22 = (s[14] << 6) | (s[15] >>> 26);
      b23 = (s[15] << 6) | (s[14] >>> 26);
      b4 = (s[25] << 11) | (s[24] >>> 21);
      b5 = (s[24] << 11) | (s[25] >>> 21);
      b36 = (s[34] << 15) | (s[35] >>> 17);
      b37 = (s[35] << 15) | (s[34] >>> 17);
      b18 = (s[45] << 29) | (s[44] >>> 3);
      b19 = (s[44] << 29) | (s[45] >>> 3);
      b10 = (s[6] << 28) | (s[7] >>> 4);
      b11 = (s[7] << 28) | (s[6] >>> 4);
      b42 = (s[17] << 23) | (s[16] >>> 9);
      b43 = (s[16] << 23) | (s[17] >>> 9);
      b24 = (s[26] << 25) | (s[27] >>> 7);
      b25 = (s[27] << 25) | (s[26] >>> 7);
      b6 = (s[36] << 21) | (s[37] >>> 11);
      b7 = (s[37] << 21) | (s[36] >>> 11);
      b38 = (s[47] << 24) | (s[46] >>> 8);
      b39 = (s[46] << 24) | (s[47] >>> 8);
      b30 = (s[8] << 27) | (s[9] >>> 5);
      b31 = (s[9] << 27) | (s[8] >>> 5);
      b12 = (s[18] << 20) | (s[19] >>> 12);
      b13 = (s[19] << 20) | (s[18] >>> 12);
      b44 = (s[29] << 7) | (s[28] >>> 25);
      b45 = (s[28] << 7) | (s[29] >>> 25);
      b26 = (s[38] << 8) | (s[39] >>> 24);
      b27 = (s[39] << 8) | (s[38] >>> 24);
      b8 = (s[48] << 14) | (s[49] >>> 18);
      b9 = (s[49] << 14) | (s[48] >>> 18);

      s[0] = b0 ^ (~b2 & b4);
      s[1] = b1 ^ (~b3 & b5);
      s[10] = b10 ^ (~b12 & b14);
      s[11] = b11 ^ (~b13 & b15);
      s[20] = b20 ^ (~b22 & b24);
      s[21] = b21 ^ (~b23 & b25);
      s[30] = b30 ^ (~b32 & b34);
      s[31] = b31 ^ (~b33 & b35);
      s[40] = b40 ^ (~b42 & b44);
      s[41] = b41 ^ (~b43 & b45);
      s[2] = b2 ^ (~b4 & b6);
      s[3] = b3 ^ (~b5 & b7);
      s[12] = b12 ^ (~b14 & b16);
      s[13] = b13 ^ (~b15 & b17);
      s[22] = b22 ^ (~b24 & b26);
      s[23] = b23 ^ (~b25 & b27);
      s[32] = b32 ^ (~b34 & b36);
      s[33] = b33 ^ (~b35 & b37);
      s[42] = b42 ^ (~b44 & b46);
      s[43] = b43 ^ (~b45 & b47);
      s[4] = b4 ^ (~b6 & b8);
      s[5] = b5 ^ (~b7 & b9);
      s[14] = b14 ^ (~b16 & b18);
      s[15] = b15 ^ (~b17 & b19);
      s[24] = b24 ^ (~b26 & b28);
      s[25] = b25 ^ (~b27 & b29);
      s[34] = b34 ^ (~b36 & b38);
      s[35] = b35 ^ (~b37 & b39);
      s[44] = b44 ^ (~b46 & b48);
      s[45] = b45 ^ (~b47 & b49);
      s[6] = b6 ^ (~b8 & b0);
      s[7] = b7 ^ (~b9 & b1);
      s[16] = b16 ^ (~b18 & b10);
      s[17] = b17 ^ (~b19 & b11);
      s[26] = b26 ^ (~b28 & b20);
      s[27] = b27 ^ (~b29 & b21);
      s[36] = b36 ^ (~b38 & b30);
      s[37] = b37 ^ (~b39 & b31);
      s[46] = b46 ^ (~b48 & b40);
      s[47] = b47 ^ (~b49 & b41);
      s[8] = b8 ^ (~b0 & b2);
      s[9] = b9 ^ (~b1 & b3);
      s[18] = b18 ^ (~b10 & b12);
      s[19] = b19 ^ (~b11 & b13);
      s[28] = b28 ^ (~b20 & b22);
      s[29] = b29 ^ (~b21 & b23);
      s[38] = b38 ^ (~b30 & b32);
      s[39] = b39 ^ (~b31 & b33);
      s[48] = b48 ^ (~b40 & b42);
      s[49] = b49 ^ (~b41 & b43);

      s[0] ^= RC[n];
      s[1] ^= RC[n + 1];
    }
  };

  if (COMMON_JS) {
    module.exports = methods;
  } else {
    for (i = 0; i < methodNames.length; ++i) {
      root[methodNames[i]] = methods[methodNames[i]];
    }
  }
})();
});

var sha3$1 = sha3;

function keccak256(data) {
    return '0x' + sha3$1.keccak_256(arrayify(data));
}

const version$e = "rlp/5.5.0";

const logger$j = new Logger(version$e);
function arrayifyInteger(value) {
    const result = [];
    while (value) {
        result.unshift(value & 0xff);
        value >>= 8;
    }
    return result;
}
function unarrayifyInteger(data, offset, length) {
    let result = 0;
    for (let i = 0; i < length; i++) {
        result = (result * 256) + data[offset + i];
    }
    return result;
}
function _encode(object) {
    if (Array.isArray(object)) {
        let payload = [];
        object.forEach(function (child) {
            payload = payload.concat(_encode(child));
        });
        if (payload.length <= 55) {
            payload.unshift(0xc0 + payload.length);
            return payload;
        }
        const length = arrayifyInteger(payload.length);
        length.unshift(0xf7 + length.length);
        return length.concat(payload);
    }
    if (!isBytesLike(object)) {
        logger$j.throwArgumentError("RLP object must be BytesLike", "object", object);
    }
    const data = Array.prototype.slice.call(arrayify(object));
    if (data.length === 1 && data[0] <= 0x7f) {
        return data;
    }
    else if (data.length <= 55) {
        data.unshift(0x80 + data.length);
        return data;
    }
    const length = arrayifyInteger(data.length);
    length.unshift(0xb7 + length.length);
    return length.concat(data);
}
function encode$2(object) {
    return hexlify(_encode(object));
}
function _decodeChildren(data, offset, childOffset, length) {
    const result = [];
    while (childOffset < offset + 1 + length) {
        const decoded = _decode(data, childOffset);
        result.push(decoded.result);
        childOffset += decoded.consumed;
        if (childOffset > offset + 1 + length) {
            logger$j.throwError("child data too short", Logger.errors.BUFFER_OVERRUN, {});
        }
    }
    return { consumed: (1 + length), result: result };
}
// returns { consumed: number, result: Object }
function _decode(data, offset) {
    if (data.length === 0) {
        logger$j.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    // Array with extra length prefix
    if (data[offset] >= 0xf8) {
        const lengthLength = data[offset] - 0xf7;
        if (offset + 1 + lengthLength > data.length) {
            logger$j.throwError("data short segment too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger$j.throwError("data long segment too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
    }
    else if (data[offset] >= 0xc0) {
        const length = data[offset] - 0xc0;
        if (offset + 1 + length > data.length) {
            logger$j.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        return _decodeChildren(data, offset, offset + 1, length);
    }
    else if (data[offset] >= 0xb8) {
        const lengthLength = data[offset] - 0xb7;
        if (offset + 1 + lengthLength > data.length) {
            logger$j.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        const length = unarrayifyInteger(data, offset + 1, lengthLength);
        if (offset + 1 + lengthLength + length > data.length) {
            logger$j.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
        return { consumed: (1 + lengthLength + length), result: result };
    }
    else if (data[offset] >= 0x80) {
        const length = data[offset] - 0x80;
        if (offset + 1 + length > data.length) {
            logger$j.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
        }
        const result = hexlify(data.slice(offset + 1, offset + 1 + length));
        return { consumed: (1 + length), result: result };
    }
    return { consumed: 1, result: hexlify(data[offset]) };
}
function decode$2(data) {
    const bytes = arrayify(data);
    const decoded = _decode(bytes, 0);
    if (decoded.consumed !== bytes.length) {
        logger$j.throwArgumentError("invalid rlp data", "data", data);
    }
    return decoded.result;
}

const version$d = "address/5.5.0";

const logger$i = new Logger(version$d);
function getChecksumAddress(address) {
    if (!isHexString(address, 20)) {
        logger$i.throwArgumentError("invalid address", "address", address);
    }
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for (let i = 0; i < 40; i++) {
        expanded[i] = chars[i].charCodeAt(0);
    }
    const hashed = arrayify(keccak256(expanded));
    for (let i = 0; i < 40; i += 2) {
        if ((hashed[i >> 1] >> 4) >= 8) {
            chars[i] = chars[i].toUpperCase();
        }
        if ((hashed[i >> 1] & 0x0f) >= 8) {
            chars[i + 1] = chars[i + 1].toUpperCase();
        }
    }
    return "0x" + chars.join("");
}
// Shims for environments that are missing some required constants and functions
const MAX_SAFE_INTEGER = 0x1fffffffffffff;
function log10(x) {
    if (Math.log10) {
        return Math.log10(x);
    }
    return Math.log(x) / Math.LN10;
}
// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number
// Create lookup table
const ibanLookup = {};
for (let i = 0; i < 10; i++) {
    ibanLookup[String(i)] = String(i);
}
for (let i = 0; i < 26; i++) {
    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
}
// How many decimal digits can we process? (for 64-bit float, this is 15)
const safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
function ibanChecksum(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c) => { return ibanLookup[c]; }).join("");
    // Javascript can handle integers safely up to 15 (decimal) digits
    while (expanded.length >= safeDigits) {
        let block = expanded.substring(0, safeDigits);
        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - (parseInt(expanded, 10) % 97));
    while (checksum.length < 2) {
        checksum = "0" + checksum;
    }
    return checksum;
}
function getAddress(address) {
    let result = null;
    if (typeof (address) !== "string") {
        logger$i.throwArgumentError("invalid address", "address", address);
    }
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
        // Missing the 0x prefix
        if (address.substring(0, 2) !== "0x") {
            address = "0x" + address;
        }
        result = getChecksumAddress(address);
        // It is a checksummed address with a bad checksum
        if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
            logger$i.throwArgumentError("bad address checksum", "address", address);
        }
        // Maybe ICAP? (we only support direct mode)
    }
    else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
        // It is an ICAP address with a bad checksum
        if (address.substring(2, 4) !== ibanChecksum(address)) {
            logger$i.throwArgumentError("bad icap checksum", "address", address);
        }
        result = _base36To16(address.substring(4));
        while (result.length < 40) {
            result = "0" + result;
        }
        result = getChecksumAddress("0x" + result);
    }
    else {
        logger$i.throwArgumentError("invalid address", "address", address);
    }
    return result;
}
// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed
function getContractAddress(transaction) {
    let from = null;
    try {
        from = getAddress(transaction.from);
    }
    catch (error) {
        logger$i.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));
    return getAddress(hexDataSlice(keccak256(encode$2([from, nonce])), 12));
}

class AddressCoder extends Coder {
    constructor(localName) {
        super("address", "address", localName, false);
    }
    defaultValue() {
        return "0x0000000000000000000000000000000000000000";
    }
    encode(writer, value) {
        try {
            value = getAddress(value);
        }
        catch (error) {
            this._throwError(error.message, value);
        }
        return writer.writeValue(value);
    }
    decode(reader) {
        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));
    }
}

// Clones the functionality of an existing Coder, but without a localName
class AnonymousCoder extends Coder {
    constructor(coder) {
        super(coder.name, coder.type, undefined, coder.dynamic);
        this.coder = coder;
    }
    defaultValue() {
        return this.coder.defaultValue();
    }
    encode(writer, value) {
        return this.coder.encode(writer, value);
    }
    decode(reader) {
        return this.coder.decode(reader);
    }
}

const logger$h = new Logger(version$f);
function pack(writer, coders, values) {
    let arrayValues = null;
    if (Array.isArray(values)) {
        arrayValues = values;
    }
    else if (values && typeof (values) === "object") {
        let unique = {};
        arrayValues = coders.map((coder) => {
            const name = coder.localName;
            if (!name) {
                logger$h.throwError("cannot encode object for signature with missing names", Logger.errors.INVALID_ARGUMENT, {
                    argument: "values",
                    coder: coder,
                    value: values
                });
            }
            if (unique[name]) {
                logger$h.throwError("cannot encode object for signature with duplicate names", Logger.errors.INVALID_ARGUMENT, {
                    argument: "values",
                    coder: coder,
                    value: values
                });
            }
            unique[name] = true;
            return values[name];
        });
    }
    else {
        logger$h.throwArgumentError("invalid tuple value", "tuple", values);
    }
    if (coders.length !== arrayValues.length) {
        logger$h.throwArgumentError("types/value length mismatch", "tuple", values);
    }
    let staticWriter = new Writer(writer.wordSize);
    let dynamicWriter = new Writer(writer.wordSize);
    let updateFuncs = [];
    coders.forEach((coder, index) => {
        let value = arrayValues[index];
        if (coder.dynamic) {
            // Get current dynamic offset (for the future pointer)
            let dynamicOffset = dynamicWriter.length;
            // Encode the dynamic value into the dynamicWriter
            coder.encode(dynamicWriter, value);
            // Prepare to populate the correct offset once we are done
            let updateFunc = staticWriter.writeUpdatableValue();
            updateFuncs.push((baseOffset) => {
                updateFunc(baseOffset + dynamicOffset);
            });
        }
        else {
            coder.encode(staticWriter, value);
        }
    });
    // Backfill all the dynamic offsets, now that we know the static length
    updateFuncs.forEach((func) => { func(staticWriter.length); });
    let length = writer.appendWriter(staticWriter);
    length += writer.appendWriter(dynamicWriter);
    return length;
}
function unpack(reader, coders) {
    let values = [];
    // A reader anchored to this base
    let baseReader = reader.subReader(0);
    coders.forEach((coder) => {
        let value = null;
        if (coder.dynamic) {
            let offset = reader.readValue();
            let offsetReader = baseReader.subReader(offset.toNumber());
            try {
                value = coder.decode(offsetReader);
            }
            catch (error) {
                // Cannot recover from this
                if (error.code === Logger.errors.BUFFER_OVERRUN) {
                    throw error;
                }
                value = error;
                value.baseType = coder.name;
                value.name = coder.localName;
                value.type = coder.type;
            }
        }
        else {
            try {
                value = coder.decode(reader);
            }
            catch (error) {
                // Cannot recover from this
                if (error.code === Logger.errors.BUFFER_OVERRUN) {
                    throw error;
                }
                value = error;
                value.baseType = coder.name;
                value.name = coder.localName;
                value.type = coder.type;
            }
        }
        if (value != undefined) {
            values.push(value);
        }
    });
    // We only output named properties for uniquely named coders
    const uniqueNames = coders.reduce((accum, coder) => {
        const name = coder.localName;
        if (name) {
            if (!accum[name]) {
                accum[name] = 0;
            }
            accum[name]++;
        }
        return accum;
    }, {});
    // Add any named parameters (i.e. tuples)
    coders.forEach((coder, index) => {
        let name = coder.localName;
        if (!name || uniqueNames[name] !== 1) {
            return;
        }
        if (name === "length") {
            name = "_length";
        }
        if (values[name] != null) {
            return;
        }
        const value = values[index];
        if (value instanceof Error) {
            Object.defineProperty(values, name, {
                enumerable: true,
                get: () => { throw value; }
            });
        }
        else {
            values[name] = value;
        }
    });
    for (let i = 0; i < values.length; i++) {
        const value = values[i];
        if (value instanceof Error) {
            Object.defineProperty(values, i, {
                enumerable: true,
                get: () => { throw value; }
            });
        }
    }
    return Object.freeze(values);
}
class ArrayCoder extends Coder {
    constructor(coder, length, localName) {
        const type = (coder.type + "[" + (length >= 0 ? length : "") + "]");
        const dynamic = (length === -1 || coder.dynamic);
        super("array", type, localName, dynamic);
        this.coder = coder;
        this.length = length;
    }
    defaultValue() {
        // Verifies the child coder is valid (even if the array is dynamic or 0-length)
        const defaultChild = this.coder.defaultValue();
        const result = [];
        for (let i = 0; i < this.length; i++) {
            result.push(defaultChild);
        }
        return result;
    }
    encode(writer, value) {
        if (!Array.isArray(value)) {
            this._throwError("expected array value", value);
        }
        let count = this.length;
        if (count === -1) {
            count = value.length;
            writer.writeValue(value.length);
        }
        logger$h.checkArgumentCount(value.length, count, "coder array" + (this.localName ? (" " + this.localName) : ""));
        let coders = [];
        for (let i = 0; i < value.length; i++) {
            coders.push(this.coder);
        }
        return pack(writer, coders, value);
    }
    decode(reader) {
        let count = this.length;
        if (count === -1) {
            count = reader.readValue().toNumber();
            // Check that there is *roughly* enough data to ensure
            // stray random data is not being read as a length. Each
            // slot requires at least 32 bytes for their value (or 32
            // bytes as a link to the data). This could use a much
            // tighter bound, but we are erroring on the side of safety.
            if (count * 32 > reader._data.length) {
                logger$h.throwError("insufficient data length", Logger.errors.BUFFER_OVERRUN, {
                    length: reader._data.length,
                    count: count
                });
            }
        }
        let coders = [];
        for (let i = 0; i < count; i++) {
            coders.push(new AnonymousCoder(this.coder));
        }
        return reader.coerce(this.name, unpack(reader, coders));
    }
}

class BooleanCoder extends Coder {
    constructor(localName) {
        super("bool", "bool", localName, false);
    }
    defaultValue() {
        return false;
    }
    encode(writer, value) {
        return writer.writeValue(value ? 1 : 0);
    }
    decode(reader) {
        return reader.coerce(this.type, !reader.readValue().isZero());
    }
}

class DynamicBytesCoder extends Coder {
    constructor(type, localName) {
        super(type, type, localName, true);
    }
    defaultValue() {
        return "0x";
    }
    encode(writer, value) {
        value = arrayify(value);
        let length = writer.writeValue(value.length);
        length += writer.writeBytes(value);
        return length;
    }
    decode(reader) {
        return reader.readBytes(reader.readValue().toNumber(), true);
    }
}
class BytesCoder extends DynamicBytesCoder {
    constructor(localName) {
        super("bytes", localName);
    }
    decode(reader) {
        return reader.coerce(this.name, hexlify(super.decode(reader)));
    }
}

// @TODO: Merge this with bytes
class FixedBytesCoder extends Coder {
    constructor(size, localName) {
        let name = "bytes" + String(size);
        super(name, name, localName, false);
        this.size = size;
    }
    defaultValue() {
        return ("0x0000000000000000000000000000000000000000000000000000000000000000").substring(0, 2 + this.size * 2);
    }
    encode(writer, value) {
        let data = arrayify(value);
        if (data.length !== this.size) {
            this._throwError("incorrect data length", value);
        }
        return writer.writeBytes(data);
    }
    decode(reader) {
        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));
    }
}

class NullCoder extends Coder {
    constructor(localName) {
        super("null", "", localName, false);
    }
    defaultValue() {
        return null;
    }
    encode(writer, value) {
        if (value != null) {
            this._throwError("not null", value);
        }
        return writer.writeBytes([]);
    }
    decode(reader) {
        reader.readBytes(0);
        return reader.coerce(this.name, null);
    }
}

const AddressZero = "0x0000000000000000000000000000000000000000";

const NegativeOne$1 = ( /*#__PURE__*/BigNumber.from(-1));
const Zero$1 = ( /*#__PURE__*/BigNumber.from(0));
const One$1 = ( /*#__PURE__*/BigNumber.from(1));
const MaxUint256$1 = ( /*#__PURE__*/BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));

const HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";

class NumberCoder extends Coder {
    constructor(size, signed, localName) {
        const name = ((signed ? "int" : "uint") + (size * 8));
        super(name, name, localName, false);
        this.size = size;
        this.signed = signed;
    }
    defaultValue() {
        return 0;
    }
    encode(writer, value) {
        let v = BigNumber.from(value);
        // Check bounds are safe for encoding
        let maxUintValue = MaxUint256$1.mask(writer.wordSize * 8);
        if (this.signed) {
            let bounds = maxUintValue.mask(this.size * 8 - 1);
            if (v.gt(bounds) || v.lt(bounds.add(One$1).mul(NegativeOne$1))) {
                this._throwError("value out-of-bounds", value);
            }
        }
        else if (v.lt(Zero$1) || v.gt(maxUintValue.mask(this.size * 8))) {
            this._throwError("value out-of-bounds", value);
        }
        v = v.toTwos(this.size * 8).mask(this.size * 8);
        if (this.signed) {
            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);
        }
        return writer.writeValue(v);
    }
    decode(reader) {
        let value = reader.readValue().mask(this.size * 8);
        if (this.signed) {
            value = value.fromTwos(this.size * 8);
        }
        return reader.coerce(this.name, value);
    }
}

const version$c = "strings/5.5.0";

const logger$g = new Logger(version$c);
///////////////////////////////
var UnicodeNormalizationForm;
(function (UnicodeNormalizationForm) {
    UnicodeNormalizationForm["current"] = "";
    UnicodeNormalizationForm["NFC"] = "NFC";
    UnicodeNormalizationForm["NFD"] = "NFD";
    UnicodeNormalizationForm["NFKC"] = "NFKC";
    UnicodeNormalizationForm["NFKD"] = "NFKD";
})(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
var Utf8ErrorReason;
(function (Utf8ErrorReason) {
    // A continuation byte was present where there was nothing to continue
    // - offset = the index the codepoint began in
    Utf8ErrorReason["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found
    // - offset = the index the codepoint began in
    Utf8ErrorReason["BAD_PREFIX"] = "bad codepoint prefix";
    // The string is too short to process the expected codepoint
    // - offset = the index the codepoint began in
    Utf8ErrorReason["OVERRUN"] = "string overrun";
    // A missing continuation byte was expected but not found
    // - offset = the index the continuation byte was expected at
    Utf8ErrorReason["MISSING_CONTINUE"] = "missing continuation byte";
    // The computed code point is outside the range for UTF-8
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; outside the UTF-8 range
    Utf8ErrorReason["OUT_OF_RANGE"] = "out of UTF-8 range";
    // UTF-8 strings may not contain UTF-16 surrogate pairs
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range
    Utf8ErrorReason["UTF16_SURROGATE"] = "UTF-16 surrogate";
    // The string is an overlong representation
    // - offset       = start of this codepoint
    // - badCodepoint = the computed codepoint; already bounds checked
    Utf8ErrorReason["OVERLONG"] = "overlong representation";
})(Utf8ErrorReason || (Utf8ErrorReason = {}));
function errorFunc(reason, offset, bytes, output, badCodepoint) {
    return logger$g.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
}
function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes
    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
        let i = 0;
        for (let o = offset + 1; o < bytes.length; o++) {
            if (bytes[o] >> 6 !== 0x02) {
                break;
            }
            i++;
        }
        return i;
    }
    // This byte runs us past the end of the string, so just jump to the end
    // (but the first byte was read already read and therefore skipped)
    if (reason === Utf8ErrorReason.OVERRUN) {
        return bytes.length - offset - 1;
    }
    // Nothing to skip
    return 0;
}
function replaceFunc(reason, offset, bytes, output, badCodepoint) {
    // Overlong representations are otherwise "valid" code points; just non-deistingtished
    if (reason === Utf8ErrorReason.OVERLONG) {
        output.push(badCodepoint);
        return 0;
    }
    // Put the replacement character into the output
    output.push(0xfffd);
    // Otherwise, process as if ignoring errors
    return ignoreFunc(reason, offset, bytes);
}
// Common error handing strategies
const Utf8ErrorFuncs = Object.freeze({
    error: errorFunc,
    ignore: ignoreFunc,
    replace: replaceFunc
});
// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499
function getUtf8CodePoints(bytes, onError) {
    if (onError == null) {
        onError = Utf8ErrorFuncs.error;
    }
    bytes = arrayify(bytes);
    const result = [];
    let i = 0;
    // Invalid bytes are ignored
    while (i < bytes.length) {
        const c = bytes[i++];
        // 0xxx xxxx
        if (c >> 7 === 0) {
            result.push(c);
            continue;
        }
        // Multibyte; how many bytes left for this character?
        let extraLength = null;
        let overlongMask = null;
        // 110x xxxx 10xx xxxx
        if ((c & 0xe0) === 0xc0) {
            extraLength = 1;
            overlongMask = 0x7f;
            // 1110 xxxx 10xx xxxx 10xx xxxx
        }
        else if ((c & 0xf0) === 0xe0) {
            extraLength = 2;
            overlongMask = 0x7ff;
            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx
        }
        else if ((c & 0xf8) === 0xf0) {
            extraLength = 3;
            overlongMask = 0xffff;
        }
        else {
            if ((c & 0xc0) === 0x80) {
                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
            }
            else {
                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
            }
            continue;
        }
        // Do we have enough bytes in our data?
        if (i - 1 + extraLength >= bytes.length) {
            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
            continue;
        }
        // Remove the length prefix from the char
        let res = c & ((1 << (8 - extraLength - 1)) - 1);
        for (let j = 0; j < extraLength; j++) {
            let nextChar = bytes[i];
            // Invalid continuation byte
            if ((nextChar & 0xc0) != 0x80) {
                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
                res = null;
                break;
            }
            res = (res << 6) | (nextChar & 0x3f);
            i++;
        }
        // See above loop for invalid continuation byte
        if (res === null) {
            continue;
        }
        // Maximum code point
        if (res > 0x10ffff) {
            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Reserved for UTF-16 surrogate halves
        if (res >= 0xd800 && res <= 0xdfff) {
            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        // Check for overlong sequences (more bytes than needed)
        if (res <= overlongMask) {
            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
            continue;
        }
        result.push(res);
    }
    return result;
}
// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array
function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
    if (form != UnicodeNormalizationForm.current) {
        logger$g.checkNormalize();
        str = str.normalize(form);
    }
    let result = [];
    for (let i = 0; i < str.length; i++) {
        const c = str.charCodeAt(i);
        if (c < 0x80) {
            result.push(c);
        }
        else if (c < 0x800) {
            result.push((c >> 6) | 0xc0);
            result.push((c & 0x3f) | 0x80);
        }
        else if ((c & 0xfc00) == 0xd800) {
            i++;
            const c2 = str.charCodeAt(i);
            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {
                throw new Error("invalid utf-8 string");
            }
            // Surrogate Pair
            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);
            result.push((pair >> 18) | 0xf0);
            result.push(((pair >> 12) & 0x3f) | 0x80);
            result.push(((pair >> 6) & 0x3f) | 0x80);
            result.push((pair & 0x3f) | 0x80);
        }
        else {
            result.push((c >> 12) | 0xe0);
            result.push(((c >> 6) & 0x3f) | 0x80);
            result.push((c & 0x3f) | 0x80);
        }
    }
    return arrayify(result);
}
function _toUtf8String(codePoints) {
    return codePoints.map((codePoint) => {
        if (codePoint <= 0xffff) {
            return String.fromCharCode(codePoint);
        }
        codePoint -= 0x10000;
        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));
    }).join("");
}
function toUtf8String(bytes, onError) {
    return _toUtf8String(getUtf8CodePoints(bytes, onError));
}
function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {
    return getUtf8CodePoints(toUtf8Bytes(str, form));
}

function bytes2(data) {
    if ((data.length % 4) !== 0) {
        throw new Error("bad data");
    }
    let result = [];
    for (let i = 0; i < data.length; i += 4) {
        result.push(parseInt(data.substring(i, i + 4), 16));
    }
    return result;
}
function createTable(data, func) {
    if (!func) {
        func = function (value) { return [parseInt(value, 16)]; };
    }
    let lo = 0;
    let result = {};
    data.split(",").forEach((pair) => {
        let comps = pair.split(":");
        lo += parseInt(comps[0], 16);
        result[lo] = func(comps[1]);
    });
    return result;
}
function createRangeTable(data) {
    let hi = 0;
    return data.split(",").map((v) => {
        let comps = v.split("-");
        if (comps.length === 1) {
            comps[1] = "0";
        }
        else if (comps[1] === "") {
            comps[1] = "1";
        }
        let lo = hi + parseInt(comps[0], 16);
        hi = parseInt(comps[1], 16);
        return { l: lo, h: hi };
    });
}
function matchMap(value, ranges) {
    let lo = 0;
    for (let i = 0; i < ranges.length; i++) {
        let range = ranges[i];
        lo += range.l;
        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {
            if (range.e && range.e.indexOf(value - lo) !== -1) {
                continue;
            }
            return range;
        }
    }
    return null;
}
const Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
// @TODO: Make this relative...
const Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v) => parseInt(v, 16));
const Table_B_2_ranges = [
    { h: 25, s: 32, l: 65 },
    { h: 30, s: 32, e: [23], l: 127 },
    { h: 54, s: 1, e: [48], l: 64, d: 2 },
    { h: 14, s: 1, l: 57, d: 2 },
    { h: 44, s: 1, l: 17, d: 2 },
    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
    { h: 16, s: 1, l: 68, d: 2 },
    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
    { h: 26, s: 32, e: [17], l: 435 },
    { h: 22, s: 1, l: 71, d: 2 },
    { h: 15, s: 80, l: 40 },
    { h: 31, s: 32, l: 16 },
    { h: 32, s: 1, l: 80, d: 2 },
    { h: 52, s: 1, l: 42, d: 2 },
    { h: 12, s: 1, l: 55, d: 2 },
    { h: 40, s: 1, e: [38], l: 15, d: 2 },
    { h: 14, s: 1, l: 48, d: 2 },
    { h: 37, s: 48, l: 49 },
    { h: 148, s: 1, l: 6351, d: 2 },
    { h: 88, s: 1, l: 160, d: 2 },
    { h: 15, s: 16, l: 704 },
    { h: 25, s: 26, l: 854 },
    { h: 25, s: 32, l: 55915 },
    { h: 37, s: 40, l: 1247 },
    { h: 25, s: -119711, l: 53248 },
    { h: 25, s: -119763, l: 52 },
    { h: 25, s: -119815, l: 52 },
    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
    { h: 25, s: -119919, l: 52 },
    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
    { h: 25, s: -120075, l: 52 },
    { h: 25, s: -120127, l: 52 },
    { h: 25, s: -120179, l: 52 },
    { h: 25, s: -120231, l: 52 },
    { h: 25, s: -120283, l: 52 },
    { h: 25, s: -120335, l: 52 },
    { h: 24, s: -119543, e: [17], l: 56 },
    { h: 24, s: -119601, e: [17], l: 58 },
    { h: 24, s: -119659, e: [17], l: 58 },
    { h: 24, s: -119717, e: [17], l: 58 },
    { h: 24, s: -119775, e: [17], l: 58 }
];
const Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
const Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
const Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
const Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
function flatten(values) {
    return values.reduce((accum, value) => {
        value.forEach((value) => { accum.push(value); });
        return accum;
    }, []);
}
function _nameprepTableA1(codepoint) {
    return !!matchMap(codepoint, Table_A_1_ranges);
}
function _nameprepTableB2(codepoint) {
    let range = matchMap(codepoint, Table_B_2_ranges);
    if (range) {
        return [codepoint + range.s];
    }
    let codes = Table_B_2_lut_abs[codepoint];
    if (codes) {
        return codes;
    }
    let shift = Table_B_2_lut_rel[codepoint];
    if (shift) {
        return [codepoint + shift[0]];
    }
    let complex = Table_B_2_complex[codepoint];
    if (complex) {
        return complex;
    }
    return null;
}
function _nameprepTableC(codepoint) {
    return !!matchMap(codepoint, Table_C_ranges);
}
function nameprep(value) {
    // This allows platforms with incomplete normalize to bypass
    // it for very basic names which the built-in toLowerCase
    // will certainly handle correctly
    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
        return value.toLowerCase();
    }
    // Get the code points (keeping the current normalization)
    let codes = toUtf8CodePoints(value);
    codes = flatten(codes.map((code) => {
        // Substitute Table B.1 (Maps to Nothing)
        if (Table_B_1_flags.indexOf(code) >= 0) {
            return [];
        }
        if (code >= 0xfe00 && code <= 0xfe0f) {
            return [];
        }
        // Substitute Table B.2 (Case Folding)
        let codesTableB2 = _nameprepTableB2(code);
        if (codesTableB2) {
            return codesTableB2;
        }
        // No Substitution
        return [code];
    }));
    // Normalize using form KC
    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);
    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9
    codes.forEach((code) => {
        if (_nameprepTableC(code)) {
            throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
        }
    });
    // Prohibit Unassigned Code Points (Table A.1)
    codes.forEach((code) => {
        if (_nameprepTableA1(code)) {
            throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
        }
    });
    // IDNA extras
    let name = _toUtf8String(codes);
    // IDNA: 4.2.3.1
    if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
        throw new Error("invalid hyphen");
    }
    // IDNA: 4.2.4
    if (name.length > 63) {
        throw new Error("too long");
    }
    return name;
}

class StringCoder extends DynamicBytesCoder {
    constructor(localName) {
        super("string", localName);
    }
    defaultValue() {
        return "";
    }
    encode(writer, value) {
        return super.encode(writer, toUtf8Bytes(value));
    }
    decode(reader) {
        return toUtf8String(super.decode(reader));
    }
}

class TupleCoder extends Coder {
    constructor(coders, localName) {
        let dynamic = false;
        const types = [];
        coders.forEach((coder) => {
            if (coder.dynamic) {
                dynamic = true;
            }
            types.push(coder.type);
        });
        const type = ("tuple(" + types.join(",") + ")");
        super("tuple", type, localName, dynamic);
        this.coders = coders;
    }
    defaultValue() {
        const values = [];
        this.coders.forEach((coder) => {
            values.push(coder.defaultValue());
        });
        // We only output named properties for uniquely named coders
        const uniqueNames = this.coders.reduce((accum, coder) => {
            const name = coder.localName;
            if (name) {
                if (!accum[name]) {
                    accum[name] = 0;
                }
                accum[name]++;
            }
            return accum;
        }, {});
        // Add named values
        this.coders.forEach((coder, index) => {
            let name = coder.localName;
            if (!name || uniqueNames[name] !== 1) {
                return;
            }
            if (name === "length") {
                name = "_length";
            }
            if (values[name] != null) {
                return;
            }
            values[name] = values[index];
        });
        return Object.freeze(values);
    }
    encode(writer, value) {
        return pack(writer, this.coders, value);
    }
    decode(reader) {
        return reader.coerce(this.name, unpack(reader, this.coders));
    }
}

const logger$f = new Logger(version$f);
const paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
const paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
class AbiCoder {
    constructor(coerceFunc) {
        logger$f.checkNew(new.target, AbiCoder);
        defineReadOnly(this, "coerceFunc", coerceFunc || null);
    }
    _getCoder(param) {
        switch (param.baseType) {
            case "address":
                return new AddressCoder(param.name);
            case "bool":
                return new BooleanCoder(param.name);
            case "string":
                return new StringCoder(param.name);
            case "bytes":
                return new BytesCoder(param.name);
            case "array":
                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);
            case "tuple":
                return new TupleCoder((param.components || []).map((component) => {
                    return this._getCoder(component);
                }), param.name);
            case "":
                return new NullCoder(param.name);
        }
        // u?int[0-9]*
        let match = param.type.match(paramTypeNumber);
        if (match) {
            let size = parseInt(match[2] || "256");
            if (size === 0 || size > 256 || (size % 8) !== 0) {
                logger$f.throwArgumentError("invalid " + match[1] + " bit length", "param", param);
            }
            return new NumberCoder(size / 8, (match[1] === "int"), param.name);
        }
        // bytes[0-9]+
        match = param.type.match(paramTypeBytes);
        if (match) {
            let size = parseInt(match[1]);
            if (size === 0 || size > 32) {
                logger$f.throwArgumentError("invalid bytes length", "param", param);
            }
            return new FixedBytesCoder(size, param.name);
        }
        return logger$f.throwArgumentError("invalid type", "type", param.type);
    }
    _getWordSize() { return 32; }
    _getReader(data, allowLoose) {
        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);
    }
    _getWriter() {
        return new Writer(this._getWordSize());
    }
    getDefaultValue(types) {
        const coders = types.map((type) => this._getCoder(ParamType.from(type)));
        const coder = new TupleCoder(coders, "_");
        return coder.defaultValue();
    }
    encode(types, values) {
        if (types.length !== values.length) {
            logger$f.throwError("types/values length mismatch", Logger.errors.INVALID_ARGUMENT, {
                count: { types: types.length, values: values.length },
                value: { types: types, values: values }
            });
        }
        const coders = types.map((type) => this._getCoder(ParamType.from(type)));
        const coder = (new TupleCoder(coders, "_"));
        const writer = this._getWriter();
        coder.encode(writer, values);
        return writer.data;
    }
    decode(types, data, loose) {
        const coders = types.map((type) => this._getCoder(ParamType.from(type)));
        const coder = new TupleCoder(coders, "_");
        return coder.decode(this._getReader(arrayify(data), loose));
    }
}
const defaultAbiCoder = new AbiCoder();

function id(text) {
    return keccak256(toUtf8Bytes(text));
}

const version$b = "hash/5.5.0";

const logger$e = new Logger(version$b);
const Zeros = new Uint8Array(32);
Zeros.fill(0);
const Partition = new RegExp("^((.*)\\.)?([^.]+)$");
function namehash(name) {
    /* istanbul ignore if */
    if (typeof (name) !== "string") {
        logger$e.throwArgumentError("invalid ENS name; not a string", "name", name);
    }
    let current = name;
    let result = Zeros;
    while (current.length) {
        const partition = current.match(Partition);
        if (partition == null || partition[2] === "") {
            logger$e.throwArgumentError("invalid ENS address; missing component", "name", name);
        }
        const label = toUtf8Bytes(nameprep(partition[3]));
        result = keccak256(concat([result, keccak256(label)]));
        current = partition[2] || "";
    }
    return hexlify(result);
}

var __awaiter$7 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$d = new Logger(version$b);
const padding = new Uint8Array(32);
padding.fill(0);
const NegativeOne = BigNumber.from(-1);
const Zero = BigNumber.from(0);
const One = BigNumber.from(1);
const MaxUint256 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
function hexPadRight(value) {
    const bytes = arrayify(value);
    const padOffset = bytes.length % 32;
    if (padOffset) {
        return hexConcat([bytes, padding.slice(padOffset)]);
    }
    return hexlify(bytes);
}
const hexTrue = hexZeroPad(One.toHexString(), 32);
const hexFalse = hexZeroPad(Zero.toHexString(), 32);
const domainFieldTypes = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
};
const domainFieldNames = [
    "name", "version", "chainId", "verifyingContract", "salt"
];
function checkString(key) {
    return function (value) {
        if (typeof (value) !== "string") {
            logger$d.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);
        }
        return value;
    };
}
const domainChecks = {
    name: checkString("name"),
    version: checkString("version"),
    chainId: function (value) {
        try {
            return BigNumber.from(value).toString();
        }
        catch (error) { }
        return logger$d.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function (value) {
        try {
            return getAddress(value).toLowerCase();
        }
        catch (error) { }
        return logger$d.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function (value) {
        try {
            const bytes = arrayify(value);
            if (bytes.length !== 32) {
                throw new Error("bad length");
            }
            return hexlify(bytes);
        }
        catch (error) { }
        return logger$d.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
};
function getBaseEncoder(type) {
    // intXX and uintXX
    {
        const match = type.match(/^(u?)int(\d*)$/);
        if (match) {
            const signed = (match[1] === "");
            const width = parseInt(match[2] || "256");
            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {
                logger$d.throwArgumentError("invalid numeric width", "type", type);
            }
            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);
            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;
            return function (value) {
                const v = BigNumber.from(value);
                if (v.lt(boundsLower) || v.gt(boundsUpper)) {
                    logger$d.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
                }
                return hexZeroPad(v.toTwos(256).toHexString(), 32);
            };
        }
    }
    // bytesXX
    {
        const match = type.match(/^bytes(\d+)$/);
        if (match) {
            const width = parseInt(match[1]);
            if (width === 0 || width > 32 || match[1] !== String(width)) {
                logger$d.throwArgumentError("invalid bytes width", "type", type);
            }
            return function (value) {
                const bytes = arrayify(value);
                if (bytes.length !== width) {
                    logger$d.throwArgumentError(`invalid length for ${type}`, "value", value);
                }
                return hexPadRight(value);
            };
        }
    }
    switch (type) {
        case "address": return function (value) {
            return hexZeroPad(getAddress(value), 32);
        };
        case "bool": return function (value) {
            return ((!value) ? hexFalse : hexTrue);
        };
        case "bytes": return function (value) {
            return keccak256(value);
        };
        case "string": return function (value) {
            return id(value);
        };
    }
    return null;
}
function encodeType(name, fields) {
    return `${name}(${fields.map(({ name, type }) => (type + " " + name)).join(",")})`;
}
class TypedDataEncoder {
    constructor(types) {
        defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
        defineReadOnly(this, "_encoderCache", {});
        defineReadOnly(this, "_types", {});
        // Link struct types to their direct child structs
        const links = {};
        // Link structs to structs which contain them as a child
        const parents = {};
        // Link all subtypes within a given struct
        const subtypes = {};
        Object.keys(types).forEach((type) => {
            links[type] = {};
            parents[type] = [];
            subtypes[type] = {};
        });
        for (const name in types) {
            const uniqueNames = {};
            types[name].forEach((field) => {
                // Check each field has a unique name
                if (uniqueNames[field.name]) {
                    logger$d.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
                }
                uniqueNames[field.name] = true;
                // Get the base type (drop any array specifiers)
                const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
                if (baseType === name) {
                    logger$d.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
                }
                // Is this a base encoding type?
                const encoder = getBaseEncoder(baseType);
                if (encoder) {
                    return;
                }
                if (!parents[baseType]) {
                    logger$d.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
                }
                // Add linkage
                parents[baseType].push(name);
                links[name][baseType] = true;
            });
        }
        // Deduce the primary type
        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));
        if (primaryTypes.length === 0) {
            logger$d.throwArgumentError("missing primary type", "types", types);
        }
        else if (primaryTypes.length > 1) {
            logger$d.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(", ")}`, "types", types);
        }
        defineReadOnly(this, "primaryType", primaryTypes[0]);
        // Check for circular type references
        function checkCircular(type, found) {
            if (found[type]) {
                logger$d.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
            }
            found[type] = true;
            Object.keys(links[type]).forEach((child) => {
                if (!parents[child]) {
                    return;
                }
                // Recursively check children
                checkCircular(child, found);
                // Mark all ancestors as having this decendant
                Object.keys(found).forEach((subtype) => {
                    subtypes[subtype][child] = true;
                });
            });
            delete found[type];
        }
        checkCircular(this.primaryType, {});
        // Compute each fully describe type
        for (const name in subtypes) {
            const st = Object.keys(subtypes[name]);
            st.sort();
            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join("");
        }
    }
    getEncoder(type) {
        let encoder = this._encoderCache[type];
        if (!encoder) {
            encoder = this._encoderCache[type] = this._getEncoder(type);
        }
        return encoder;
    }
    _getEncoder(type) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return encoder;
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const subEncoder = this.getEncoder(subtype);
            const length = parseInt(match[3]);
            return (value) => {
                if (length >= 0 && value.length !== length) {
                    logger$d.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
                }
                let result = value.map(subEncoder);
                if (this._types[subtype]) {
                    result = result.map(keccak256);
                }
                return keccak256(hexConcat(result));
            };
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            const encodedType = id(this._types[type]);
            return (value) => {
                const values = fields.map(({ name, type }) => {
                    const result = this.getEncoder(type)(value[name]);
                    if (this._types[type]) {
                        return keccak256(result);
                    }
                    return result;
                });
                values.unshift(encodedType);
                return hexConcat(values);
            };
        }
        return logger$d.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
        const result = this._types[name];
        if (!result) {
            logger$d.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
        }
        return result;
    }
    encodeData(type, value) {
        return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
        return keccak256(this.encodeData(name, value));
    }
    encode(value) {
        return this.encodeData(this.primaryType, value);
    }
    hash(value) {
        return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
        // Basic encoder type (address, bool, uint256, etc)
        {
            const encoder = getBaseEncoder(type);
            if (encoder) {
                return callback(type, value);
            }
        }
        // Array
        const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
        if (match) {
            const subtype = match[1];
            const length = parseInt(match[3]);
            if (length >= 0 && value.length !== length) {
                logger$d.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
            }
            return value.map((v) => this._visit(subtype, v, callback));
        }
        // Struct
        const fields = this.types[type];
        if (fields) {
            return fields.reduce((accum, { name, type }) => {
                accum[name] = this._visit(type, value[name], callback);
                return accum;
            }, {});
        }
        return logger$d.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
        return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
        return new TypedDataEncoder(types);
    }
    static getPrimaryType(types) {
        return TypedDataEncoder.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
        return TypedDataEncoder.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
        const domainFields = [];
        for (const name in domain) {
            const type = domainFieldTypes[name];
            if (!type) {
                logger$d.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
            }
            domainFields.push({ name, type });
        }
        domainFields.sort((a, b) => {
            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
        });
        return TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
    }
    static encode(domain, types, value) {
        return hexConcat([
            "0x1901",
            TypedDataEncoder.hashDomain(domain),
            TypedDataEncoder.from(types).hash(value)
        ]);
    }
    static hash(domain, types, value) {
        return keccak256(TypedDataEncoder.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName) {
        return __awaiter$7(this, void 0, void 0, function* () {
            // Make a copy to isolate it from the object passed in
            domain = shallowCopy(domain);
            // Look up all ENS names
            const ensCache = {};
            // Do we need to look up the domain's verifyingContract?
            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
                ensCache[domain.verifyingContract] = "0x";
            }
            // We are going to use the encoder to visit all the base values
            const encoder = TypedDataEncoder.from(types);
            // Get a list of all the addresses
            encoder.visit(value, (type, value) => {
                if (type === "address" && !isHexString(value, 20)) {
                    ensCache[value] = "0x";
                }
                return value;
            });
            // Lookup each name
            for (const name in ensCache) {
                ensCache[name] = yield resolveName(name);
            }
            // Replace the domain verifyingContract if needed
            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
                domain.verifyingContract = ensCache[domain.verifyingContract];
            }
            // Replace all ENS names with their address
            value = encoder.visit(value, (type, value) => {
                if (type === "address" && ensCache[value]) {
                    return ensCache[value];
                }
                return value;
            });
            return { domain, value };
        });
    }
    static getPayload(domain, types, value) {
        // Validate the domain fields
        TypedDataEncoder.hashDomain(domain);
        // Derive the EIP712Domain Struct reference type
        const domainValues = {};
        const domainTypes = [];
        domainFieldNames.forEach((name) => {
            const value = domain[name];
            if (value == null) {
                return;
            }
            domainValues[name] = domainChecks[name](value);
            domainTypes.push({ name, type: domainFieldTypes[name] });
        });
        const encoder = TypedDataEncoder.from(types);
        const typesWithDomain = shallowCopy(types);
        if (typesWithDomain.EIP712Domain) {
            logger$d.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
        }
        else {
            typesWithDomain.EIP712Domain = domainTypes;
        }
        // Validate the data structures and types
        encoder.encode(value);
        return {
            types: typesWithDomain,
            domain: domainValues,
            primaryType: encoder.primaryType,
            message: encoder.visit(value, (type, value) => {
                // bytes
                if (type.match(/^bytes(\d*)/)) {
                    return hexlify(arrayify(value));
                }
                // uint or int
                if (type.match(/^u?int/)) {
                    return BigNumber.from(value).toString();
                }
                switch (type) {
                    case "address":
                        return value.toLowerCase();
                    case "bool":
                        return !!value;
                    case "string":
                        if (typeof (value) !== "string") {
                            logger$d.throwArgumentError(`invalid string`, "value", value);
                        }
                        return value;
                }
                return logger$d.throwArgumentError("unsupported type", "type", type);
            })
        };
    }
}

const logger$c = new Logger(version$f);
class LogDescription extends Description {
}
class TransactionDescription extends Description {
}
class ErrorDescription extends Description {
}
class Indexed extends Description {
    static isIndexed(value) {
        return !!(value && value._isIndexed);
    }
}
const BuiltinErrors = {
    "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true },
    "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] }
};
function wrapAccessError(property, error) {
    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);
    wrap.error = error;
    return wrap;
}
/*
function checkNames(fragment: Fragment, type: "input" | "output", params: Array<ParamType>): void {
    params.reduce((accum, param) => {
        if (param.name) {
            if (accum[param.name]) {
                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format("full") }`, "fragment", fragment);
            }
            accum[param.name] = true;
        }
        return accum;
    }, <{ [ name: string ]: boolean }>{ });
}
*/
class Interface {
    constructor(fragments) {
        logger$c.checkNew(new.target, Interface);
        let abi = [];
        if (typeof (fragments) === "string") {
            abi = JSON.parse(fragments);
        }
        else {
            abi = fragments;
        }
        defineReadOnly(this, "fragments", abi.map((fragment) => {
            return Fragment.from(fragment);
        }).filter((fragment) => (fragment != null)));
        defineReadOnly(this, "_abiCoder", getStatic(new.target, "getAbiCoder")());
        defineReadOnly(this, "functions", {});
        defineReadOnly(this, "errors", {});
        defineReadOnly(this, "events", {});
        defineReadOnly(this, "structs", {});
        // Add all fragments by their signature
        this.fragments.forEach((fragment) => {
            let bucket = null;
            switch (fragment.type) {
                case "constructor":
                    if (this.deploy) {
                        logger$c.warn("duplicate definition - constructor");
                        return;
                    }
                    //checkNames(fragment, "input", fragment.inputs);
                    defineReadOnly(this, "deploy", fragment);
                    return;
                case "function":
                    //checkNames(fragment, "input", fragment.inputs);
                    //checkNames(fragment, "output", (<FunctionFragment>fragment).outputs);
                    bucket = this.functions;
                    break;
                case "event":
                    //checkNames(fragment, "input", fragment.inputs);
                    bucket = this.events;
                    break;
                case "error":
                    bucket = this.errors;
                    break;
                default:
                    return;
            }
            let signature = fragment.format();
            if (bucket[signature]) {
                logger$c.warn("duplicate definition - " + signature);
                return;
            }
            bucket[signature] = fragment;
        });
        // If we do not have a constructor add a default
        if (!this.deploy) {
            defineReadOnly(this, "deploy", ConstructorFragment.from({
                payable: false,
                type: "constructor"
            }));
        }
        defineReadOnly(this, "_isInterface", true);
    }
    format(format) {
        if (!format) {
            format = FormatTypes.full;
        }
        if (format === FormatTypes.sighash) {
            logger$c.throwArgumentError("interface does not support formatting sighash", "format", format);
        }
        const abi = this.fragments.map((fragment) => fragment.format(format));
        // We need to re-bundle the JSON fragments a bit
        if (format === FormatTypes.json) {
            return JSON.stringify(abi.map((j) => JSON.parse(j)));
        }
        return abi;
    }
    // Sub-classes can override these to handle other blockchains
    static getAbiCoder() {
        return defaultAbiCoder;
    }
    static getAddress(address) {
        return getAddress(address);
    }
    static getSighash(fragment) {
        return hexDataSlice(id(fragment.format()), 0, 4);
    }
    static getEventTopic(eventFragment) {
        return id(eventFragment.format());
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getFunction(nameOrSignatureOrSighash) {
        if (isHexString(nameOrSignatureOrSighash)) {
            for (const name in this.functions) {
                if (nameOrSignatureOrSighash === this.getSighash(name)) {
                    return this.functions[name];
                }
            }
            logger$c.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.functions).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger$c.throwArgumentError("no matching function", "name", name);
            }
            else if (matching.length > 1) {
                logger$c.throwArgumentError("multiple matching functions", "name", name);
            }
            return this.functions[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
        if (!result) {
            logger$c.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash);
        }
        return result;
    }
    // Find an event definition by any means necessary (unless it is ambiguous)
    getEvent(nameOrSignatureOrTopic) {
        if (isHexString(nameOrSignatureOrTopic)) {
            const topichash = nameOrSignatureOrTopic.toLowerCase();
            for (const name in this.events) {
                if (topichash === this.getEventTopic(name)) {
                    return this.events[name];
                }
            }
            logger$c.throwArgumentError("no matching event", "topichash", topichash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrTopic.indexOf("(") === -1) {
            const name = nameOrSignatureOrTopic.trim();
            const matching = Object.keys(this.events).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger$c.throwArgumentError("no matching event", "name", name);
            }
            else if (matching.length > 1) {
                logger$c.throwArgumentError("multiple matching events", "name", name);
            }
            return this.events[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];
        if (!result) {
            logger$c.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic);
        }
        return result;
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getError(nameOrSignatureOrSighash) {
        if (isHexString(nameOrSignatureOrSighash)) {
            const getSighash = getStatic(this.constructor, "getSighash");
            for (const name in this.errors) {
                const error = this.errors[name];
                if (nameOrSignatureOrSighash === getSighash(error)) {
                    return this.errors[name];
                }
            }
            logger$c.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
        }
        // It is a bare name, look up the function (will return null if ambiguous)
        if (nameOrSignatureOrSighash.indexOf("(") === -1) {
            const name = nameOrSignatureOrSighash.trim();
            const matching = Object.keys(this.errors).filter((f) => (f.split("(" /* fix:) */)[0] === name));
            if (matching.length === 0) {
                logger$c.throwArgumentError("no matching error", "name", name);
            }
            else if (matching.length > 1) {
                logger$c.throwArgumentError("multiple matching errors", "name", name);
            }
            return this.errors[matching[0]];
        }
        // Normalize the signature and lookup the function
        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
        if (!result) {
            logger$c.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash);
        }
        return result;
    }
    // Get the sighash (the bytes4 selector) used by Solidity to identify a function
    getSighash(fragment) {
        if (typeof (fragment) === "string") {
            try {
                fragment = this.getFunction(fragment);
            }
            catch (error) {
                try {
                    fragment = this.getError(fragment);
                }
                catch (_) {
                    throw error;
                }
            }
        }
        return getStatic(this.constructor, "getSighash")(fragment);
    }
    // Get the topic (the bytes32 hash) used by Solidity to identify an event
    getEventTopic(eventFragment) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        return getStatic(this.constructor, "getEventTopic")(eventFragment);
    }
    _decodeParams(params, data) {
        return this._abiCoder.decode(params, data);
    }
    _encodeParams(params, values) {
        return this._abiCoder.encode(params, values);
    }
    encodeDeploy(values) {
        return this._encodeParams(this.deploy.inputs, values || []);
    }
    decodeErrorResult(fragment, data) {
        if (typeof (fragment) === "string") {
            fragment = this.getError(fragment);
        }
        const bytes = arrayify(data);
        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {
            logger$c.throwArgumentError(`data signature does not match error ${fragment.name}.`, "data", hexlify(bytes));
        }
        return this._decodeParams(fragment.inputs, bytes.slice(4));
    }
    encodeErrorResult(fragment, values) {
        if (typeof (fragment) === "string") {
            fragment = this.getError(fragment);
        }
        return hexlify(concat([
            this.getSighash(fragment),
            this._encodeParams(fragment.inputs, values || [])
        ]));
    }
    // Decode the data for a function call (e.g. tx.data)
    decodeFunctionData(functionFragment, data) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        const bytes = arrayify(data);
        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {
            logger$c.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, "data", hexlify(bytes));
        }
        return this._decodeParams(functionFragment.inputs, bytes.slice(4));
    }
    // Encode the data for a function call (e.g. tx.data)
    encodeFunctionData(functionFragment, values) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        return hexlify(concat([
            this.getSighash(functionFragment),
            this._encodeParams(functionFragment.inputs, values || [])
        ]));
    }
    // Decode the result from a function call (e.g. from eth_call)
    decodeFunctionResult(functionFragment, data) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        let bytes = arrayify(data);
        let reason = null;
        let errorArgs = null;
        let errorName = null;
        let errorSignature = null;
        switch (bytes.length % this._abiCoder._getWordSize()) {
            case 0:
                try {
                    return this._abiCoder.decode(functionFragment.outputs, bytes);
                }
                catch (error) { }
                break;
            case 4: {
                const selector = hexlify(bytes.slice(0, 4));
                const builtin = BuiltinErrors[selector];
                if (builtin) {
                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));
                    errorName = builtin.name;
                    errorSignature = builtin.signature;
                    if (builtin.reason) {
                        reason = errorArgs[0];
                    }
                }
                else {
                    try {
                        const error = this.getError(selector);
                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));
                        errorName = error.name;
                        errorSignature = error.format();
                    }
                    catch (error) {
                        console.log(error);
                    }
                }
                break;
            }
        }
        return logger$c.throwError("call revert exception", Logger.errors.CALL_EXCEPTION, {
            method: functionFragment.format(),
            errorArgs, errorName, errorSignature, reason
        });
    }
    // Encode the result for a function call (e.g. for eth_call)
    encodeFunctionResult(functionFragment, values) {
        if (typeof (functionFragment) === "string") {
            functionFragment = this.getFunction(functionFragment);
        }
        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));
    }
    // Create the filter for the event with search criteria (e.g. for eth_filterLog)
    encodeFilterTopics(eventFragment, values) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        if (values.length > eventFragment.inputs.length) {
            logger$c.throwError("too many arguments for " + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {
                argument: "values",
                value: values
            });
        }
        let topics = [];
        if (!eventFragment.anonymous) {
            topics.push(this.getEventTopic(eventFragment));
        }
        const encodeTopic = (param, value) => {
            if (param.type === "string") {
                return id(value);
            }
            else if (param.type === "bytes") {
                return keccak256(hexlify(value));
            }
            // Check addresses are valid
            if (param.type === "address") {
                this._abiCoder.encode(["address"], [value]);
            }
            return hexZeroPad(hexlify(value), 32);
        };
        values.forEach((value, index) => {
            let param = eventFragment.inputs[index];
            if (!param.indexed) {
                if (value != null) {
                    logger$c.throwArgumentError("cannot filter non-indexed parameters; must be null", ("contract." + param.name), value);
                }
                return;
            }
            if (value == null) {
                topics.push(null);
            }
            else if (param.baseType === "array" || param.baseType === "tuple") {
                logger$c.throwArgumentError("filtering with tuples or arrays not supported", ("contract." + param.name), value);
            }
            else if (Array.isArray(value)) {
                topics.push(value.map((value) => encodeTopic(param, value)));
            }
            else {
                topics.push(encodeTopic(param, value));
            }
        });
        // Trim off trailing nulls
        while (topics.length && topics[topics.length - 1] === null) {
            topics.pop();
        }
        return topics;
    }
    encodeEventLog(eventFragment, values) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        const topics = [];
        const dataTypes = [];
        const dataValues = [];
        if (!eventFragment.anonymous) {
            topics.push(this.getEventTopic(eventFragment));
        }
        if (values.length !== eventFragment.inputs.length) {
            logger$c.throwArgumentError("event arguments/values mismatch", "values", values);
        }
        eventFragment.inputs.forEach((param, index) => {
            const value = values[index];
            if (param.indexed) {
                if (param.type === "string") {
                    topics.push(id(value));
                }
                else if (param.type === "bytes") {
                    topics.push(keccak256(value));
                }
                else if (param.baseType === "tuple" || param.baseType === "array") {
                    // @TODO
                    throw new Error("not implemented");
                }
                else {
                    topics.push(this._abiCoder.encode([param.type], [value]));
                }
            }
            else {
                dataTypes.push(param);
                dataValues.push(value);
            }
        });
        return {
            data: this._abiCoder.encode(dataTypes, dataValues),
            topics: topics
        };
    }
    // Decode a filter for the event and the search criteria
    decodeEventLog(eventFragment, data, topics) {
        if (typeof (eventFragment) === "string") {
            eventFragment = this.getEvent(eventFragment);
        }
        if (topics != null && !eventFragment.anonymous) {
            let topicHash = this.getEventTopic(eventFragment);
            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {
                logger$c.throwError("fragment/topic mismatch", Logger.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: topicHash, value: topics[0] });
            }
            topics = topics.slice(1);
        }
        let indexed = [];
        let nonIndexed = [];
        let dynamic = [];
        eventFragment.inputs.forEach((param, index) => {
            if (param.indexed) {
                if (param.type === "string" || param.type === "bytes" || param.baseType === "tuple" || param.baseType === "array") {
                    indexed.push(ParamType.fromObject({ type: "bytes32", name: param.name }));
                    dynamic.push(true);
                }
                else {
                    indexed.push(param);
                    dynamic.push(false);
                }
            }
            else {
                nonIndexed.push(param);
                dynamic.push(false);
            }
        });
        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;
        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);
        let result = [];
        let nonIndexedIndex = 0, indexedIndex = 0;
        eventFragment.inputs.forEach((param, index) => {
            if (param.indexed) {
                if (resultIndexed == null) {
                    result[index] = new Indexed({ _isIndexed: true, hash: null });
                }
                else if (dynamic[index]) {
                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });
                }
                else {
                    try {
                        result[index] = resultIndexed[indexedIndex++];
                    }
                    catch (error) {
                        result[index] = error;
                    }
                }
            }
            else {
                try {
                    result[index] = resultNonIndexed[nonIndexedIndex++];
                }
                catch (error) {
                    result[index] = error;
                }
            }
            // Add the keyword argument if named and safe
            if (param.name && result[param.name] == null) {
                const value = result[index];
                // Make error named values throw on access
                if (value instanceof Error) {
                    Object.defineProperty(result, param.name, {
                        enumerable: true,
                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }
                    });
                }
                else {
                    result[param.name] = value;
                }
            }
        });
        // Make all error indexed values throw on access
        for (let i = 0; i < result.length; i++) {
            const value = result[i];
            if (value instanceof Error) {
                Object.defineProperty(result, i, {
                    enumerable: true,
                    get: () => { throw wrapAccessError(`index ${i}`, value); }
                });
            }
        }
        return Object.freeze(result);
    }
    // Given a transaction, find the matching function fragment (if any) and
    // determine all its properties and call parameters
    parseTransaction(tx) {
        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
        if (!fragment) {
            return null;
        }
        return new TransactionDescription({
            args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
            functionFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
            value: BigNumber.from(tx.value || "0"),
        });
    }
    // @TODO
    //parseCallResult(data: BytesLike): ??
    // Given an event log, find the matching event fragment (if any) and
    // determine all its properties and values
    parseLog(log) {
        let fragment = this.getEvent(log.topics[0]);
        if (!fragment || fragment.anonymous) {
            return null;
        }
        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?
        //        Probably not, because just because it is the only event in the ABI does
        //        not mean we have the full ABI; maybe just a fragment?
        return new LogDescription({
            eventFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            topic: this.getEventTopic(fragment),
            args: this.decodeEventLog(fragment, log.data, log.topics)
        });
    }
    parseError(data) {
        const hexData = hexlify(data);
        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());
        if (!fragment) {
            return null;
        }
        return new ErrorDescription({
            args: this._abiCoder.decode(fragment.inputs, "0x" + hexData.substring(10)),
            errorFragment: fragment,
            name: fragment.name,
            signature: fragment.format(),
            sighash: this.getSighash(fragment),
        });
    }
    /*
    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {
        if (Interface.isInterface(value)) {
            return value;
        }
        if (typeof(value) === "string") {
            return new Interface(JSON.parse(value));
        }
        return new Interface(value);
    }
    */
    static isInterface(value) {
        return !!(value && value._isInterface);
    }
}

const version$a = "abstract-provider/5.5.1";

var __awaiter$6 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$b = new Logger(version$a);
//export type CallTransactionable = {
//    call(transaction: TransactionRequest): Promise<TransactionResponse>;
//};
class ForkEvent extends Description {
    static isForkEvent(value) {
        return !!(value && value._isForkEvent);
    }
}
///////////////////////////////
// Exported Abstracts
class Provider {
    constructor() {
        logger$b.checkAbstract(new.target, Provider);
        defineReadOnly(this, "_isProvider", true);
    }
    getFeeData() {
        return __awaiter$6(this, void 0, void 0, function* () {
            const { block, gasPrice } = yield resolveProperties({
                block: this.getBlock("latest"),
                gasPrice: this.getGasPrice().catch((error) => {
                    // @TODO: Why is this now failing on Calaveras?
                    //console.log(error);
                    return null;
                })
            });
            let maxFeePerGas = null, maxPriorityFeePerGas = null;
            if (block && block.baseFeePerGas) {
                // We may want to compute this more accurately in the future,
                // using the formula "check if the base fee is correct".
                // See: https://eips.ethereum.org/EIPS/eip-1559
                maxPriorityFeePerGas = BigNumber.from("2500000000");
                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
            }
            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };
        });
    }
    // Alias for "on"
    addListener(eventName, listener) {
        return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
    static isProvider(value) {
        return !!(value && value._isProvider);
    }
}

const version$9 = "abstract-signer/5.5.0";

var __awaiter$5 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$a = new Logger(version$9);
const allowedTransactionKeys$1 = [
    "accessList", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"
];
const forwardErrors = [
    Logger.errors.INSUFFICIENT_FUNDS,
    Logger.errors.NONCE_EXPIRED,
    Logger.errors.REPLACEMENT_UNDERPRICED,
];
class Signer {
    ///////////////////
    // Sub-classes MUST call super
    constructor() {
        logger$a.checkAbstract(new.target, Signer);
        defineReadOnly(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("getBalance");
            return yield this.provider.getBalance(this.getAddress(), blockTag);
        });
    }
    getTransactionCount(blockTag) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("getTransactionCount");
            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
        });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("estimateGas");
            const tx = yield resolveProperties(this.checkTransaction(transaction));
            return yield this.provider.estimateGas(tx);
        });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("call");
            const tx = yield resolveProperties(this.checkTransaction(transaction));
            return yield this.provider.call(tx, blockTag);
        });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("sendTransaction");
            const tx = yield this.populateTransaction(transaction);
            const signedTx = yield this.signTransaction(tx);
            return yield this.provider.sendTransaction(signedTx);
        });
    }
    getChainId() {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("getChainId");
            const network = yield this.provider.getNetwork();
            return network.chainId;
        });
    }
    getGasPrice() {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("getGasPrice");
            return yield this.provider.getGasPrice();
        });
    }
    getFeeData() {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("getFeeData");
            return yield this.provider.getFeeData();
        });
    }
    resolveName(name) {
        return __awaiter$5(this, void 0, void 0, function* () {
            this._checkProvider("resolveName");
            return yield this.provider.resolveName(name);
        });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
        for (const key in transaction) {
            if (allowedTransactionKeys$1.indexOf(key) === -1) {
                logger$a.throwArgumentError("invalid transaction key: " + key, "transaction", transaction);
            }
        }
        const tx = shallowCopy(transaction);
        if (tx.from == null) {
            tx.from = this.getAddress();
        }
        else {
            // Make sure any provided address matches this signer
            tx.from = Promise.all([
                Promise.resolve(tx.from),
                this.getAddress()
            ]).then((result) => {
                if (result[0].toLowerCase() !== result[1].toLowerCase()) {
                    logger$a.throwArgumentError("from address mismatch", "transaction", transaction);
                }
                return result[0];
            });
        }
        return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
        return __awaiter$5(this, void 0, void 0, function* () {
            const tx = yield resolveProperties(this.checkTransaction(transaction));
            if (tx.to != null) {
                tx.to = Promise.resolve(tx.to).then((to) => __awaiter$5(this, void 0, void 0, function* () {
                    if (to == null) {
                        return null;
                    }
                    const address = yield this.resolveName(to);
                    if (address == null) {
                        logger$a.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                    }
                    return address;
                }));
                // Prevent this error from causing an UnhandledPromiseException
                tx.to.catch((error) => { });
            }
            // Do not allow mixing pre-eip-1559 and eip-1559 properties
            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);
            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
                logger$a.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
            }
            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
                logger$a.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
            }
            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
                // Fully-formed EIP-1559 transaction (skip getFeeData)
                tx.type = 2;
            }
            else if (tx.type === 0 || tx.type === 1) {
                // Explicit Legacy or EIP-2930 transaction
                // Populate missing gasPrice
                if (tx.gasPrice == null) {
                    tx.gasPrice = this.getGasPrice();
                }
            }
            else {
                // We need to get fee data to determine things
                const feeData = yield this.getFeeData();
                if (tx.type == null) {
                    // We need to auto-detect the intended type of this transaction...
                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
                        // The network supports EIP-1559!
                        // Upgrade transaction from null to eip-1559
                        tx.type = 2;
                        if (tx.gasPrice != null) {
                            // Using legacy gasPrice property on an eip-1559 network,
                            // so use gasPrice as both fee properties
                            const gasPrice = tx.gasPrice;
                            delete tx.gasPrice;
                            tx.maxFeePerGas = gasPrice;
                            tx.maxPriorityFeePerGas = gasPrice;
                        }
                        else {
                            // Populate missing fee data
                            if (tx.maxFeePerGas == null) {
                                tx.maxFeePerGas = feeData.maxFeePerGas;
                            }
                            if (tx.maxPriorityFeePerGas == null) {
                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                            }
                        }
                    }
                    else if (feeData.gasPrice != null) {
                        // Network doesn't support EIP-1559...
                        // ...but they are trying to use EIP-1559 properties
                        if (hasEip1559) {
                            logger$a.throwError("network does not support EIP-1559", Logger.errors.UNSUPPORTED_OPERATION, {
                                operation: "populateTransaction"
                            });
                        }
                        // Populate missing fee data
                        if (tx.gasPrice == null) {
                            tx.gasPrice = feeData.gasPrice;
                        }
                        // Explicitly set untyped transaction to legacy
                        tx.type = 0;
                    }
                    else {
                        // getFeeData has failed us.
                        logger$a.throwError("failed to get consistent fee data", Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "signer.getFeeData"
                        });
                    }
                }
                else if (tx.type === 2) {
                    // Explicitly using EIP-1559
                    // Populate missing fee data
                    if (tx.maxFeePerGas == null) {
                        tx.maxFeePerGas = feeData.maxFeePerGas;
                    }
                    if (tx.maxPriorityFeePerGas == null) {
                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                    }
                }
            }
            if (tx.nonce == null) {
                tx.nonce = this.getTransactionCount("pending");
            }
            if (tx.gasLimit == null) {
                tx.gasLimit = this.estimateGas(tx).catch((error) => {
                    if (forwardErrors.indexOf(error.code) >= 0) {
                        throw error;
                    }
                    return logger$a.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
                        error: error,
                        tx: tx
                    });
                });
            }
            if (tx.chainId == null) {
                tx.chainId = this.getChainId();
            }
            else {
                tx.chainId = Promise.all([
                    Promise.resolve(tx.chainId),
                    this.getChainId()
                ]).then((results) => {
                    if (results[1] !== 0 && results[0] !== results[1]) {
                        logger$a.throwArgumentError("chainId address mismatch", "transaction", transaction);
                    }
                    return results[0];
                });
            }
            return yield resolveProperties(tx);
        });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
        if (!this.provider) {
            logger$a.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: (operation || "_checkProvider")
            });
        }
    }
    static isSigner(value) {
        return !!(value && value._isSigner);
    }
}
class VoidSigner extends Signer {
    constructor(address, provider) {
        logger$a.checkNew(new.target, VoidSigner);
        super();
        defineReadOnly(this, "address", address);
        defineReadOnly(this, "provider", provider || null);
    }
    getAddress() {
        return Promise.resolve(this.address);
    }
    _fail(message, operation) {
        return Promise.resolve().then(() => {
            logger$a.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });
        });
    }
    signMessage(message) {
        return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
    signTransaction(transaction) {
        return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
    _signTypedData(domain, types, value) {
        return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
    connect(provider) {
        return new VoidSigner(this.address, provider);
    }
}

var minimalisticAssert$1 = assert$6;

function assert$6(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert$6.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

var isBuffer = function isBuffer(arg) {
  return arg instanceof Buffer;
};

var inherits_browser$2 = createCommonjsModule$1(function (module) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor;
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  };
}
});

var require$$0 = util;

var inherits$1 = createCommonjsModule$1(function (module) {
try {
  var util = require$$0;
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  module.exports = inherits_browser$2;
}
});

var util = createCommonjsModule$1(function (module, exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||
  function getOwnPropertyDescriptors(obj) {
    var keys = Object.keys(obj);
    var descriptors = {};
    for (var i = 0; i < keys.length; i++) {
      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);
    }
    return descriptors;
  };

var formatRegExp = /%[sdj%]/g;
exports.format = function(f) {
  if (!isString(f)) {
    var objects = [];
    for (var i = 0; i < arguments.length; i++) {
      objects.push(inspect(arguments[i]));
    }
    return objects.join(' ');
  }

  var i = 1;
  var args = arguments;
  var len = args.length;
  var str = String(f).replace(formatRegExp, function(x) {
    if (x === '%%') return '%';
    if (i >= len) return x;
    switch (x) {
      case '%s': return String(args[i++]);
      case '%d': return Number(args[i++]);
      case '%j':
        try {
          return JSON.stringify(args[i++]);
        } catch (_) {
          return '[Circular]';
        }
      default:
        return x;
    }
  });
  for (var x = args[i]; i < len; x = args[++i]) {
    if (isNull(x) || !isObject(x)) {
      str += ' ' + x;
    } else {
      str += ' ' + inspect(x);
    }
  }
  return str;
};


// Mark that a method should not be used.
// Returns a modified function which warns once by default.
// If --no-deprecation is set, then it is a no-op.
exports.deprecate = function(fn, msg) {
  if (typeof process !== 'undefined' && process.noDeprecation === true) {
    return fn;
  }

  // Allow for deprecating things in the process of starting up.
  if (typeof process === 'undefined') {
    return function() {
      return exports.deprecate(fn, msg).apply(this, arguments);
    };
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (process.throwDeprecation) {
        throw new Error(msg);
      } else if (process.traceDeprecation) {
        console.trace(msg);
      } else {
        console.error(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
};


var debugs = {};
var debugEnviron;
exports.debuglog = function(set) {
  if (isUndefined(debugEnviron))
    debugEnviron = process.env.NODE_DEBUG || '';
  set = set.toUpperCase();
  if (!debugs[set]) {
    if (new RegExp('\\b' + set + '\\b', 'i').test(debugEnviron)) {
      var pid = process.pid;
      debugs[set] = function() {
        var msg = exports.format.apply(exports, arguments);
        console.error('%s %d: %s', set, pid, msg);
      };
    } else {
      debugs[set] = function() {};
    }
  }
  return debugs[set];
};


/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */
/* legacy: obj, showHidden, depth, colors*/
function inspect(obj, opts) {
  // default options
  var ctx = {
    seen: [],
    stylize: stylizeNoColor
  };
  // legacy...
  if (arguments.length >= 3) ctx.depth = arguments[2];
  if (arguments.length >= 4) ctx.colors = arguments[3];
  if (isBoolean(opts)) {
    // legacy...
    ctx.showHidden = opts;
  } else if (opts) {
    // got an "options" object
    exports._extend(ctx, opts);
  }
  // set default options
  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;
  if (isUndefined(ctx.depth)) ctx.depth = 2;
  if (isUndefined(ctx.colors)) ctx.colors = false;
  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;
  if (ctx.colors) ctx.stylize = stylizeWithColor;
  return formatValue(ctx, obj, ctx.depth);
}
exports.inspect = inspect;


// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics
inspect.colors = {
  'bold' : [1, 22],
  'italic' : [3, 23],
  'underline' : [4, 24],
  'inverse' : [7, 27],
  'white' : [37, 39],
  'grey' : [90, 39],
  'black' : [30, 39],
  'blue' : [34, 39],
  'cyan' : [36, 39],
  'green' : [32, 39],
  'magenta' : [35, 39],
  'red' : [31, 39],
  'yellow' : [33, 39]
};

// Don't use 'blue' not visible on cmd.exe
inspect.styles = {
  'special': 'cyan',
  'number': 'yellow',
  'boolean': 'yellow',
  'undefined': 'grey',
  'null': 'bold',
  'string': 'green',
  'date': 'magenta',
  // "name": intentionally not styling
  'regexp': 'red'
};


function stylizeWithColor(str, styleType) {
  var style = inspect.styles[styleType];

  if (style) {
    return '\u001b[' + inspect.colors[style][0] + 'm' + str +
           '\u001b[' + inspect.colors[style][1] + 'm';
  } else {
    return str;
  }
}


function stylizeNoColor(str, styleType) {
  return str;
}


function arrayToHash(array) {
  var hash = {};

  array.forEach(function(val, idx) {
    hash[val] = true;
  });

  return hash;
}


function formatValue(ctx, value, recurseTimes) {
  // Provide a hook for user-specified inspect functions.
  // Check that value is an object with an inspect function on it
  if (ctx.customInspect &&
      value &&
      isFunction(value.inspect) &&
      // Filter out the util module, it's inspect function is special
      value.inspect !== exports.inspect &&
      // Also filter out any prototype objects using the circular check.
      !(value.constructor && value.constructor.prototype === value)) {
    var ret = value.inspect(recurseTimes, ctx);
    if (!isString(ret)) {
      ret = formatValue(ctx, ret, recurseTimes);
    }
    return ret;
  }

  // Primitive types cannot have properties
  var primitive = formatPrimitive(ctx, value);
  if (primitive) {
    return primitive;
  }

  // Look up the keys of the object.
  var keys = Object.keys(value);
  var visibleKeys = arrayToHash(keys);

  if (ctx.showHidden) {
    keys = Object.getOwnPropertyNames(value);
  }

  // IE doesn't make error fields non-enumerable
  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx
  if (isError(value)
      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {
    return formatError(value);
  }

  // Some type of object without properties can be shortcutted.
  if (keys.length === 0) {
    if (isFunction(value)) {
      var name = value.name ? ': ' + value.name : '';
      return ctx.stylize('[Function' + name + ']', 'special');
    }
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    }
    if (isDate(value)) {
      return ctx.stylize(Date.prototype.toString.call(value), 'date');
    }
    if (isError(value)) {
      return formatError(value);
    }
  }

  var base = '', array = false, braces = ['{', '}'];

  // Make Array say that they are Array
  if (isArray(value)) {
    array = true;
    braces = ['[', ']'];
  }

  // Make functions say that they are functions
  if (isFunction(value)) {
    var n = value.name ? ': ' + value.name : '';
    base = ' [Function' + n + ']';
  }

  // Make RegExps say that they are RegExps
  if (isRegExp(value)) {
    base = ' ' + RegExp.prototype.toString.call(value);
  }

  // Make dates with properties first say the date
  if (isDate(value)) {
    base = ' ' + Date.prototype.toUTCString.call(value);
  }

  // Make error with message first say the error
  if (isError(value)) {
    base = ' ' + formatError(value);
  }

  if (keys.length === 0 && (!array || value.length == 0)) {
    return braces[0] + base + braces[1];
  }

  if (recurseTimes < 0) {
    if (isRegExp(value)) {
      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
    } else {
      return ctx.stylize('[Object]', 'special');
    }
  }

  ctx.seen.push(value);

  var output;
  if (array) {
    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
  } else {
    output = keys.map(function(key) {
      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
    });
  }

  ctx.seen.pop();

  return reduceToSingleString(output, base, braces);
}


function formatPrimitive(ctx, value) {
  if (isUndefined(value))
    return ctx.stylize('undefined', 'undefined');
  if (isString(value)) {
    var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
                                             .replace(/'/g, "\\'")
                                             .replace(/\\"/g, '"') + '\'';
    return ctx.stylize(simple, 'string');
  }
  if (isNumber(value))
    return ctx.stylize('' + value, 'number');
  if (isBoolean(value))
    return ctx.stylize('' + value, 'boolean');
  // For some reason typeof null is "object", so special case here.
  if (isNull(value))
    return ctx.stylize('null', 'null');
}


function formatError(value) {
  return '[' + Error.prototype.toString.call(value) + ']';
}


function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
  var output = [];
  for (var i = 0, l = value.length; i < l; ++i) {
    if (hasOwnProperty(value, String(i))) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          String(i), true));
    } else {
      output.push('');
    }
  }
  keys.forEach(function(key) {
    if (!key.match(/^\d+$/)) {
      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
          key, true));
    }
  });
  return output;
}


function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
  var name, str, desc;
  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };
  if (desc.get) {
    if (desc.set) {
      str = ctx.stylize('[Getter/Setter]', 'special');
    } else {
      str = ctx.stylize('[Getter]', 'special');
    }
  } else {
    if (desc.set) {
      str = ctx.stylize('[Setter]', 'special');
    }
  }
  if (!hasOwnProperty(visibleKeys, key)) {
    name = '[' + key + ']';
  }
  if (!str) {
    if (ctx.seen.indexOf(desc.value) < 0) {
      if (isNull(recurseTimes)) {
        str = formatValue(ctx, desc.value, null);
      } else {
        str = formatValue(ctx, desc.value, recurseTimes - 1);
      }
      if (str.indexOf('\n') > -1) {
        if (array) {
          str = str.split('\n').map(function(line) {
            return '  ' + line;
          }).join('\n').substr(2);
        } else {
          str = '\n' + str.split('\n').map(function(line) {
            return '   ' + line;
          }).join('\n');
        }
      }
    } else {
      str = ctx.stylize('[Circular]', 'special');
    }
  }
  if (isUndefined(name)) {
    if (array && key.match(/^\d+$/)) {
      return str;
    }
    name = JSON.stringify('' + key);
    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
      name = name.substr(1, name.length - 2);
      name = ctx.stylize(name, 'name');
    } else {
      name = name.replace(/'/g, "\\'")
                 .replace(/\\"/g, '"')
                 .replace(/(^"|"$)/g, "'");
      name = ctx.stylize(name, 'string');
    }
  }

  return name + ': ' + str;
}


function reduceToSingleString(output, base, braces) {
  var length = output.reduce(function(prev, cur) {
    if (cur.indexOf('\n') >= 0) ;
    return prev + cur.replace(/\u001b\[\d\d?m/g, '').length + 1;
  }, 0);

  if (length > 60) {
    return braces[0] +
           (base === '' ? '' : base + '\n ') +
           ' ' +
           output.join(',\n  ') +
           ' ' +
           braces[1];
  }

  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
}


// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.
function isArray(ar) {
  return Array.isArray(ar);
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return isObject(re) && objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return isObject(d) && objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return isObject(e) &&
      (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}


function pad(n) {
  return n < 10 ? '0' + n.toString(10) : n.toString(10);
}


var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',
              'Oct', 'Nov', 'Dec'];

// 26 Feb 16:19:34
function timestamp() {
  var d = new Date();
  var time = [pad(d.getHours()),
              pad(d.getMinutes()),
              pad(d.getSeconds())].join(':');
  return [d.getDate(), months[d.getMonth()], time].join(' ');
}


// log is just a thin wrapper to console.log that prepends a timestamp
exports.log = function() {
  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));
};


/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */
exports.inherits = inherits$1;

exports._extend = function(origin, add) {
  // Don't do anything if add isn't an object
  if (!add || !isObject(add)) return origin;

  var keys = Object.keys(add);
  var i = keys.length;
  while (i--) {
    origin[keys[i]] = add[keys[i]];
  }
  return origin;
};

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

var kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;

exports.promisify = function promisify(original) {
  if (typeof original !== 'function')
    throw new TypeError('The "original" argument must be of type Function');

  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {
    var fn = original[kCustomPromisifiedSymbol];
    if (typeof fn !== 'function') {
      throw new TypeError('The "util.promisify.custom" argument must be of type Function');
    }
    Object.defineProperty(fn, kCustomPromisifiedSymbol, {
      value: fn, enumerable: false, writable: false, configurable: true
    });
    return fn;
  }

  function fn() {
    var promiseResolve, promiseReject;
    var promise = new Promise(function (resolve, reject) {
      promiseResolve = resolve;
      promiseReject = reject;
    });

    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }
    args.push(function (err, value) {
      if (err) {
        promiseReject(err);
      } else {
        promiseResolve(value);
      }
    });

    try {
      original.apply(this, args);
    } catch (err) {
      promiseReject(err);
    }

    return promise;
  }

  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));

  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {
    value: fn, enumerable: false, writable: false, configurable: true
  });
  return Object.defineProperties(
    fn,
    getOwnPropertyDescriptors(original)
  );
};

exports.promisify.custom = kCustomPromisifiedSymbol;

function callbackifyOnRejected(reason, cb) {
  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).
  // Because `null` is a special error value in callbacks which means "no error
  // occurred", we error-wrap so the callback consumer can distinguish between
  // "the promise rejected with null" or "the promise fulfilled with undefined".
  if (!reason) {
    var newReason = new Error('Promise was rejected with a falsy value');
    newReason.reason = reason;
    reason = newReason;
  }
  return cb(reason);
}

function callbackify(original) {
  if (typeof original !== 'function') {
    throw new TypeError('The "original" argument must be of type Function');
  }

  // We DO NOT return the promise as it gives the user a false sense that
  // the promise is actually somehow related to the callback's execution
  // and that the callback throwing will reject the promise.
  function callbackified() {
    var args = [];
    for (var i = 0; i < arguments.length; i++) {
      args.push(arguments[i]);
    }

    var maybeCb = args.pop();
    if (typeof maybeCb !== 'function') {
      throw new TypeError('The last argument must be of type Function');
    }
    var self = this;
    var cb = function() {
      return maybeCb.apply(self, arguments);
    };
    // In true node style we process the callback on `nextTick` with all the
    // implications (stack, `uncaughtException`, `async_hooks`)
    original.apply(this, args)
      .then(function(ret) { process.nextTick(cb, null, ret); },
            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb); });
  }

  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));
  Object.defineProperties(callbackified,
                          getOwnPropertyDescriptors(original));
  return callbackified;
}
exports.callbackify = callbackify;
});

var inherits_browser$1 = createCommonjsModule$1(function (module) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function () {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
});

var inherits = createCommonjsModule$1(function (module) {
try {
  var util = require$$0;
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = inherits_browser$1;
}
});

var inherits_1 = inherits;

function isSurrogatePair(msg, i) {
  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {
    return false;
  }
  if (i < 0 || i + 1 >= msg.length) {
    return false;
  }
  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;
}

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      // Inspired by stringToUtf8ByteArray() in closure-library by Google
      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143
      // Apache License 2.0
      // https://github.com/google/closure-library/blob/master/LICENSE
      var p = 0;
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        if (c < 128) {
          res[p++] = c;
        } else if (c < 2048) {
          res[p++] = (c >> 6) | 192;
          res[p++] = (c & 63) | 128;
        } else if (isSurrogatePair(msg, i)) {
          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);
          res[p++] = (c >> 18) | 240;
          res[p++] = ((c >> 12) & 63) | 128;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        } else {
          res[p++] = (c >> 12) | 224;
          res[p++] = ((c >> 6) & 63) | 128;
          res[p++] = (c & 63) | 128;
        }
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
var toArray_1 = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
var toHex_1 = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
var htonl_1 = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
var toHex32_1 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
var zero2_1 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
var zero8_1 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  minimalisticAssert$1(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
var join32_1 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
var split32_1 = split32;

function rotr32$1(w, b) {
  return (w >>> b) | (w << (32 - b));
}
var rotr32_1 = rotr32$1;

function rotl32$2(w, b) {
  return (w << b) | (w >>> (32 - b));
}
var rotl32_1 = rotl32$2;

function sum32$3(a, b) {
  return (a + b) >>> 0;
}
var sum32_1 = sum32$3;

function sum32_3$1(a, b, c) {
  return (a + b + c) >>> 0;
}
var sum32_3_1 = sum32_3$1;

function sum32_4$2(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
var sum32_4_1 = sum32_4$2;

function sum32_5$2(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
var sum32_5_1 = sum32_5$2;

function sum64$1(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
var sum64_1 = sum64$1;

function sum64_hi$1(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
var sum64_hi_1 = sum64_hi$1;

function sum64_lo$1(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
var sum64_lo_1 = sum64_lo$1;

function sum64_4_hi$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
var sum64_4_hi_1 = sum64_4_hi$1;

function sum64_4_lo$1(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
var sum64_4_lo_1 = sum64_4_lo$1;

function sum64_5_hi$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
var sum64_5_hi_1 = sum64_5_hi$1;

function sum64_5_lo$1(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
var sum64_5_lo_1 = sum64_5_lo$1;

function rotr64_hi$1(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
var rotr64_hi_1 = rotr64_hi$1;

function rotr64_lo$1(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
var rotr64_lo_1 = rotr64_lo$1;

function shr64_hi$1(ah, al, num) {
  return ah >>> num;
}
var shr64_hi_1 = shr64_hi$1;

function shr64_lo$1(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
var shr64_lo_1 = shr64_lo$1;

var utils = {
	inherits: inherits_1,
	toArray: toArray_1,
	toHex: toHex_1,
	htonl: htonl_1,
	toHex32: toHex32_1,
	zero2: zero2_1,
	zero8: zero8_1,
	join32: join32_1,
	split32: split32_1,
	rotr32: rotr32_1,
	rotl32: rotl32_1,
	sum32: sum32_1,
	sum32_3: sum32_3_1,
	sum32_4: sum32_4_1,
	sum32_5: sum32_5_1,
	sum64: sum64_1,
	sum64_hi: sum64_hi_1,
	sum64_lo: sum64_lo_1,
	sum64_4_hi: sum64_4_hi_1,
	sum64_4_lo: sum64_4_lo_1,
	sum64_5_hi: sum64_5_hi_1,
	sum64_5_lo: sum64_5_lo_1,
	rotr64_hi: rotr64_hi_1,
	rotr64_lo: rotr64_lo_1,
	shr64_hi: shr64_hi_1,
	shr64_lo: shr64_lo_1
};

function BlockHash$4() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
var BlockHash_1 = BlockHash$4;

BlockHash$4.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash$4.prototype.digest = function digest(enc) {
  this.update(this._pad());
  minimalisticAssert$1(this.pending === null);

  return this._digest(enc);
};

BlockHash$4.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};

var common$1 = {
	BlockHash: BlockHash_1
};

var rotr32 = utils.rotr32;

function ft_1$1(s, x, y, z) {
  if (s === 0)
    return ch32$1(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32$1(x, y, z);
}
var ft_1_1 = ft_1$1;

function ch32$1(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
var ch32_1 = ch32$1;

function maj32$1(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
var maj32_1 = maj32$1;

function p32(x, y, z) {
  return x ^ y ^ z;
}
var p32_1 = p32;

function s0_256$1(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
var s0_256_1 = s0_256$1;

function s1_256$1(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
var s1_256_1 = s1_256$1;

function g0_256$1(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
var g0_256_1 = g0_256$1;

function g1_256$1(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
var g1_256_1 = g1_256$1;

var common = {
	ft_1: ft_1_1,
	ch32: ch32_1,
	maj32: maj32_1,
	p32: p32_1,
	s0_256: s0_256_1,
	s1_256: s1_256_1,
	g0_256: g0_256_1,
	g1_256: g1_256_1
};

var rotl32$1 = utils.rotl32;
var sum32$2 = utils.sum32;
var sum32_5$1 = utils.sum32_5;
var ft_1 = common.ft_1;
var BlockHash$3 = common$1.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash$3.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash$3);
var _1 = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32$1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5$1(rotl32$1(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32$1(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32$2(this.h[0], a);
  this.h[1] = sum32$2(this.h[1], b);
  this.h[2] = sum32$2(this.h[2], c);
  this.h[3] = sum32$2(this.h[3], d);
  this.h[4] = sum32$2(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

var sum32$1 = utils.sum32;
var sum32_4$1 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = common.ch32;
var maj32 = common.maj32;
var s0_256 = common.s0_256;
var s1_256 = common.s1_256;
var g0_256 = common.g0_256;
var g1_256 = common.g1_256;

var BlockHash$2 = common$1.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash$2.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash$2);
var _256 = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4$1(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  minimalisticAssert$1(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32$1(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32$1(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32$1(T1, T2);
  }

  this.h[0] = sum32$1(this.h[0], a);
  this.h[1] = sum32$1(this.h[1], b);
  this.h[2] = sum32$1(this.h[2], c);
  this.h[3] = sum32$1(this.h[3], d);
  this.h[4] = sum32$1(this.h[4], e);
  this.h[5] = sum32$1(this.h[5], f);
  this.h[6] = sum32$1(this.h[6], g);
  this.h[7] = sum32$1(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  _256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, _256);
var _224 = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash$1 = common$1.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash$1.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash$1);
var _512 = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  minimalisticAssert$1(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  _512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, _512);
var _384 = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};

var sha1 = _1;
var sha224 = _224;
var sha256$1 = _256;
var sha384 = _384;
var sha512 = _512;

var sha = {
	sha1: sha1,
	sha224: sha224,
	sha256: sha256$1,
	sha384: sha384,
	sha512: sha512
};

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common$1.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
var ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];

var ripemd = {
	ripemd160: ripemd160
};

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
var hmac = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  minimalisticAssert$1(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};

var hash_1 = createCommonjsModule$1(function (module, exports) {
var hash = exports;

hash.utils = utils;
hash.common = common$1;
hash.sha = sha;
hash.ripemd = ripemd;
hash.hmac = hmac;

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;
});

var hash = hash_1;

function createCommonjsModule(fn, basedir, module) {
	return module = {
		path: basedir,
		exports: {},
		require: function (path, base) {
			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
		}
	}, fn(module, module.exports), module.exports;
}

function commonjsRequire () {
	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
}

var minimalisticAssert = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};

var utils_1 = createCommonjsModule(function (module, exports) {

var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};
});

var utils_1$1 = createCommonjsModule(function (module, exports) {

var utils = exports;




utils.assert = minimalisticAssert;
utils.toArray = utils_1.toArray;
utils.zero2 = utils_1.zero2;
utils.toHex = utils_1.toHex;
utils.encode = utils_1.encode;

// Represent num in a w-NAF form
function getNAF(num, w, bits) {
  var naf = new Array(Math.max(num.bitLength(), bits) + 1);
  naf.fill(0);

  var ws = 1 << (w + 1);
  var k = num.clone();

  for (var i = 0; i < naf.length; i++) {
    var z;
    var mod = k.andln(ws - 1);
    if (k.isOdd()) {
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }

    naf[i] = z;
    k.iushrn(1);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    [],
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  var m8;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
      this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
    bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new bn(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;
});



var getNAF = utils_1$1.getNAF;
var getJSF = utils_1$1.getJSF;
var assert$1 = utils_1$1.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new bn(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? bn.red(conf.prime) : bn.mont(this.p);

  // Useful for many curves
  this.zero = new bn(0).toRed(this.red);
  this.one = new bn(1).toRed(this.red);
  this.two = new bn(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new bn(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  this._bitLength = this.n ? this.n.bitLength() : 0;

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
var base = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert$1(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1, this._bitLength);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  var j;
  var nafW;
  for (j = 0; j < naf.length; j += doubles.step) {
    nafW = 0;
    for (var l = j + doubles.step - 1; l >= j; l--)
      nafW = (nafW << 1) + naf[l];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (j = 0; j < repr.length; j++) {
      nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w, this._bitLength);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var l = 0; i >= 0 && naf[i] === 0; i--)
      l++;
    if (i >= 0)
      l++;
    acc = acc.dblp(l);

    if (i < 0)
      break;
    var z = naf[i];
    assert$1(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
  points,
  coeffs,
  len,
  jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  var i;
  var j;
  var p;
  for (i = 0; i < len; i++) {
    p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b], /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3,  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (j = 0; j < len; j++) {
      var z = tmp[j];
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils_1$1.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert$1(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert$1(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
      bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len));
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils_1$1.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null,
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles,
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res,
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};

var inherits_browser = createCommonjsModule(function (module) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      var TempCtor = function () {};
      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}
});






var assert$2 = utils_1$1.assert;

function ShortCurve(conf) {
  base.call(this, 'short', conf);

  this.a = new bn(conf.a, 16).toRed(this.red);
  this.b = new bn(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits_browser(ShortCurve, base);
var short_1 = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new bn(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new bn(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new bn(vec.a, 16),
        b: new bn(vec.b, 16),
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis,
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : bn.mont(num);
  var tinv = new bn(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new bn(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new bn(1);
  var y1 = new bn(0);
  var x2 = new bn(0);
  var y2 = new bn(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 },
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new bn(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
      var npoints = this._endoWnafT1;
      var ncoeffs = this._endoWnafT2;
      for (var i = 0; i < points.length; i++) {
        var split = this._endoSplit(coeffs[i]);
        var p = points[i];
        var beta = p._getBeta();

        if (split.k1.negative) {
          split.k1.ineg();
          p = p.neg(true);
        }
        if (split.k2.negative) {
          split.k2.ineg();
          beta = beta.neg(true);
        }

        npoints[i * 2] = p;
        npoints[i * 2 + 1] = beta;
        ncoeffs[i * 2] = split.k1;
        ncoeffs[i * 2 + 1] = split.k2;
      }
      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

      // Clean-up references to points and coefficients
      for (var j = 0; j < i * 2; j++) {
        npoints[j] = null;
        ncoeffs[j] = null;
      }
      return res;
    };

function Point(curve, x, y, isRed) {
  base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits_browser(Point, base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul),
      },
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1),
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1),
    },
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point)),
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point)),
    },
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new bn(k, 16);
  if (this.isInfinity())
    return this;
  else if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate),
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate),
      },
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new bn(0);
  } else {
    this.x = new bn(x, 16);
    this.y = new bn(y, 16);
    this.z = new bn(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits_browser(JPoint, base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  var i;
  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new bn(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

var curve_1 = createCommonjsModule(function (module, exports) {

var curve = exports;

curve.base = base;
curve.short = short_1;
curve.mont = /*RicMoo:ethers:require(./mont)*/(null);
curve.edwards = /*RicMoo:ethers:require(./edwards)*/(null);
});

var curves_1 = createCommonjsModule(function (module, exports) {

var curves = exports;





var assert = utils_1$1.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new curve_1.short(options);
  else if (options.type === 'edwards')
    this.curve = new curve_1.edwards(options);
  else
    this.curve = new curve_1.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve,
      });
      return curve;
    },
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',
  ],
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',
  ],
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',
  ],
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',
  ],
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650',
  ],
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9',
  ],
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658',
  ],
});

var pre;
try {
  pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/(null).crash();
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3',
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15',
    },
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre,
  ],
});
});





function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils_1.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils_1.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils_1.toArray(options.pers, options.persEnc || 'hex');
  minimalisticAssert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
var hmacDrbg = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils_1.toArray(entropy, entropyEnc);
  add = utils_1.toArray(add, addEnc);

  minimalisticAssert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils_1.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils_1.encode(res, enc);
};



var assert$3 = utils_1$1.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
var key = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc,
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc,
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new bn(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert$3(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert$3(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  if(!pub.validate()) {
    assert$3(pub.validate(), 'public point not validated');
  }
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};




var assert$4 = utils_1$1.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert$4(options.r && options.s, 'Signature without r or s');
  this.r = new bn(options.r, 16);
  this.s = new bn(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
var signature = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;

  // Indefinite length or overflow
  if (octetLen === 0 || octetLen > 4) {
    return false;
  }

  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
    val >>>= 0;
  }

  // Leading zeroes
  if (val <= 0x7f) {
    return false;
  }

  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils_1$1.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if (len === false) {
    return false;
  }
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  if (rlen === false) {
    return false;
  }
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (slen === false) {
    return false;
  }
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0) {
    if (r[1] & 0x80) {
      r = r.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }
  if (s[0] === 0) {
    if (s[1] & 0x80) {
      s = s.slice(1);
    } else {
      // Leading zeroes
      return false;
    }
  }

  this.r = new bn(r);
  this.s = new bn(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils_1$1.encode(res, enc);
};





var rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
var assert$5 = utils_1$1.assert;




function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert$5(Object.prototype.hasOwnProperty.call(curves_1, options),
      'Unknown curve ' + options);

    options = curves_1[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof curves_1.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
var ec = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new key(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return key.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return key.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray(),
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new bn(2));
  for (;;) {
    var priv = new bn(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  }
};

EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new bn(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new hmacDrbg({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new bn(1));

  for (var iter = 0; ; iter++) {
    var k = options.k ?
      options.k(iter) :
      new bn(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature$1, key, enc) {
  msg = this._truncateToN(new bn(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature$1 = new signature(signature$1, 'hex');

  // Perform primitive values validation
  var r = signature$1.r;
  var s = signature$1.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);
  var p;

  if (!this.curve._maxwellTrick) {
    p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
  assert$5((3 & j) === j, 'The recovery param is more than two bits');
  signature$1 = new signature(signature$1, enc);

  var n = this.n;
  var e = new bn(msg);
  var r = signature$1.r;
  var s = signature$1.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature$1.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
  signature$1 = new signature(signature$1, enc);
  if (signature$1.recoveryParam !== null)
    return signature$1.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature$1, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};

var elliptic_1 = createCommonjsModule(function (module, exports) {

var elliptic = exports;

elliptic.version = /*RicMoo:ethers*/{ version: "6.5.4" }.version;
elliptic.utils = utils_1$1;
elliptic.rand = /*RicMoo:ethers:require(brorand)*/(function() { throw new Error('unsupported'); });
elliptic.curve = curve_1;
elliptic.curves = curves_1;

// Protocols
elliptic.ec = ec;
elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/(null);
});

var EC$1 = elliptic_1.ec;

const version$8 = "signing-key/5.5.0";

const logger$9 = new Logger(version$8);
let _curve = null;
function getCurve() {
    if (!_curve) {
        _curve = new EC$1("secp256k1");
    }
    return _curve;
}
class SigningKey {
    constructor(privateKey) {
        defineReadOnly(this, "curve", "secp256k1");
        defineReadOnly(this, "privateKey", hexlify(privateKey));
        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
        defineReadOnly(this, "publicKey", "0x" + keyPair.getPublic(false, "hex"));
        defineReadOnly(this, "compressedPublicKey", "0x" + keyPair.getPublic(true, "hex"));
        defineReadOnly(this, "_isSigningKey", true);
    }
    _addPoint(other) {
        const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
        const p1 = getCurve().keyFromPublic(arrayify(other));
        return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
        const digestBytes = arrayify(digest);
        if (digestBytes.length !== 32) {
            logger$9.throwArgumentError("bad digest length", "digest", digest);
        }
        const signature = keyPair.sign(digestBytes, { canonical: true });
        return splitSignature({
            recoveryParam: signature.recoveryParam,
            r: hexZeroPad("0x" + signature.r.toString(16), 32),
            s: hexZeroPad("0x" + signature.s.toString(16), 32),
        });
    }
    computeSharedSecret(otherKey) {
        const keyPair = getCurve().keyFromPrivate(arrayify(this.privateKey));
        const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
        return hexZeroPad("0x" + keyPair.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
        return !!(value && value._isSigningKey);
    }
}
function recoverPublicKey(digest, signature) {
    const sig = splitSignature(signature);
    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };
    return "0x" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode("hex", false);
}
function computePublicKey(key, compressed) {
    const bytes = arrayify(key);
    if (bytes.length === 32) {
        const signingKey = new SigningKey(bytes);
        if (compressed) {
            return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
        }
        return signingKey.publicKey;
    }
    else if (bytes.length === 33) {
        if (compressed) {
            return hexlify(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
    }
    else if (bytes.length === 65) {
        if (!compressed) {
            return hexlify(bytes);
        }
        return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return logger$9.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
}

const version$7 = "transactions/5.5.0";

const logger$8 = new Logger(version$7);
var TransactionTypes;
(function (TransactionTypes) {
    TransactionTypes[TransactionTypes["legacy"] = 0] = "legacy";
    TransactionTypes[TransactionTypes["eip2930"] = 1] = "eip2930";
    TransactionTypes[TransactionTypes["eip1559"] = 2] = "eip1559";
})(TransactionTypes || (TransactionTypes = {}));
///////////////////////////////
function handleAddress(value) {
    if (value === "0x") {
        return null;
    }
    return getAddress(value);
}
function handleNumber(value) {
    if (value === "0x") {
        return Zero$1;
    }
    return BigNumber.from(value);
}
function computeAddress(key) {
    const publicKey = computePublicKey(key);
    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
}
function recoverAddress(digest, signature) {
    return computeAddress(recoverPublicKey(arrayify(digest), signature));
}
function formatNumber(value, name) {
    const result = stripZeros(BigNumber.from(value).toHexString());
    if (result.length > 32) {
        logger$8.throwArgumentError("invalid length for " + name, ("transaction:" + name), value);
    }
    return result;
}
function accessSetify(addr, storageKeys) {
    return {
        address: getAddress(addr),
        storageKeys: (storageKeys || []).map((storageKey, index) => {
            if (hexDataLength(storageKey) !== 32) {
                logger$8.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index}]`, storageKey);
            }
            return storageKey.toLowerCase();
        })
    };
}
function accessListify(value) {
    if (Array.isArray(value)) {
        return value.map((set, index) => {
            if (Array.isArray(set)) {
                if (set.length > 2) {
                    logger$8.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index}]`, set);
                }
                return accessSetify(set[0], set[1]);
            }
            return accessSetify(set.address, set.storageKeys);
        });
    }
    const result = Object.keys(value).map((addr) => {
        const storageKeys = value[addr].reduce((accum, storageKey) => {
            accum[storageKey] = true;
            return accum;
        }, {});
        return accessSetify(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b) => (a.address.localeCompare(b.address)));
    return result;
}
function formatAccessList(value) {
    return accessListify(value).map((set) => [set.address, set.storageKeys]);
}
function _serializeEip1559(transaction, signature) {
    // If there is an explicit gasPrice, make sure it matches the
    // EIP-1559 fees; otherwise they may not understand what they
    // think they are setting in terms of fee.
    if (transaction.gasPrice != null) {
        const gasPrice = BigNumber.from(transaction.gasPrice);
        const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
        if (!gasPrice.eq(maxFeePerGas)) {
            logger$8.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
                gasPrice, maxFeePerGas
            });
        }
    }
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
        formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        ((transaction.to != null) ? getAddress(transaction.to) : "0x"),
        formatNumber(transaction.value || 0, "value"),
        (transaction.data || "0x"),
        (formatAccessList(transaction.accessList || []))
    ];
    if (signature) {
        const sig = splitSignature(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push(stripZeros(sig.r));
        fields.push(stripZeros(sig.s));
    }
    return hexConcat(["0x02", encode$2(fields)]);
}
function _serializeEip2930(transaction, signature) {
    const fields = [
        formatNumber(transaction.chainId || 0, "chainId"),
        formatNumber(transaction.nonce || 0, "nonce"),
        formatNumber(transaction.gasPrice || 0, "gasPrice"),
        formatNumber(transaction.gasLimit || 0, "gasLimit"),
        ((transaction.to != null) ? getAddress(transaction.to) : "0x"),
        formatNumber(transaction.value || 0, "value"),
        (transaction.data || "0x"),
        (formatAccessList(transaction.accessList || []))
    ];
    if (signature) {
        const sig = splitSignature(signature);
        fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
        fields.push(stripZeros(sig.r));
        fields.push(stripZeros(sig.s));
    }
    return hexConcat(["0x01", encode$2(fields)]);
}
function _parseEipSignature(tx, fields, serialize) {
    try {
        const recid = handleNumber(fields[0]).toNumber();
        if (recid !== 0 && recid !== 1) {
            throw new Error("bad recid");
        }
        tx.v = recid;
    }
    catch (error) {
        logger$8.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = hexZeroPad(fields[1], 32);
    tx.s = hexZeroPad(fields[2], 32);
    try {
        const digest = keccak256(serialize(tx));
        tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });
    }
    catch (error) {
        console.log(error);
    }
}
function _parseEip1559(payload) {
    const transaction = decode$2(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) {
        logger$8.throwArgumentError("invalid component count for transaction type: 2", "payload", hexlify(payload));
    }
    const maxPriorityFeePerGas = handleNumber(transaction[2]);
    const maxFeePerGas = handleNumber(transaction[3]);
    const tx = {
        type: 2,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        maxPriorityFeePerGas: maxPriorityFeePerGas,
        maxFeePerGas: maxFeePerGas,
        gasPrice: null,
        gasLimit: handleNumber(transaction[4]),
        to: handleAddress(transaction[5]),
        value: handleNumber(transaction[6]),
        data: transaction[7],
        accessList: accessListify(transaction[8]),
    };
    // Unsigned EIP-1559 Transaction
    if (transaction.length === 9) {
        return tx;
    }
    tx.hash = keccak256(payload);
    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
    return tx;
}
function _parseEip2930(payload) {
    const transaction = decode$2(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) {
        logger$8.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify(payload));
    }
    const tx = {
        type: 1,
        chainId: handleNumber(transaction[0]).toNumber(),
        nonce: handleNumber(transaction[1]).toNumber(),
        gasPrice: handleNumber(transaction[2]),
        gasLimit: handleNumber(transaction[3]),
        to: handleAddress(transaction[4]),
        value: handleNumber(transaction[5]),
        data: transaction[6],
        accessList: accessListify(transaction[7])
    };
    // Unsigned EIP-2930 Transaction
    if (transaction.length === 8) {
        return tx;
    }
    tx.hash = keccak256(payload);
    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
    return tx;
}
// Legacy Transactions and EIP-155
function _parse(rawTransaction) {
    const transaction = decode$2(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) {
        logger$8.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    }
    const tx = {
        nonce: handleNumber(transaction[0]).toNumber(),
        gasPrice: handleNumber(transaction[1]),
        gasLimit: handleNumber(transaction[2]),
        to: handleAddress(transaction[3]),
        value: handleNumber(transaction[4]),
        data: transaction[5],
        chainId: 0
    };
    // Legacy unsigned transaction
    if (transaction.length === 6) {
        return tx;
    }
    try {
        tx.v = BigNumber.from(transaction[6]).toNumber();
    }
    catch (error) {
        console.log(error);
        return tx;
    }
    tx.r = hexZeroPad(transaction[7], 32);
    tx.s = hexZeroPad(transaction[8], 32);
    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {
        // EIP-155 unsigned transaction
        tx.chainId = tx.v;
        tx.v = 0;
    }
    else {
        // Signed Transaction
        tx.chainId = Math.floor((tx.v - 35) / 2);
        if (tx.chainId < 0) {
            tx.chainId = 0;
        }
        let recoveryParam = tx.v - 27;
        const raw = transaction.slice(0, 6);
        if (tx.chainId !== 0) {
            raw.push(hexlify(tx.chainId));
            raw.push("0x");
            raw.push("0x");
            recoveryParam -= tx.chainId * 2 + 8;
        }
        const digest = keccak256(encode$2(raw));
        try {
            tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam: recoveryParam });
        }
        catch (error) {
            console.log(error);
        }
        tx.hash = keccak256(rawTransaction);
    }
    tx.type = null;
    return tx;
}
function parse(rawTransaction) {
    const payload = arrayify(rawTransaction);
    // Legacy and EIP-155 Transactions
    if (payload[0] > 0x7f) {
        return _parse(payload);
    }
    // Typed Transaction (EIP-2718)
    switch (payload[0]) {
        case 1:
            return _parseEip2930(payload);
        case 2:
            return _parseEip1559(payload);
    }
    return logger$8.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "parseTransaction",
        transactionType: payload[0]
    });
}

const version$6 = "contracts/5.5.0";

var __awaiter$4 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$7 = new Logger(version$6);
function resolveName(resolver, nameOrPromise) {
    return __awaiter$4(this, void 0, void 0, function* () {
        const name = yield nameOrPromise;
        if (typeof (name) !== "string") {
            logger$7.throwArgumentError("invalid address or ENS name", "name", name);
        }
        // If it is already an address, just use it (after adding checksum)
        try {
            return getAddress(name);
        }
        catch (error) { }
        if (!resolver) {
            logger$7.throwError("a provider or signer is needed to resolve ENS names", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "resolveName"
            });
        }
        const address = yield resolver.resolveName(name);
        if (address == null) {
            logger$7.throwArgumentError("resolver or addr is not configured for ENS name", "name", name);
        }
        return address;
    });
}
// Recursively replaces ENS names with promises to resolve the name and resolves all properties
function resolveAddresses(resolver, value, paramType) {
    return __awaiter$4(this, void 0, void 0, function* () {
        if (Array.isArray(paramType)) {
            return yield Promise.all(paramType.map((paramType, index) => {
                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);
            }));
        }
        if (paramType.type === "address") {
            return yield resolveName(resolver, value);
        }
        if (paramType.type === "tuple") {
            return yield resolveAddresses(resolver, value, paramType.components);
        }
        if (paramType.baseType === "array") {
            if (!Array.isArray(value)) {
                return Promise.reject(logger$7.makeError("invalid value for array", Logger.errors.INVALID_ARGUMENT, {
                    argument: "value",
                    value
                }));
            }
            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));
        }
        return value;
    });
}
function populateTransaction(contract, fragment, args) {
    return __awaiter$4(this, void 0, void 0, function* () {
        // If an extra argument is given, it is overrides
        let overrides = {};
        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === "object") {
            overrides = shallowCopy(args.pop());
        }
        // Make sure the parameter count matches
        logger$7.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract");
        // Populate "from" override (allow promises)
        if (contract.signer) {
            if (overrides.from) {
                // Contracts with a Signer are from the Signer's frame-of-reference;
                // but we allow overriding "from" if it matches the signer
                overrides.from = resolveProperties({
                    override: resolveName(contract.signer, overrides.from),
                    signer: contract.signer.getAddress()
                }).then((check) => __awaiter$4(this, void 0, void 0, function* () {
                    if (getAddress(check.signer) !== check.override) {
                        logger$7.throwError("Contract with a Signer cannot override from", Logger.errors.UNSUPPORTED_OPERATION, {
                            operation: "overrides.from"
                        });
                    }
                    return check.override;
                }));
            }
            else {
                overrides.from = contract.signer.getAddress();
            }
        }
        else if (overrides.from) {
            overrides.from = resolveName(contract.provider, overrides.from);
            //} else {
            // Contracts without a signer can override "from", and if
            // unspecified the zero address is used
            //overrides.from = AddressZero;
        }
        // Wait for all dependencies to be resolved (prefer the signer over the provider)
        const resolved = yield resolveProperties({
            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
            address: contract.resolvedAddress,
            overrides: (resolveProperties(overrides) || {})
        });
        // The ABI coded transaction
        const data = contract.interface.encodeFunctionData(fragment, resolved.args);
        const tx = {
            data: data,
            to: resolved.address
        };
        // Resolved Overrides
        const ro = resolved.overrides;
        // Populate simple overrides
        if (ro.nonce != null) {
            tx.nonce = BigNumber.from(ro.nonce).toNumber();
        }
        if (ro.gasLimit != null) {
            tx.gasLimit = BigNumber.from(ro.gasLimit);
        }
        if (ro.gasPrice != null) {
            tx.gasPrice = BigNumber.from(ro.gasPrice);
        }
        if (ro.maxFeePerGas != null) {
            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);
        }
        if (ro.maxPriorityFeePerGas != null) {
            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);
        }
        if (ro.from != null) {
            tx.from = ro.from;
        }
        if (ro.type != null) {
            tx.type = ro.type;
        }
        if (ro.accessList != null) {
            tx.accessList = accessListify(ro.accessList);
        }
        // If there was no "gasLimit" override, but the ABI specifies a default, use it
        if (tx.gasLimit == null && fragment.gas != null) {
            // Compute the intrinsic gas cost for this transaction
            // @TODO: This is based on the yellow paper as of Petersburg; this is something
            // we may wish to parameterize in v6 as part of the Network object. Since this
            // is always a non-nil to address, we can ignore G_create, but may wish to add
            // similar logic to the ContractFactory.
            let intrinsic = 21000;
            const bytes = arrayify(data);
            for (let i = 0; i < bytes.length; i++) {
                intrinsic += 4;
                if (bytes[i]) {
                    intrinsic += 64;
                }
            }
            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);
        }
        // Populate "value" override
        if (ro.value) {
            const roValue = BigNumber.from(ro.value);
            if (!roValue.isZero() && !fragment.payable) {
                logger$7.throwError("non-payable method cannot override value", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "overrides.value",
                    value: overrides.value
                });
            }
            tx.value = roValue;
        }
        if (ro.customData) {
            tx.customData = shallowCopy(ro.customData);
        }
        // Remove the overrides
        delete overrides.nonce;
        delete overrides.gasLimit;
        delete overrides.gasPrice;
        delete overrides.from;
        delete overrides.value;
        delete overrides.type;
        delete overrides.accessList;
        delete overrides.maxFeePerGas;
        delete overrides.maxPriorityFeePerGas;
        delete overrides.customData;
        // Make sure there are no stray overrides, which may indicate a
        // typo or using an unsupported key.
        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));
        if (leftovers.length) {
            logger$7.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(",")}`, Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "overrides",
                overrides: leftovers
            });
        }
        return tx;
    });
}
function buildPopulate(contract, fragment) {
    return function (...args) {
        return populateTransaction(contract, fragment, args);
    };
}
function buildEstimate(contract, fragment) {
    const signerOrProvider = (contract.signer || contract.provider);
    return function (...args) {
        return __awaiter$4(this, void 0, void 0, function* () {
            if (!signerOrProvider) {
                logger$7.throwError("estimate require a provider or signer", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "estimateGas"
                });
            }
            const tx = yield populateTransaction(contract, fragment, args);
            return yield signerOrProvider.estimateGas(tx);
        });
    };
}
function addContractWait(contract, tx) {
    const wait = tx.wait.bind(tx);
    tx.wait = (confirmations) => {
        return wait(confirmations).then((receipt) => {
            receipt.events = receipt.logs.map((log) => {
                let event = deepCopy(log);
                let parsed = null;
                try {
                    parsed = contract.interface.parseLog(log);
                }
                catch (e) { }
                // Successfully parsed the event log; include it
                if (parsed) {
                    event.args = parsed.args;
                    event.decode = (data, topics) => {
                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
                    };
                    event.event = parsed.name;
                    event.eventSignature = parsed.signature;
                }
                // Useful operations
                event.removeListener = () => { return contract.provider; };
                event.getBlock = () => {
                    return contract.provider.getBlock(receipt.blockHash);
                };
                event.getTransaction = () => {
                    return contract.provider.getTransaction(receipt.transactionHash);
                };
                event.getTransactionReceipt = () => {
                    return Promise.resolve(receipt);
                };
                return event;
            });
            return receipt;
        });
    };
}
function buildCall(contract, fragment, collapseSimple) {
    const signerOrProvider = (contract.signer || contract.provider);
    return function (...args) {
        return __awaiter$4(this, void 0, void 0, function* () {
            // Extract the "blockTag" override if present
            let blockTag = undefined;
            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === "object") {
                const overrides = shallowCopy(args.pop());
                if (overrides.blockTag != null) {
                    blockTag = yield overrides.blockTag;
                }
                delete overrides.blockTag;
                args.push(overrides);
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed(blockTag);
            }
            // Call a node and get the result
            const tx = yield populateTransaction(contract, fragment, args);
            const result = yield signerOrProvider.call(tx, blockTag);
            try {
                let value = contract.interface.decodeFunctionResult(fragment, result);
                if (collapseSimple && fragment.outputs.length === 1) {
                    value = value[0];
                }
                return value;
            }
            catch (error) {
                if (error.code === Logger.errors.CALL_EXCEPTION) {
                    error.address = contract.address;
                    error.args = args;
                    error.transaction = tx;
                }
                throw error;
            }
        });
    };
}
function buildSend(contract, fragment) {
    return function (...args) {
        return __awaiter$4(this, void 0, void 0, function* () {
            if (!contract.signer) {
                logger$7.throwError("sending a transaction requires a signer", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "sendTransaction"
                });
            }
            // If the contract was just deployed, wait until it is mined
            if (contract.deployTransaction != null) {
                yield contract._deployed();
            }
            const txRequest = yield populateTransaction(contract, fragment, args);
            const tx = yield contract.signer.sendTransaction(txRequest);
            // Tweak the tx.wait so the receipt has extra properties
            addContractWait(contract, tx);
            return tx;
        });
    };
}
function buildDefault(contract, fragment, collapseSimple) {
    if (fragment.constant) {
        return buildCall(contract, fragment, collapseSimple);
    }
    return buildSend(contract, fragment);
}
function getEventTag$1(filter) {
    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {
        return "*";
    }
    return (filter.address || "*") + "@" + (filter.topics ? filter.topics.map((topic) => {
        if (Array.isArray(topic)) {
            return topic.join("|");
        }
        return topic;
    }).join(":") : "");
}
class RunningEvent {
    constructor(tag, filter) {
        defineReadOnly(this, "tag", tag);
        defineReadOnly(this, "filter", filter);
        this._listeners = [];
    }
    addListener(listener, once) {
        this._listeners.push({ listener: listener, once: once });
    }
    removeListener(listener) {
        let done = false;
        this._listeners = this._listeners.filter((item) => {
            if (done || item.listener !== listener) {
                return true;
            }
            done = true;
            return false;
        });
    }
    removeAllListeners() {
        this._listeners = [];
    }
    listeners() {
        return this._listeners.map((i) => i.listener);
    }
    listenerCount() {
        return this._listeners.length;
    }
    run(args) {
        const listenerCount = this.listenerCount();
        this._listeners = this._listeners.filter((item) => {
            const argsCopy = args.slice();
            // Call the callback in the next event loop
            setTimeout(() => {
                item.listener.apply(this, argsCopy);
            }, 0);
            // Reschedule it if it not "once"
            return !(item.once);
        });
        return listenerCount;
    }
    prepareEvent(event) {
    }
    // Returns the array that will be applied to an emit
    getEmit(event) {
        return [event];
    }
}
class ErrorRunningEvent extends RunningEvent {
    constructor() {
        super("error", null);
    }
}
// @TODO Fragment should inherit Wildcard? and just override getEmit?
//       or have a common abstract super class, with enough constructor
//       options to configure both.
// A Fragment Event will populate all the properties that Wildcard
// will, and additionally dereference the arguments when emitting
class FragmentRunningEvent extends RunningEvent {
    constructor(address, contractInterface, fragment, topics) {
        const filter = {
            address: address
        };
        let topic = contractInterface.getEventTopic(fragment);
        if (topics) {
            if (topic !== topics[0]) {
                logger$7.throwArgumentError("topic mismatch", "topics", topics);
            }
            filter.topics = topics.slice();
        }
        else {
            filter.topics = [topic];
        }
        super(getEventTag$1(filter), filter);
        defineReadOnly(this, "address", address);
        defineReadOnly(this, "interface", contractInterface);
        defineReadOnly(this, "fragment", fragment);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        event.event = this.fragment.name;
        event.eventSignature = this.fragment.format();
        event.decode = (data, topics) => {
            return this.interface.decodeEventLog(this.fragment, data, topics);
        };
        try {
            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
        }
        catch (error) {
            event.args = null;
            event.decodeError = error;
        }
    }
    getEmit(event) {
        const errors = checkResultErrors(event.args);
        if (errors.length) {
            throw errors[0].error;
        }
        const args = (event.args || []).slice();
        args.push(event);
        return args;
    }
}
// A Wildcard Event will attempt to populate:
//  - event            The name of the event name
//  - eventSignature   The full signature of the event
//  - decode           A function to decode data and topics
//  - args             The decoded data and topics
class WildcardRunningEvent extends RunningEvent {
    constructor(address, contractInterface) {
        super("*", { address: address });
        defineReadOnly(this, "address", address);
        defineReadOnly(this, "interface", contractInterface);
    }
    prepareEvent(event) {
        super.prepareEvent(event);
        try {
            const parsed = this.interface.parseLog(event);
            event.event = parsed.name;
            event.eventSignature = parsed.signature;
            event.decode = (data, topics) => {
                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);
            };
            event.args = parsed.args;
        }
        catch (error) {
            // No matching event
        }
    }
}
class BaseContract {
    constructor(addressOrName, contractInterface, signerOrProvider) {
        logger$7.checkNew(new.target, Contract);
        // @TODO: Maybe still check the addressOrName looks like a valid address or name?
        //address = getAddress(address);
        defineReadOnly(this, "interface", getStatic(new.target, "getInterface")(contractInterface));
        if (signerOrProvider == null) {
            defineReadOnly(this, "provider", null);
            defineReadOnly(this, "signer", null);
        }
        else if (Signer.isSigner(signerOrProvider)) {
            defineReadOnly(this, "provider", signerOrProvider.provider || null);
            defineReadOnly(this, "signer", signerOrProvider);
        }
        else if (Provider.isProvider(signerOrProvider)) {
            defineReadOnly(this, "provider", signerOrProvider);
            defineReadOnly(this, "signer", null);
        }
        else {
            logger$7.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider);
        }
        defineReadOnly(this, "callStatic", {});
        defineReadOnly(this, "estimateGas", {});
        defineReadOnly(this, "functions", {});
        defineReadOnly(this, "populateTransaction", {});
        defineReadOnly(this, "filters", {});
        {
            const uniqueFilters = {};
            Object.keys(this.interface.events).forEach((eventSignature) => {
                const event = this.interface.events[eventSignature];
                defineReadOnly(this.filters, eventSignature, (...args) => {
                    return {
                        address: this.address,
                        topics: this.interface.encodeFilterTopics(event, args)
                    };
                });
                if (!uniqueFilters[event.name]) {
                    uniqueFilters[event.name] = [];
                }
                uniqueFilters[event.name].push(eventSignature);
            });
            Object.keys(uniqueFilters).forEach((name) => {
                const filters = uniqueFilters[name];
                if (filters.length === 1) {
                    defineReadOnly(this.filters, name, this.filters[filters[0]]);
                }
                else {
                    logger$7.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
                }
            });
        }
        defineReadOnly(this, "_runningEvents", {});
        defineReadOnly(this, "_wrappedEmits", {});
        if (addressOrName == null) {
            logger$7.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName);
        }
        defineReadOnly(this, "address", addressOrName);
        if (this.provider) {
            defineReadOnly(this, "resolvedAddress", resolveName(this.provider, addressOrName));
        }
        else {
            try {
                defineReadOnly(this, "resolvedAddress", Promise.resolve(getAddress(addressOrName)));
            }
            catch (error) {
                // Without a provider, we cannot use ENS names
                logger$7.throwError("provider is required to use ENS name as contract address", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "new Contract"
                });
            }
        }
        const uniqueNames = {};
        const uniqueSignatures = {};
        Object.keys(this.interface.functions).forEach((signature) => {
            const fragment = this.interface.functions[signature];
            // Check that the signature is unique; if not the ABI generation has
            // not been cleaned or may be incorrectly generated
            if (uniqueSignatures[signature]) {
                logger$7.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);
                return;
            }
            uniqueSignatures[signature] = true;
            // Track unique names; we only expose bare named functions if they
            // are ambiguous
            {
                const name = fragment.name;
                if (!uniqueNames[`%${name}`]) {
                    uniqueNames[`%${name}`] = [];
                }
                uniqueNames[`%${name}`].push(signature);
            }
            if (this[signature] == null) {
                defineReadOnly(this, signature, buildDefault(this, fragment, true));
            }
            // We do not collapse simple calls on this bucket, which allows
            // frameworks to safely use this without introspection as well as
            // allows decoding error recovery.
            if (this.functions[signature] == null) {
                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));
            }
            if (this.callStatic[signature] == null) {
                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));
            }
            if (this.populateTransaction[signature] == null) {
                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));
            }
            if (this.estimateGas[signature] == null) {
                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));
            }
        });
        Object.keys(uniqueNames).forEach((name) => {
            // Ambiguous names to not get attached as bare names
            const signatures = uniqueNames[name];
            if (signatures.length > 1) {
                return;
            }
            // Strip off the leading "%" used for prototype protection
            name = name.substring(1);
            const signature = signatures[0];
            // If overwriting a member property that is null, swallow the error
            try {
                if (this[name] == null) {
                    defineReadOnly(this, name, this[signature]);
                }
            }
            catch (e) { }
            if (this.functions[name] == null) {
                defineReadOnly(this.functions, name, this.functions[signature]);
            }
            if (this.callStatic[name] == null) {
                defineReadOnly(this.callStatic, name, this.callStatic[signature]);
            }
            if (this.populateTransaction[name] == null) {
                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);
            }
            if (this.estimateGas[name] == null) {
                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);
            }
        });
    }
    static getContractAddress(transaction) {
        return getContractAddress(transaction);
    }
    static getInterface(contractInterface) {
        if (Interface.isInterface(contractInterface)) {
            return contractInterface;
        }
        return new Interface(contractInterface);
    }
    // @TODO: Allow timeout?
    deployed() {
        return this._deployed();
    }
    _deployed(blockTag) {
        if (!this._deployedPromise) {
            // If we were just deployed, we know the transaction we should occur in
            if (this.deployTransaction) {
                this._deployedPromise = this.deployTransaction.wait().then(() => {
                    return this;
                });
            }
            else {
                // @TODO: Once we allow a timeout to be passed in, we will wait
                // up to that many blocks for getCode
                // Otherwise, poll for our code to be deployed
                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {
                    if (code === "0x") {
                        logger$7.throwError("contract not deployed", Logger.errors.UNSUPPORTED_OPERATION, {
                            contractAddress: this.address,
                            operation: "getDeployed"
                        });
                    }
                    return this;
                });
            }
        }
        return this._deployedPromise;
    }
    // @TODO:
    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>
    // @TODO:
    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>
    fallback(overrides) {
        if (!this.signer) {
            logger$7.throwError("sending a transactions require a signer", Logger.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
        }
        const tx = shallowCopy(overrides || {});
        ["from", "to"].forEach(function (key) {
            if (tx[key] == null) {
                return;
            }
            logger$7.throwError("cannot override " + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });
        });
        tx.to = this.resolvedAddress;
        return this.deployed().then(() => {
            return this.signer.sendTransaction(tx);
        });
    }
    // Reconnect to a different signer or provider
    connect(signerOrProvider) {
        if (typeof (signerOrProvider) === "string") {
            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);
        }
        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);
        if (this.deployTransaction) {
            defineReadOnly(contract, "deployTransaction", this.deployTransaction);
        }
        return contract;
    }
    // Re-attach to a different on-chain instance of this contract
    attach(addressOrName) {
        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);
    }
    static isIndexed(value) {
        return Indexed.isIndexed(value);
    }
    _normalizeRunningEvent(runningEvent) {
        // Already have an instance of this event running; we can re-use it
        if (this._runningEvents[runningEvent.tag]) {
            return this._runningEvents[runningEvent.tag];
        }
        return runningEvent;
    }
    _getRunningEvent(eventName) {
        if (typeof (eventName) === "string") {
            // Listen for "error" events (if your contract has an error event, include
            // the full signature to bypass this special event keyword)
            if (eventName === "error") {
                return this._normalizeRunningEvent(new ErrorRunningEvent());
            }
            // Listen for any event that is registered
            if (eventName === "event") {
                return this._normalizeRunningEvent(new RunningEvent("event", null));
            }
            // Listen for any event
            if (eventName === "*") {
                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
            }
            // Get the event Fragment (throws if ambiguous/unknown event)
            const fragment = this.interface.getEvent(eventName);
            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
        }
        // We have topics to filter by...
        if (eventName.topics && eventName.topics.length > 0) {
            // Is it a known topichash? (throws if no matching topichash)
            try {
                const topic = eventName.topics[0];
                if (typeof (topic) !== "string") {
                    throw new Error("invalid topic"); // @TODO: May happen for anonymous events
                }
                const fragment = this.interface.getEvent(topic);
                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));
            }
            catch (error) { }
            // Filter by the unknown topichash
            const filter = {
                address: this.address,
                topics: eventName.topics
            };
            return this._normalizeRunningEvent(new RunningEvent(getEventTag$1(filter), filter));
        }
        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
    }
    _checkRunningEvents(runningEvent) {
        if (runningEvent.listenerCount() === 0) {
            delete this._runningEvents[runningEvent.tag];
            // If we have a poller for this, remove it
            const emit = this._wrappedEmits[runningEvent.tag];
            if (emit && runningEvent.filter) {
                this.provider.off(runningEvent.filter, emit);
                delete this._wrappedEmits[runningEvent.tag];
            }
        }
    }
    // Subclasses can override this to gracefully recover
    // from parse errors if they wish
    _wrapEvent(runningEvent, log, listener) {
        const event = deepCopy(log);
        event.removeListener = () => {
            if (!listener) {
                return;
            }
            runningEvent.removeListener(listener);
            this._checkRunningEvents(runningEvent);
        };
        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };
        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };
        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };
        // This may throw if the topics and data mismatch the signature
        runningEvent.prepareEvent(event);
        return event;
    }
    _addEventListener(runningEvent, listener, once) {
        if (!this.provider) {
            logger$7.throwError("events require a provider or a signer with a provider", Logger.errors.UNSUPPORTED_OPERATION, { operation: "once" });
        }
        runningEvent.addListener(listener, once);
        // Track this running event and its listeners (may already be there; but no hard in updating)
        this._runningEvents[runningEvent.tag] = runningEvent;
        // If we are not polling the provider, start polling
        if (!this._wrappedEmits[runningEvent.tag]) {
            const wrappedEmit = (log) => {
                let event = this._wrapEvent(runningEvent, log, listener);
                // Try to emit the result for the parameterized event...
                if (event.decodeError == null) {
                    try {
                        const args = runningEvent.getEmit(event);
                        this.emit(runningEvent.filter, ...args);
                    }
                    catch (error) {
                        event.decodeError = error.error;
                    }
                }
                // Always emit "event" for fragment-base events
                if (runningEvent.filter != null) {
                    this.emit("event", event);
                }
                // Emit "error" if there was an error
                if (event.decodeError != null) {
                    this.emit("error", event.decodeError, event);
                }
            };
            this._wrappedEmits[runningEvent.tag] = wrappedEmit;
            // Special events, like "error" do not have a filter
            if (runningEvent.filter != null) {
                this.provider.on(runningEvent.filter, wrappedEmit);
            }
        }
    }
    queryFilter(event, fromBlockOrBlockhash, toBlock) {
        const runningEvent = this._getRunningEvent(event);
        const filter = shallowCopy(runningEvent.filter);
        if (typeof (fromBlockOrBlockhash) === "string" && isHexString(fromBlockOrBlockhash, 32)) {
            if (toBlock != null) {
                logger$7.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock);
            }
            filter.blockHash = fromBlockOrBlockhash;
        }
        else {
            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);
            filter.toBlock = ((toBlock != null) ? toBlock : "latest");
        }
        return this.provider.getLogs(filter).then((logs) => {
            return logs.map((log) => this._wrapEvent(runningEvent, log, null));
        });
    }
    on(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, false);
        return this;
    }
    once(event, listener) {
        this._addEventListener(this._getRunningEvent(event), listener, true);
        return this;
    }
    emit(eventName, ...args) {
        if (!this.provider) {
            return false;
        }
        const runningEvent = this._getRunningEvent(eventName);
        const result = (runningEvent.run(args) > 0);
        // May have drained all the "once" events; check for living events
        this._checkRunningEvents(runningEvent);
        return result;
    }
    listenerCount(eventName) {
        if (!this.provider) {
            return 0;
        }
        if (eventName == null) {
            return Object.keys(this._runningEvents).reduce((accum, key) => {
                return accum + this._runningEvents[key].listenerCount();
            }, 0);
        }
        return this._getRunningEvent(eventName).listenerCount();
    }
    listeners(eventName) {
        if (!this.provider) {
            return [];
        }
        if (eventName == null) {
            const result = [];
            for (let tag in this._runningEvents) {
                this._runningEvents[tag].listeners().forEach((listener) => {
                    result.push(listener);
                });
            }
            return result;
        }
        return this._getRunningEvent(eventName).listeners();
    }
    removeAllListeners(eventName) {
        if (!this.provider) {
            return this;
        }
        if (eventName == null) {
            for (const tag in this._runningEvents) {
                const runningEvent = this._runningEvents[tag];
                runningEvent.removeAllListeners();
                this._checkRunningEvents(runningEvent);
            }
            return this;
        }
        // Delete any listeners
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeAllListeners();
        this._checkRunningEvents(runningEvent);
        return this;
    }
    off(eventName, listener) {
        if (!this.provider) {
            return this;
        }
        const runningEvent = this._getRunningEvent(eventName);
        runningEvent.removeListener(listener);
        this._checkRunningEvents(runningEvent);
        return this;
    }
    removeListener(eventName, listener) {
        return this.off(eventName, listener);
    }
}
class Contract extends BaseContract {
}

/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */
class BaseX {
    constructor(alphabet) {
        defineReadOnly(this, "alphabet", alphabet);
        defineReadOnly(this, "base", alphabet.length);
        defineReadOnly(this, "_alphabetMap", {});
        defineReadOnly(this, "_leader", alphabet.charAt(0));
        // pre-compute lookup table
        for (let i = 0; i < alphabet.length; i++) {
            this._alphabetMap[alphabet.charAt(i)] = i;
        }
    }
    encode(value) {
        let source = arrayify(value);
        if (source.length === 0) {
            return "";
        }
        let digits = [0];
        for (let i = 0; i < source.length; ++i) {
            let carry = source[i];
            for (let j = 0; j < digits.length; ++j) {
                carry += digits[j] << 8;
                digits[j] = carry % this.base;
                carry = (carry / this.base) | 0;
            }
            while (carry > 0) {
                digits.push(carry % this.base);
                carry = (carry / this.base) | 0;
            }
        }
        let string = "";
        // deal with leading zeros
        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
            string += this._leader;
        }
        // convert digits to a string
        for (let q = digits.length - 1; q >= 0; --q) {
            string += this.alphabet[digits[q]];
        }
        return string;
    }
    decode(value) {
        if (typeof (value) !== "string") {
            throw new TypeError("Expected String");
        }
        let bytes = [];
        if (value.length === 0) {
            return new Uint8Array(bytes);
        }
        bytes.push(0);
        for (let i = 0; i < value.length; i++) {
            let byte = this._alphabetMap[value[i]];
            if (byte === undefined) {
                throw new Error("Non-base" + this.base + " character");
            }
            let carry = byte;
            for (let j = 0; j < bytes.length; ++j) {
                carry += bytes[j] * this.base;
                bytes[j] = carry & 0xff;
                carry >>= 8;
            }
            while (carry > 0) {
                bytes.push(carry & 0xff);
                carry >>= 8;
            }
        }
        // deal with leading zeros
        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
            bytes.push(0);
        }
        return arrayify(new Uint8Array(bytes.reverse()));
    }
}
new BaseX("abcdefghijklmnopqrstuvwxyz234567");
const Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
//console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))
//console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))

const version$5 = "sha2/5.5.0";

new Logger(version$5);
function sha256(data) {
    return "0x" + (hash.sha256().update(arrayify(data)).digest("hex"));
}

const version$4 = "networks/5.5.2";

const logger$6 = new Logger(version$4);
function isRenetworkable(value) {
    return (value && typeof (value.renetwork) === "function");
}
function ethDefaultProvider(network) {
    const func = function (providers, options) {
        if (options == null) {
            options = {};
        }
        const providerList = [];
        if (providers.InfuraProvider) {
            try {
                providerList.push(new providers.InfuraProvider(network, options.infura));
            }
            catch (error) { }
        }
        if (providers.EtherscanProvider) {
            try {
                providerList.push(new providers.EtherscanProvider(network, options.etherscan));
            }
            catch (error) { }
        }
        if (providers.AlchemyProvider) {
            try {
                providerList.push(new providers.AlchemyProvider(network, options.alchemy));
            }
            catch (error) { }
        }
        if (providers.PocketProvider) {
            // These networks are currently faulty on Pocket as their
            // network does not handle the Berlin hardfork, which is
            // live on these ones.
            // @TODO: This goes away once Pocket has upgraded their nodes
            const skip = ["goerli", "ropsten", "rinkeby"];
            try {
                const provider = new providers.PocketProvider(network);
                if (provider.network && skip.indexOf(provider.network.name) === -1) {
                    providerList.push(provider);
                }
            }
            catch (error) { }
        }
        if (providers.CloudflareProvider) {
            try {
                providerList.push(new providers.CloudflareProvider(network));
            }
            catch (error) { }
        }
        if (providerList.length === 0) {
            return null;
        }
        if (providers.FallbackProvider) {
            let quorum = 1;
            if (options.quorum != null) {
                quorum = options.quorum;
            }
            else if (network === "homestead") {
                quorum = 2;
            }
            return new providers.FallbackProvider(providerList, quorum);
        }
        return providerList[0];
    };
    func.renetwork = function (network) {
        return ethDefaultProvider(network);
    };
    return func;
}
function etcDefaultProvider(url, network) {
    const func = function (providers, options) {
        if (providers.JsonRpcProvider) {
            return new providers.JsonRpcProvider(url, network);
        }
        return null;
    };
    func.renetwork = function (network) {
        return etcDefaultProvider(url, network);
    };
    return func;
}
const homestead = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: ethDefaultProvider("homestead")
};
const ropsten = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: ethDefaultProvider("ropsten")
};
const classicMordor = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
};
// See: https://chainlist.org
const networks = {
    unspecified: { chainId: 0, name: "unspecified" },
    homestead: homestead,
    mainnet: homestead,
    morden: { chainId: 2, name: "morden" },
    ropsten: ropsten,
    testnet: ropsten,
    rinkeby: {
        chainId: 4,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "rinkeby",
        _defaultProvider: ethDefaultProvider("rinkeby")
    },
    kovan: {
        chainId: 42,
        name: "kovan",
        _defaultProvider: ethDefaultProvider("kovan")
    },
    goerli: {
        chainId: 5,
        ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
        name: "goerli",
        _defaultProvider: ethDefaultProvider("goerli")
    },
    kintsugi: { chainId: 1337702, name: "kintsugi" },
    // ETC (See: #351)
    classic: {
        chainId: 61,
        name: "classic",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/etc", "classic")
    },
    classicMorden: { chainId: 62, name: "classicMorden" },
    classicMordor: classicMordor,
    classicTestnet: classicMordor,
    classicKotti: {
        chainId: 6,
        name: "classicKotti",
        _defaultProvider: etcDefaultProvider("https:/\/www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: { chainId: 100, name: "xdai" },
    matic: { chainId: 137, name: "matic" },
    maticmum: { chainId: 80001, name: "maticmum" },
    optimism: { chainId: 10, name: "optimism" },
    "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
    "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
    arbitrum: { chainId: 42161, name: "arbitrum" },
    "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
    bnb: { chainId: 56, name: "bnb" },
    bnbt: { chainId: 97, name: "bnbt" },
};
/**
 *  getNetwork
 *
 *  Converts a named common networks or chain ID (network ID) to a Network
 *  and verifies a network is a valid Network..
 */
function getNetwork(network) {
    // No network (null)
    if (network == null) {
        return null;
    }
    if (typeof (network) === "number") {
        for (const name in networks) {
            const standard = networks[name];
            if (standard.chainId === network) {
                return {
                    name: standard.name,
                    chainId: standard.chainId,
                    ensAddress: (standard.ensAddress || null),
                    _defaultProvider: (standard._defaultProvider || null)
                };
            }
        }
        return {
            chainId: network,
            name: "unknown"
        };
    }
    if (typeof (network) === "string") {
        const standard = networks[network];
        if (standard == null) {
            return null;
        }
        return {
            name: standard.name,
            chainId: standard.chainId,
            ensAddress: standard.ensAddress,
            _defaultProvider: (standard._defaultProvider || null)
        };
    }
    const standard = networks[network.name];
    // Not a standard network; check that it is a valid network in general
    if (!standard) {
        if (typeof (network.chainId) !== "number") {
            logger$6.throwArgumentError("invalid network chainId", "network", network);
        }
        return network;
    }
    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)
    if (network.chainId !== 0 && network.chainId !== standard.chainId) {
        logger$6.throwArgumentError("network chainId mismatch", "network", network);
    }
    // @TODO: In the next major version add an attach function to a defaultProvider
    // class and move the _defaultProvider internal to this file (extend Network)
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
        if (isRenetworkable(standard._defaultProvider)) {
            defaultProvider = standard._defaultProvider.renetwork(network);
        }
        else {
            defaultProvider = standard._defaultProvider;
        }
    }
    // Standard Network (allow overriding the ENS address)
    return {
        name: network.name,
        chainId: standard.chainId,
        ensAddress: (network.ensAddress || standard.ensAddress || null),
        _defaultProvider: defaultProvider
    };
}

function decode$1(textData) {
    textData = atob(textData);
    const data = [];
    for (let i = 0; i < textData.length; i++) {
        data.push(textData.charCodeAt(i));
    }
    return arrayify(data);
}
function encode$1(data) {
    data = arrayify(data);
    let textData = "";
    for (let i = 0; i < data.length; i++) {
        textData += String.fromCharCode(data[i]);
    }
    return btoa(textData);
}

const version$3 = "web/5.5.1";

var __awaiter$3 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function getUrl(href, options) {
    return __awaiter$3(this, void 0, void 0, function* () {
        if (options == null) {
            options = {};
        }
        const request = {
            method: (options.method || "GET"),
            headers: (options.headers || {}),
            body: (options.body || undefined),
        };
        if (options.skipFetchSetup !== true) {
            request.mode = "cors"; // no-cors, cors, *same-origin
            request.cache = "no-cache"; // *default, no-cache, reload, force-cache, only-if-cached
            request.credentials = "same-origin"; // include, *same-origin, omit
            request.redirect = "follow"; // manual, *follow, error
            request.referrer = "client"; // no-referrer, *client
        }
        const response = yield fetch(href, request);
        const body = yield response.arrayBuffer();
        const headers = {};
        if (response.headers.forEach) {
            response.headers.forEach((value, key) => {
                headers[key.toLowerCase()] = value;
            });
        }
        else {
            ((response.headers).keys)().forEach((key) => {
                headers[key.toLowerCase()] = response.headers.get(key);
            });
        }
        return {
            headers: headers,
            statusCode: response.status,
            statusMessage: response.statusText,
            body: arrayify(new Uint8Array(body)),
        };
    });
}

var __awaiter$2 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$5 = new Logger(version$3);
function staller(duration) {
    return new Promise((resolve) => {
        setTimeout(resolve, duration);
    });
}
function bodyify(value, type) {
    if (value == null) {
        return null;
    }
    if (typeof (value) === "string") {
        return value;
    }
    if (isBytesLike(value)) {
        if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
            try {
                return toUtf8String(value);
            }
            catch (error) { }
        }
        return hexlify(value);
    }
    return value;
}
// This API is still a work in progress; the future changes will likely be:
// - ConnectionInfo => FetchDataRequest<T = any>
// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }
//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)
// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T
// For this reason, it should be considered internal until the API is finalized
function _fetchData(connection, body, processFunc) {
    // How many times to retry in the event of a throttle
    const attemptLimit = (typeof (connection) === "object" && connection.throttleLimit != null) ? connection.throttleLimit : 12;
    logger$5.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = ((typeof (connection) === "object") ? connection.throttleCallback : null);
    const throttleSlotInterval = ((typeof (connection) === "object" && typeof (connection.throttleSlotInterval) === "number") ? connection.throttleSlotInterval : 100);
    logger$5.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const headers = {};
    let url = null;
    // @TODO: Allow ConnectionInfo to override some of these values
    const options = {
        method: "GET",
    };
    let allow304 = false;
    let timeout = 2 * 60 * 1000;
    if (typeof (connection) === "string") {
        url = connection;
    }
    else if (typeof (connection) === "object") {
        if (connection == null || connection.url == null) {
            logger$5.throwArgumentError("missing URL", "connection.url", connection);
        }
        url = connection.url;
        if (typeof (connection.timeout) === "number" && connection.timeout > 0) {
            timeout = connection.timeout;
        }
        if (connection.headers) {
            for (const key in connection.headers) {
                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };
                if (["if-none-match", "if-modified-since"].indexOf(key.toLowerCase()) >= 0) {
                    allow304 = true;
                }
            }
        }
        options.allowGzip = !!connection.allowGzip;
        if (connection.user != null && connection.password != null) {
            if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
                logger$5.throwError("basic authentication requires a secure https url", Logger.errors.INVALID_ARGUMENT, { argument: "url", url: url, user: connection.user, password: "[REDACTED]" });
            }
            const authorization = connection.user + ":" + connection.password;
            headers["authorization"] = {
                key: "Authorization",
                value: "Basic " + encode$1(toUtf8Bytes(authorization))
            };
        }
    }
    const reData = new RegExp("^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$", "i");
    const dataMatch = ((url) ? url.match(reData) : null);
    if (dataMatch) {
        try {
            const response = {
                statusCode: 200,
                statusMessage: "OK",
                headers: { "content-type": dataMatch[1] },
                body: decode$1(dataMatch[2])
            };
            let result = response.body;
            if (processFunc) {
                result = processFunc(response.body, response);
            }
            return Promise.resolve(result);
        }
        catch (error) {
            logger$5.throwError("processing response error", Logger.errors.SERVER_ERROR, {
                body: bodyify(dataMatch[1], dataMatch[2]),
                error: error,
                requestBody: null,
                requestMethod: "GET",
                url: url
            });
        }
    }
    if (body) {
        options.method = "POST";
        options.body = body;
        if (headers["content-type"] == null) {
            headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" };
        }
        if (headers["content-length"] == null) {
            headers["content-length"] = { key: "Content-Length", value: String(body.length) };
        }
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key) => {
        const header = headers[key];
        flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = (function () {
        let timer = null;
        const promise = new Promise(function (resolve, reject) {
            if (timeout) {
                timer = setTimeout(() => {
                    if (timer == null) {
                        return;
                    }
                    timer = null;
                    reject(logger$5.makeError("timeout", Logger.errors.TIMEOUT, {
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        timeout: timeout,
                        url: url
                    }));
                }, timeout);
            }
        });
        const cancel = function () {
            if (timer == null) {
                return;
            }
            clearTimeout(timer);
            timer = null;
        };
        return { promise, cancel };
    })();
    const runningFetch = (function () {
        return __awaiter$2(this, void 0, void 0, function* () {
            for (let attempt = 0; attempt < attemptLimit; attempt++) {
                let response = null;
                try {
                    response = yield getUrl(url, options);
                    if (attempt < attemptLimit) {
                        if (response.statusCode === 301 || response.statusCode === 302) {
                            // Redirection; for now we only support absolute locataions
                            const location = response.headers.location || "";
                            if (options.method === "GET" && location.match(/^https:/)) {
                                url = response.headers.location;
                                continue;
                            }
                        }
                        else if (response.statusCode === 429) {
                            // Exponential back-off throttling
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                let stall = 0;
                                const retryAfter = response.headers["retry-after"];
                                if (typeof (retryAfter) === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                                    stall = parseInt(retryAfter) * 1000;
                                }
                                else {
                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                }
                                //console.log("Stalling 429");
                                yield staller(stall);
                                continue;
                            }
                        }
                    }
                }
                catch (error) {
                    response = error.response;
                    if (response == null) {
                        runningTimeout.cancel();
                        logger$5.throwError("missing response", Logger.errors.SERVER_ERROR, {
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            serverError: error,
                            url: url
                        });
                    }
                }
                let body = response.body;
                if (allow304 && response.statusCode === 304) {
                    body = null;
                }
                else if (response.statusCode < 200 || response.statusCode >= 300) {
                    runningTimeout.cancel();
                    logger$5.throwError("bad response", Logger.errors.SERVER_ERROR, {
                        status: response.statusCode,
                        headers: response.headers,
                        body: bodyify(body, ((response.headers) ? response.headers["content-type"] : null)),
                        requestBody: bodyify(options.body, flatHeaders["content-type"]),
                        requestMethod: options.method,
                        url: url
                    });
                }
                if (processFunc) {
                    try {
                        const result = yield processFunc(body, response);
                        runningTimeout.cancel();
                        return result;
                    }
                    catch (error) {
                        // Allow the processFunc to trigger a throttle
                        if (error.throttleRetry && attempt < attemptLimit) {
                            let tryAgain = true;
                            if (throttleCallback) {
                                tryAgain = yield throttleCallback(attempt, url);
                            }
                            if (tryAgain) {
                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                                //console.log("Stalling callback");
                                yield staller(timeout);
                                continue;
                            }
                        }
                        runningTimeout.cancel();
                        logger$5.throwError("processing response error", Logger.errors.SERVER_ERROR, {
                            body: bodyify(body, ((response.headers) ? response.headers["content-type"] : null)),
                            error: error,
                            requestBody: bodyify(options.body, flatHeaders["content-type"]),
                            requestMethod: options.method,
                            url: url
                        });
                    }
                }
                runningTimeout.cancel();
                // If we had a processFunc, it either returned a T or threw above.
                // The "body" is now a Uint8Array.
                return body;
            }
            return logger$5.throwError("failed response", Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url: url
            });
        });
    })();
    return Promise.race([runningTimeout.promise, runningFetch]);
}
function fetchJson(connection, json, processFunc) {
    let processJsonFunc = (value, response) => {
        let result = null;
        if (value != null) {
            try {
                result = JSON.parse(toUtf8String(value));
            }
            catch (error) {
                logger$5.throwError("invalid JSON", Logger.errors.SERVER_ERROR, {
                    body: value,
                    error: error
                });
            }
        }
        if (processFunc) {
            result = processFunc(result, response);
        }
        return result;
    };
    // If we have json to send, we must
    // - add content-type of application/json (unless already overridden)
    // - convert the json to bytes
    let body = null;
    if (json != null) {
        body = toUtf8Bytes(json);
        // Create a connection with the content-type set for JSON
        const updated = (typeof (connection) === "string") ? ({ url: connection }) : shallowCopy(connection);
        if (updated.headers) {
            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === "content-type")).length) !== 0;
            if (!hasContentType) {
                updated.headers = shallowCopy(updated.headers);
                updated.headers["content-type"] = "application/json";
            }
        }
        else {
            updated.headers = { "content-type": "application/json" };
        }
        connection = updated;
    }
    return _fetchData(connection, body, processJsonFunc);
}
function poll(func, options) {
    if (!options) {
        options = {};
    }
    options = shallowCopy(options);
    if (options.floor == null) {
        options.floor = 0;
    }
    if (options.ceiling == null) {
        options.ceiling = 10000;
    }
    if (options.interval == null) {
        options.interval = 250;
    }
    return new Promise(function (resolve, reject) {
        let timer = null;
        let done = false;
        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.
        const cancel = () => {
            if (done) {
                return false;
            }
            done = true;
            if (timer) {
                clearTimeout(timer);
            }
            return true;
        };
        if (options.timeout) {
            timer = setTimeout(() => {
                if (cancel()) {
                    reject(new Error("timeout"));
                }
            }, options.timeout);
        }
        const retryLimit = options.retryLimit;
        let attempt = 0;
        function check() {
            return func().then(function (result) {
                // If we have a result, or are allowed null then we're done
                if (result !== undefined) {
                    if (cancel()) {
                        resolve(result);
                    }
                }
                else if (options.oncePoll) {
                    options.oncePoll.once("poll", check);
                }
                else if (options.onceBlock) {
                    options.onceBlock.once("block", check);
                    // Otherwise, exponential back-off (up to 10s) our next request
                }
                else if (!done) {
                    attempt++;
                    if (attempt > retryLimit) {
                        if (cancel()) {
                            reject(new Error("retry limit reached"));
                        }
                        return;
                    }
                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                    if (timeout < options.floor) {
                        timeout = options.floor;
                    }
                    if (timeout > options.ceiling) {
                        timeout = options.ceiling;
                    }
                    setTimeout(check, timeout);
                }
                return null;
            }, function (error) {
                if (cancel()) {
                    reject(error);
                }
            });
        }
        check();
    });
}

var ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';

// pre-compute lookup table
var ALPHABET_MAP = {};
for (var z = 0; z < ALPHABET.length; z++) {
  var x = ALPHABET.charAt(z);

  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')
  ALPHABET_MAP[x] = z;
}

function polymodStep (pre) {
  var b = pre >> 25;
  return ((pre & 0x1FFFFFF) << 5) ^
    (-((b >> 0) & 1) & 0x3b6a57b2) ^
    (-((b >> 1) & 1) & 0x26508e6d) ^
    (-((b >> 2) & 1) & 0x1ea119fa) ^
    (-((b >> 3) & 1) & 0x3d4233dd) ^
    (-((b >> 4) & 1) & 0x2a1462b3)
}

function prefixChk (prefix) {
  var chk = 1;
  for (var i = 0; i < prefix.length; ++i) {
    var c = prefix.charCodeAt(i);
    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'

    chk = polymodStep(chk) ^ (c >> 5);
  }
  chk = polymodStep(chk);

  for (i = 0; i < prefix.length; ++i) {
    var v = prefix.charCodeAt(i);
    chk = polymodStep(chk) ^ (v & 0x1f);
  }
  return chk
}

function encode (prefix, words, LIMIT) {
  LIMIT = LIMIT || 90;
  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')

  prefix = prefix.toLowerCase();

  // determine chk mod
  var chk = prefixChk(prefix);
  if (typeof chk === 'string') throw new Error(chk)

  var result = prefix + '1';
  for (var i = 0; i < words.length; ++i) {
    var x = words[i];
    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')

    chk = polymodStep(chk) ^ x;
    result += ALPHABET.charAt(x);
  }

  for (i = 0; i < 6; ++i) {
    chk = polymodStep(chk);
  }
  chk ^= 1;

  for (i = 0; i < 6; ++i) {
    var v = (chk >> ((5 - i) * 5)) & 0x1f;
    result += ALPHABET.charAt(v);
  }

  return result
}

function __decode (str, LIMIT) {
  LIMIT = LIMIT || 90;
  if (str.length < 8) return str + ' too short'
  if (str.length > LIMIT) return 'Exceeds length limit'

  // don't allow mixed case
  var lowered = str.toLowerCase();
  var uppered = str.toUpperCase();
  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str
  str = lowered;

  var split = str.lastIndexOf('1');
  if (split === -1) return 'No separator character for ' + str
  if (split === 0) return 'Missing prefix for ' + str

  var prefix = str.slice(0, split);
  var wordChars = str.slice(split + 1);
  if (wordChars.length < 6) return 'Data too short'

  var chk = prefixChk(prefix);
  if (typeof chk === 'string') return chk

  var words = [];
  for (var i = 0; i < wordChars.length; ++i) {
    var c = wordChars.charAt(i);
    var v = ALPHABET_MAP[c];
    if (v === undefined) return 'Unknown character ' + c
    chk = polymodStep(chk) ^ v;

    // not in the checksum?
    if (i + 6 >= wordChars.length) continue
    words.push(v);
  }

  if (chk !== 1) return 'Invalid checksum for ' + str
  return { prefix: prefix, words: words }
}

function decodeUnsafe () {
  var res = __decode.apply(null, arguments);
  if (typeof res === 'object') return res
}

function decode (str) {
  var res = __decode.apply(null, arguments);
  if (typeof res === 'object') return res

  throw new Error(res)
}

function convert (data, inBits, outBits, pad) {
  var value = 0;
  var bits = 0;
  var maxV = (1 << outBits) - 1;

  var result = [];
  for (var i = 0; i < data.length; ++i) {
    value = (value << inBits) | data[i];
    bits += inBits;

    while (bits >= outBits) {
      bits -= outBits;
      result.push((value >> bits) & maxV);
    }
  }

  if (pad) {
    if (bits > 0) {
      result.push((value << (outBits - bits)) & maxV);
    }
  } else {
    if (bits >= inBits) return 'Excess padding'
    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'
  }

  return result
}

function toWordsUnsafe (bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res)) return res
}

function toWords (bytes) {
  var res = convert(bytes, 8, 5, true);
  if (Array.isArray(res)) return res

  throw new Error(res)
}

function fromWordsUnsafe (words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res)) return res
}

function fromWords (words) {
  var res = convert(words, 5, 8, false);
  if (Array.isArray(res)) return res

  throw new Error(res)
}

var bech32 = {
  decodeUnsafe: decodeUnsafe,
  decode: decode,
  encode: encode,
  toWordsUnsafe: toWordsUnsafe,
  toWords: toWords,
  fromWordsUnsafe: fromWordsUnsafe,
  fromWords: fromWords
};

const version$2 = "providers/5.5.3";

const logger$4 = new Logger(version$2);
class Formatter {
    constructor() {
        logger$4.checkNew(new.target, Formatter);
        this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
        const formats = ({});
        const address = this.address.bind(this);
        const bigNumber = this.bigNumber.bind(this);
        const blockTag = this.blockTag.bind(this);
        const data = this.data.bind(this);
        const hash = this.hash.bind(this);
        const hex = this.hex.bind(this);
        const number = this.number.bind(this);
        const type = this.type.bind(this);
        const strictData = (v) => { return this.data(v, true); };
        formats.transaction = {
            hash: hash,
            type: type,
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
            blockHash: Formatter.allowNull(hash, null),
            blockNumber: Formatter.allowNull(number, null),
            transactionIndex: Formatter.allowNull(number, null),
            confirmations: Formatter.allowNull(number, null),
            from: address,
            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
            // must be set
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            gasLimit: bigNumber,
            to: Formatter.allowNull(address, null),
            value: bigNumber,
            nonce: number,
            data: data,
            r: Formatter.allowNull(this.uint256),
            s: Formatter.allowNull(this.uint256),
            v: Formatter.allowNull(number),
            creates: Formatter.allowNull(address, null),
            raw: Formatter.allowNull(data),
        };
        formats.transactionRequest = {
            from: Formatter.allowNull(address),
            nonce: Formatter.allowNull(number),
            gasLimit: Formatter.allowNull(bigNumber),
            gasPrice: Formatter.allowNull(bigNumber),
            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),
            maxFeePerGas: Formatter.allowNull(bigNumber),
            to: Formatter.allowNull(address),
            value: Formatter.allowNull(bigNumber),
            data: Formatter.allowNull(strictData),
            type: Formatter.allowNull(number),
            accessList: Formatter.allowNull(this.accessList.bind(this), null),
        };
        formats.receiptLog = {
            transactionIndex: number,
            blockNumber: number,
            transactionHash: hash,
            address: address,
            topics: Formatter.arrayOf(hash),
            data: data,
            logIndex: number,
            blockHash: hash,
        };
        formats.receipt = {
            to: Formatter.allowNull(this.address, null),
            from: Formatter.allowNull(this.address, null),
            contractAddress: Formatter.allowNull(address, null),
            transactionIndex: number,
            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
            root: Formatter.allowNull(hex),
            gasUsed: bigNumber,
            logsBloom: Formatter.allowNull(data),
            blockHash: hash,
            transactionHash: hash,
            logs: Formatter.arrayOf(this.receiptLog.bind(this)),
            blockNumber: number,
            confirmations: Formatter.allowNull(number, null),
            cumulativeGasUsed: bigNumber,
            effectiveGasPrice: Formatter.allowNull(bigNumber),
            status: Formatter.allowNull(number),
            type: type
        };
        formats.block = {
            hash: hash,
            parentHash: hash,
            number: number,
            timestamp: number,
            nonce: Formatter.allowNull(hex),
            difficulty: this.difficulty.bind(this),
            gasLimit: bigNumber,
            gasUsed: bigNumber,
            miner: address,
            extraData: data,
            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),
            baseFeePerGas: Formatter.allowNull(bigNumber)
        };
        formats.blockWithTransactions = shallowCopy(formats.block);
        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));
        formats.filter = {
            fromBlock: Formatter.allowNull(blockTag, undefined),
            toBlock: Formatter.allowNull(blockTag, undefined),
            blockHash: Formatter.allowNull(hash, undefined),
            address: Formatter.allowNull(address, undefined),
            topics: Formatter.allowNull(this.topics.bind(this), undefined),
        };
        formats.filterLog = {
            blockNumber: Formatter.allowNull(number),
            blockHash: Formatter.allowNull(hash),
            transactionIndex: number,
            removed: Formatter.allowNull(this.boolean.bind(this)),
            address: address,
            data: Formatter.allowFalsish(data, "0x"),
            topics: Formatter.arrayOf(hash),
            transactionHash: hash,
            logIndex: number,
        };
        return formats;
    }
    accessList(accessList) {
        return accessListify(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
        if (number === "0x") {
            return 0;
        }
        return BigNumber.from(number).toNumber();
    }
    type(number) {
        if (number === "0x" || number == null) {
            return 0;
        }
        return BigNumber.from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
        return BigNumber.from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
        if (typeof (value) === "boolean") {
            return value;
        }
        if (typeof (value) === "string") {
            value = value.toLowerCase();
            if (value === "true") {
                return true;
            }
            if (value === "false") {
                return false;
            }
        }
        throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
        if (typeof (value) === "string") {
            if (!strict && value.substring(0, 2) !== "0x") {
                value = "0x" + value;
            }
            if (isHexString(value)) {
                return value.toLowerCase();
            }
        }
        return logger$4.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
        const result = this.hex(value, strict);
        if ((result.length % 2) !== 0) {
            throw new Error("invalid data; odd-length - " + value);
        }
        return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
        return getAddress(value);
    }
    callAddress(value) {
        if (!isHexString(value, 32)) {
            return null;
        }
        const address = getAddress(hexDataSlice(value, 12));
        return (address === AddressZero) ? null : address;
    }
    contractAddress(value) {
        return getContractAddress(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
        if (blockTag == null) {
            return "latest";
        }
        if (blockTag === "earliest") {
            return "0x0";
        }
        if (blockTag === "latest" || blockTag === "pending") {
            return blockTag;
        }
        if (typeof (blockTag) === "number" || isHexString(blockTag)) {
            return hexValue(blockTag);
        }
        throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
        const result = this.hex(value, strict);
        if (hexDataLength(result) !== 32) {
            return logger$4.throwArgumentError("invalid hash", "value", value);
        }
        return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
        if (value == null) {
            return null;
        }
        const v = BigNumber.from(value);
        try {
            return v.toNumber();
        }
        catch (error) { }
        return null;
    }
    uint256(value) {
        if (!isHexString(value)) {
            throw new Error("invalid uint256");
        }
        return hexZeroPad(value, 32);
    }
    _block(value, format) {
        if (value.author != null && value.miner == null) {
            value.miner = value.author;
        }
        // The difficulty may need to come from _difficulty in recursed blocks
        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;
        const result = Formatter.check(format, value);
        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));
        return result;
    }
    block(value) {
        return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
        return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
        return Formatter.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
        // Rename gas to gasLimit
        if (transaction.gas != null && transaction.gasLimit == null) {
            transaction.gasLimit = transaction.gas;
        }
        // Some clients (TestRPC) do strange things like return 0x0 for the
        // 0 address; correct this to be a real address
        if (transaction.to && BigNumber.from(transaction.to).isZero()) {
            transaction.to = "0x0000000000000000000000000000000000000000";
        }
        // Rename input to data
        if (transaction.input != null && transaction.data == null) {
            transaction.data = transaction.input;
        }
        // If to and creates are empty, populate the creates from the transaction
        if (transaction.to == null && transaction.creates == null) {
            transaction.creates = this.contractAddress(transaction);
        }
        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
            transaction.accessList = [];
        }
        const result = Formatter.check(this.formats.transaction, transaction);
        if (transaction.chainId != null) {
            let chainId = transaction.chainId;
            if (isHexString(chainId)) {
                chainId = BigNumber.from(chainId).toNumber();
            }
            result.chainId = chainId;
        }
        else {
            let chainId = transaction.networkId;
            // geth-etc returns chainId
            if (chainId == null && result.v == null) {
                chainId = transaction.chainId;
            }
            if (isHexString(chainId)) {
                chainId = BigNumber.from(chainId).toNumber();
            }
            if (typeof (chainId) !== "number" && result.v != null) {
                chainId = (result.v - 35) / 2;
                if (chainId < 0) {
                    chainId = 0;
                }
                chainId = parseInt(chainId);
            }
            if (typeof (chainId) !== "number") {
                chainId = 0;
            }
            result.chainId = chainId;
        }
        // 0x0000... should actually be null
        if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
            result.blockHash = null;
        }
        return result;
    }
    transaction(value) {
        return parse(value);
    }
    receiptLog(value) {
        return Formatter.check(this.formats.receiptLog, value);
    }
    receipt(value) {
        const result = Formatter.check(this.formats.receipt, value);
        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it
        if (result.root != null) {
            if (result.root.length <= 4) {
                // Could be 0x00, 0x0, 0x01 or 0x1
                const value = BigNumber.from(result.root).toNumber();
                if (value === 0 || value === 1) {
                    // Make sure if both are specified, they match
                    if (result.status != null && (result.status !== value)) {
                        logger$4.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status });
                    }
                    result.status = value;
                    delete result.root;
                }
                else {
                    logger$4.throwArgumentError("invalid alt-root-status", "value.root", result.root);
                }
            }
            else if (result.root.length !== 66) {
                // Must be a valid bytes32
                logger$4.throwArgumentError("invalid root hash", "value.root", result.root);
            }
        }
        if (result.status != null) {
            result.byzantium = true;
        }
        return result;
    }
    topics(value) {
        if (Array.isArray(value)) {
            return value.map((v) => this.topics(v));
        }
        else if (value != null) {
            return this.hash(value, true);
        }
        return null;
    }
    filter(value) {
        return Formatter.check(this.formats.filter, value);
    }
    filterLog(value) {
        return Formatter.check(this.formats.filterLog, value);
    }
    static check(format, object) {
        const result = {};
        for (const key in format) {
            try {
                const value = format[key](object[key]);
                if (value !== undefined) {
                    result[key] = value;
                }
            }
            catch (error) {
                error.checkKey = key;
                error.checkValue = object[key];
                throw error;
            }
        }
        return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
        return (function (value) {
            if (value == null) {
                return nullValue;
            }
            return format(value);
        });
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
        return (function (value) {
            if (!value) {
                return replaceValue;
            }
            return format(value);
        });
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
        return (function (array) {
            if (!Array.isArray(array)) {
                throw new Error("not an array");
            }
            const result = [];
            array.forEach(function (value) {
                result.push(format(value));
            });
            return result;
        });
    }
}

var __awaiter$1 = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$3 = new Logger(version$2);
//////////////////////////////
// Event Serializeing
function checkTopic(topic) {
    if (topic == null) {
        return "null";
    }
    if (hexDataLength(topic) !== 32) {
        logger$3.throwArgumentError("invalid topic", "topic", topic);
    }
    return topic.toLowerCase();
}
function serializeTopics(topics) {
    // Remove trailing null AND-topics; they are redundant
    topics = topics.slice();
    while (topics.length > 0 && topics[topics.length - 1] == null) {
        topics.pop();
    }
    return topics.map((topic) => {
        if (Array.isArray(topic)) {
            // Only track unique OR-topics
            const unique = {};
            topic.forEach((topic) => {
                unique[checkTopic(topic)] = true;
            });
            // The order of OR-topics does not matter
            const sorted = Object.keys(unique);
            sorted.sort();
            return sorted.join("|");
        }
        else {
            return checkTopic(topic);
        }
    }).join("&");
}
function deserializeTopics(data) {
    if (data === "") {
        return [];
    }
    return data.split(/&/g).map((topic) => {
        if (topic === "") {
            return [];
        }
        const comps = topic.split("|").map((topic) => {
            return ((topic === "null") ? null : topic);
        });
        return ((comps.length === 1) ? comps[0] : comps);
    });
}
function getEventTag(eventName) {
    if (typeof (eventName) === "string") {
        eventName = eventName.toLowerCase();
        if (hexDataLength(eventName) === 32) {
            return "tx:" + eventName;
        }
        if (eventName.indexOf(":") === -1) {
            return eventName;
        }
    }
    else if (Array.isArray(eventName)) {
        return "filter:*:" + serializeTopics(eventName);
    }
    else if (ForkEvent.isForkEvent(eventName)) {
        logger$3.warn("not implemented");
        throw new Error("not implemented");
    }
    else if (eventName && typeof (eventName) === "object") {
        return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
    }
    throw new Error("invalid event - " + eventName);
}
//////////////////////////////
// Helper Object
function getTime() {
    return (new Date()).getTime();
}
function stall(duration) {
    return new Promise((resolve) => {
        setTimeout(resolve, duration);
    });
}
//////////////////////////////
// Provider Object
/**
 *  EventType
 *   - "block"
 *   - "poll"
 *   - "didPoll"
 *   - "pending"
 *   - "error"
 *   - "network"
 *   - filter
 *   - topics array
 *   - transaction hash
 */
const PollableEvents = ["block", "network", "pending", "poll"];
class Event {
    constructor(tag, listener, once) {
        defineReadOnly(this, "tag", tag);
        defineReadOnly(this, "listener", listener);
        defineReadOnly(this, "once", once);
    }
    get event() {
        switch (this.type) {
            case "tx":
                return this.hash;
            case "filter":
                return this.filter;
        }
        return this.tag;
    }
    get type() {
        return this.tag.split(":")[0];
    }
    get hash() {
        const comps = this.tag.split(":");
        if (comps[0] !== "tx") {
            return null;
        }
        return comps[1];
    }
    get filter() {
        const comps = this.tag.split(":");
        if (comps[0] !== "filter") {
            return null;
        }
        const address = comps[1];
        const topics = deserializeTopics(comps[2]);
        const filter = {};
        if (topics.length > 0) {
            filter.topics = topics;
        }
        if (address && address !== "*") {
            filter.address = address;
        }
        return filter;
    }
    pollable() {
        return (this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0);
    }
}
// https://github.com/satoshilabs/slips/blob/master/slip-0044.md
const coinInfos = {
    "0": { symbol: "btc", p2pkh: 0x00, p2sh: 0x05, prefix: "bc" },
    "2": { symbol: "ltc", p2pkh: 0x30, p2sh: 0x32, prefix: "ltc" },
    "3": { symbol: "doge", p2pkh: 0x1e, p2sh: 0x16 },
    "60": { symbol: "eth", ilk: "eth" },
    "61": { symbol: "etc", ilk: "eth" },
    "700": { symbol: "xdai", ilk: "eth" },
};
function bytes32ify(value) {
    return hexZeroPad(BigNumber.from(value).toHexString(), 32);
}
// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)
function base58Encode(data) {
    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));
}
const matcherIpfs = new RegExp("^(ipfs):/\/(.*)$", "i");
const matchers = [
    new RegExp("^(https):/\/(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    matcherIpfs,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i"),
];
function _parseString(result) {
    try {
        return toUtf8String(_parseBytes(result));
    }
    catch (error) { }
    return null;
}
function _parseBytes(result) {
    if (result === "0x") {
        return null;
    }
    const offset = BigNumber.from(hexDataSlice(result, 0, 32)).toNumber();
    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();
    return hexDataSlice(result, offset + 32, offset + 32 + length);
}
// Trim off the ipfs:// prefix and return the default gateway URL
function getIpfsLink(link) {
    if (link.match(/^ipfs:\/\/ipfs\//i)) {
        link = link.substring(12);
    }
    else if (link.match(/^ipfs:\/\//i)) {
        link = link.substring(7);
    }
    else {
        logger$3.throwArgumentError("unsupported IPFS format", "link", link);
    }
    return `https:/\/gateway.ipfs.io/ipfs/${link}`;
}
class Resolver {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress) {
        defineReadOnly(this, "provider", provider);
        defineReadOnly(this, "name", name);
        defineReadOnly(this, "address", provider.formatter.address(address));
        defineReadOnly(this, "_resolvedAddress", resolvedAddress);
    }
    _fetchBytes(selector, parameters) {
        return __awaiter$1(this, void 0, void 0, function* () {
            // e.g. keccak256("addr(bytes32,uint256)")
            const tx = {
                to: this.address,
                data: hexConcat([selector, namehash(this.name), (parameters || "0x")])
            };
            try {
                return _parseBytes(yield this.provider.call(tx));
            }
            catch (error) {
                if (error.code === Logger.errors.CALL_EXCEPTION) {
                    return null;
                }
                return null;
            }
        });
    }
    _getAddress(coinType, hexBytes) {
        const coinInfo = coinInfos[String(coinType)];
        if (coinInfo == null) {
            logger$3.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {
                operation: `getAddress(${coinType})`
            });
        }
        if (coinInfo.ilk === "eth") {
            return this.provider.formatter.address(hexBytes);
        }
        const bytes = arrayify(hexBytes);
        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG
        if (coinInfo.p2pkh != null) {
            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (p2pkh) {
                const length = parseInt(p2pkh[1], 16);
                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
                    return base58Encode(concat([[coinInfo.p2pkh], ("0x" + p2pkh[2])]));
                }
            }
        }
        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL
        if (coinInfo.p2sh != null) {
            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (p2sh) {
                const length = parseInt(p2sh[1], 16);
                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {
                    return base58Encode(concat([[coinInfo.p2sh], ("0x" + p2sh[2])]));
                }
            }
        }
        // Bech32
        if (coinInfo.prefix != null) {
            const length = bytes[1];
            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program
            let version = bytes[0];
            if (version === 0x00) {
                if (length !== 20 && length !== 32) {
                    version = -1;
                }
            }
            else {
                version = -1;
            }
            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
                const words = bech32.toWords(bytes.slice(2));
                words.unshift(version);
                return bech32.encode(coinInfo.prefix, words);
            }
        }
        return null;
    }
    getAddress(coinType) {
        return __awaiter$1(this, void 0, void 0, function* () {
            if (coinType == null) {
                coinType = 60;
            }
            // If Ethereum, use the standard `addr(bytes32)`
            if (coinType === 60) {
                try {
                    // keccak256("addr(bytes32)")
                    const transaction = {
                        to: this.address,
                        data: ("0x3b3b57de" + namehash(this.name).substring(2))
                    };
                    const hexBytes = yield this.provider.call(transaction);
                    // No address
                    if (hexBytes === "0x" || hexBytes === HashZero) {
                        return null;
                    }
                    return this.provider.formatter.callAddress(hexBytes);
                }
                catch (error) {
                    if (error.code === Logger.errors.CALL_EXCEPTION) {
                        return null;
                    }
                    throw error;
                }
            }
            // keccak256("addr(bytes32,uint256")
            const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
            // No address
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            // Compute the address
            const address = this._getAddress(coinType, hexBytes);
            if (address == null) {
                logger$3.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: `getAddress(${coinType})`,
                    coinType: coinType,
                    data: hexBytes
                });
            }
            return address;
        });
    }
    getAvatar() {
        return __awaiter$1(this, void 0, void 0, function* () {
            const linkage = [{ type: "name", content: this.name }];
            try {
                // test data for ricmoo.eth
                //const avatar = "eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233";
                const avatar = yield this.getText("avatar");
                if (avatar == null) {
                    return null;
                }
                for (let i = 0; i < matchers.length; i++) {
                    const match = avatar.match(matchers[i]);
                    if (match == null) {
                        continue;
                    }
                    const scheme = match[1].toLowerCase();
                    switch (scheme) {
                        case "https":
                            linkage.push({ type: "url", content: avatar });
                            return { linkage, url: avatar };
                        case "data":
                            linkage.push({ type: "data", content: avatar });
                            return { linkage, url: avatar };
                        case "ipfs":
                            linkage.push({ type: "ipfs", content: avatar });
                            return { linkage, url: getIpfsLink(avatar) };
                        case "erc721":
                        case "erc1155": {
                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)
                            const selector = (scheme === "erc721") ? "0xc87b56dd" : "0x0e89341c";
                            linkage.push({ type: scheme, content: avatar });
                            // The owner of this name
                            const owner = (this._resolvedAddress || (yield this.getAddress()));
                            const comps = (match[2] || "").split("/");
                            if (comps.length !== 2) {
                                return null;
                            }
                            const addr = yield this.provider.formatter.address(comps[0]);
                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);
                            // Check that this account owns the token
                            if (scheme === "erc721") {
                                // ownerOf(uint256 tokenId)
                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({
                                    to: addr, data: hexConcat(["0x6352211e", tokenId])
                                }));
                                if (owner !== tokenOwner) {
                                    return null;
                                }
                                linkage.push({ type: "owner", content: tokenOwner });
                            }
                            else if (scheme === "erc1155") {
                                // balanceOf(address owner, uint256 tokenId)
                                const balance = BigNumber.from(yield this.provider.call({
                                    to: addr, data: hexConcat(["0x00fdd58e", hexZeroPad(owner, 32), tokenId])
                                }));
                                if (balance.isZero()) {
                                    return null;
                                }
                                linkage.push({ type: "balance", content: balance.toString() });
                            }
                            // Call the token contract for the metadata URL
                            const tx = {
                                to: this.provider.formatter.address(comps[0]),
                                data: hexConcat([selector, tokenId])
                            };
                            let metadataUrl = _parseString(yield this.provider.call(tx));
                            if (metadataUrl == null) {
                                return null;
                            }
                            linkage.push({ type: "metadata-url-base", content: metadataUrl });
                            // ERC-1155 allows a generic {id} in the URL
                            if (scheme === "erc1155") {
                                metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                                linkage.push({ type: "metadata-url-expanded", content: metadataUrl });
                            }
                            // Transform IPFS metadata links
                            if (metadataUrl.match(/^ipfs:/i)) {
                                metadataUrl = getIpfsLink(metadataUrl);
                            }
                            linkage.push({ type: "metadata-url", content: metadataUrl });
                            // Get the token metadata
                            const metadata = yield fetchJson(metadataUrl);
                            if (!metadata) {
                                return null;
                            }
                            linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
                            // Pull the image URL out
                            let imageUrl = metadata.image;
                            if (typeof (imageUrl) !== "string") {
                                return null;
                            }
                            if (imageUrl.match(/^(https:\/\/|data:)/i)) {
                                // Allow
                            }
                            else {
                                // Transform IPFS link to gateway
                                const ipfs = imageUrl.match(matcherIpfs);
                                if (ipfs == null) {
                                    return null;
                                }
                                linkage.push({ type: "url-ipfs", content: imageUrl });
                                imageUrl = getIpfsLink(imageUrl);
                            }
                            linkage.push({ type: "url", content: imageUrl });
                            return { linkage, url: imageUrl };
                        }
                    }
                }
            }
            catch (error) { }
            return null;
        });
    }
    getContentHash() {
        return __awaiter$1(this, void 0, void 0, function* () {
            // keccak256("contenthash()")
            const hexBytes = yield this._fetchBytes("0xbc1c58d1");
            // No contenthash
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            // IPFS (CID: 1, Type: DAG-PB)
            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (ipfs) {
                const length = parseInt(ipfs[3], 16);
                if (ipfs[4].length === length * 2) {
                    return "ipfs:/\/" + Base58.encode("0x" + ipfs[1]);
                }
            }
            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)
            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
            if (swarm) {
                if (swarm[1].length === (32 * 2)) {
                    return "bzz:/\/" + swarm[1];
                }
            }
            return logger$3.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "getContentHash()",
                data: hexBytes
            });
        });
    }
    getText(key) {
        return __awaiter$1(this, void 0, void 0, function* () {
            // The key encoded as parameter to fetchBytes
            let keyBytes = toUtf8Bytes(key);
            // The nodehash consumes the first slot, so the string pointer targets
            // offset 64, with the length at offset 64 and data starting at offset 96
            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);
            // Pad to word-size (32 bytes)
            if ((keyBytes.length % 32) !== 0) {
                keyBytes = concat([keyBytes, hexZeroPad("0x", 32 - (key.length % 32))]);
            }
            const hexBytes = yield this._fetchBytes("0x59d1d43c", hexlify(keyBytes));
            if (hexBytes == null || hexBytes === "0x") {
                return null;
            }
            return toUtf8String(hexBytes);
        });
    }
}
let defaultFormatter = null;
let nextPollId = 1;
class BaseProvider extends Provider {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */
    constructor(network) {
        logger$3.checkNew(new.target, Provider);
        super();
        // Events being listened to
        this._events = [];
        this._emitted = { block: -2 };
        this.formatter = new.target.getFormatter();
        // If network is any, this Provider allows the underlying
        // network to change dynamically, and we auto-detect the
        // current network
        defineReadOnly(this, "anyNetwork", (network === "any"));
        if (this.anyNetwork) {
            network = this.detectNetwork();
        }
        if (network instanceof Promise) {
            this._networkPromise = network;
            // Squash any "unhandled promise" errors; that do not need to be handled
            network.catch((error) => { });
            // Trigger initial network setting (async)
            this._ready().catch((error) => { });
        }
        else {
            const knownNetwork = getStatic(new.target, "getNetwork")(network);
            if (knownNetwork) {
                defineReadOnly(this, "_network", knownNetwork);
                this.emit("network", knownNetwork, null);
            }
            else {
                logger$3.throwArgumentError("invalid network", "network", network);
            }
        }
        this._maxInternalBlockNumber = -1024;
        this._lastBlockNumber = -2;
        this._pollingInterval = 4000;
        this._fastQueryDate = 0;
    }
    _ready() {
        return __awaiter$1(this, void 0, void 0, function* () {
            if (this._network == null) {
                let network = null;
                if (this._networkPromise) {
                    try {
                        network = yield this._networkPromise;
                    }
                    catch (error) { }
                }
                // Try the Provider's network detection (this MUST throw if it cannot)
                if (network == null) {
                    network = yield this.detectNetwork();
                }
                // This should never happen; every Provider sub-class should have
                // suggested a network by here (or have thrown).
                if (!network) {
                    logger$3.throwError("no network detected", Logger.errors.UNKNOWN_ERROR, {});
                }
                // Possible this call stacked so do not call defineReadOnly again
                if (this._network == null) {
                    if (this.anyNetwork) {
                        this._network = network;
                    }
                    else {
                        defineReadOnly(this, "_network", network);
                    }
                    this.emit("network", network, null);
                }
            }
            return this._network;
        });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
        return poll(() => {
            return this._ready().then((network) => {
                return network;
            }, (error) => {
                // If the network isn't running yet, we will wait
                if (error.code === Logger.errors.NETWORK_ERROR && error.event === "noNetwork") {
                    return undefined;
                }
                throw error;
            });
        });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
        if (defaultFormatter == null) {
            defaultFormatter = new Formatter();
        }
        return defaultFormatter;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
        return getNetwork((network == null) ? "homestead" : network);
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this._ready();
            // Allowing stale data up to maxAge old
            if (maxAge > 0) {
                // While there are pending internal block requests...
                while (this._internalBlockNumber) {
                    // ..."remember" which fetch we started with
                    const internalBlockNumber = this._internalBlockNumber;
                    try {
                        // Check the result is not too stale
                        const result = yield internalBlockNumber;
                        if ((getTime() - result.respTime) <= maxAge) {
                            return result.blockNumber;
                        }
                        // Too old; fetch a new value
                        break;
                    }
                    catch (error) {
                        // The fetch rejected; if we are the first to get the
                        // rejection, drop through so we replace it with a new
                        // fetch; all others blocked will then get that fetch
                        // which won't match the one they "remembered" and loop
                        if (this._internalBlockNumber === internalBlockNumber) {
                            break;
                        }
                    }
                }
            }
            const reqTime = getTime();
            const checkInternalBlockNumber = resolveProperties({
                blockNumber: this.perform("getBlockNumber", {}),
                networkError: this.getNetwork().then((network) => (null), (error) => (error))
            }).then(({ blockNumber, networkError }) => {
                if (networkError) {
                    // Unremember this bad internal block number
                    if (this._internalBlockNumber === checkInternalBlockNumber) {
                        this._internalBlockNumber = null;
                    }
                    throw networkError;
                }
                const respTime = getTime();
                blockNumber = BigNumber.from(blockNumber).toNumber();
                if (blockNumber < this._maxInternalBlockNumber) {
                    blockNumber = this._maxInternalBlockNumber;
                }
                this._maxInternalBlockNumber = blockNumber;
                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?
                return { blockNumber, reqTime, respTime };
            });
            this._internalBlockNumber = checkInternalBlockNumber;
            // Swallow unhandled exceptions; if needed they are handled else where
            checkInternalBlockNumber.catch((error) => {
                // Don't null the dead (rejected) fetch, if it has already been updated
                if (this._internalBlockNumber === checkInternalBlockNumber) {
                    this._internalBlockNumber = null;
                }
            });
            return (yield checkInternalBlockNumber).blockNumber;
        });
    }
    poll() {
        return __awaiter$1(this, void 0, void 0, function* () {
            const pollId = nextPollId++;
            // Track all running promises, so we can trigger a post-poll once they are complete
            const runners = [];
            let blockNumber = null;
            try {
                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
            }
            catch (error) {
                this.emit("error", error);
                return;
            }
            this._setFastBlockNumber(blockNumber);
            // Emit a poll event after we have the latest (fast) block number
            this.emit("poll", pollId, blockNumber);
            // If the block has not changed, meh.
            if (blockNumber === this._lastBlockNumber) {
                this.emit("didPoll", pollId);
                return;
            }
            // First polling cycle, trigger a "block" events
            if (this._emitted.block === -2) {
                this._emitted.block = blockNumber - 1;
            }
            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {
                logger$3.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
                this.emit("error", logger$3.makeError("network block skew detected", Logger.errors.NETWORK_ERROR, {
                    blockNumber: blockNumber,
                    event: "blockSkew",
                    previousBlockNumber: this._emitted.block
                }));
                this.emit("block", blockNumber);
            }
            else {
                // Notify all listener for each block that has passed
                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {
                    this.emit("block", i);
                }
            }
            // The emitted block was updated, check for obsolete events
            if (this._emitted.block !== blockNumber) {
                this._emitted.block = blockNumber;
                Object.keys(this._emitted).forEach((key) => {
                    // The block event does not expire
                    if (key === "block") {
                        return;
                    }
                    // The block we were at when we emitted this event
                    const eventBlockNumber = this._emitted[key];
                    // We cannot garbage collect pending transactions or blocks here
                    // They should be garbage collected by the Provider when setting
                    // "pending" events
                    if (eventBlockNumber === "pending") {
                        return;
                    }
                    // Evict any transaction hashes or block hashes over 12 blocks
                    // old, since they should not return null anyways
                    if (blockNumber - eventBlockNumber > 12) {
                        delete this._emitted[key];
                    }
                });
            }
            // First polling cycle
            if (this._lastBlockNumber === -2) {
                this._lastBlockNumber = blockNumber - 1;
            }
            // Find all transaction hashes we are waiting on
            this._events.forEach((event) => {
                switch (event.type) {
                    case "tx": {
                        const hash = event.hash;
                        let runner = this.getTransactionReceipt(hash).then((receipt) => {
                            if (!receipt || receipt.blockNumber == null) {
                                return null;
                            }
                            this._emitted["t:" + hash] = receipt.blockNumber;
                            this.emit(hash, receipt);
                            return null;
                        }).catch((error) => { this.emit("error", error); });
                        runners.push(runner);
                        break;
                    }
                    case "filter": {
                        const filter = event.filter;
                        filter.fromBlock = this._lastBlockNumber + 1;
                        filter.toBlock = blockNumber;
                        const runner = this.getLogs(filter).then((logs) => {
                            if (logs.length === 0) {
                                return;
                            }
                            logs.forEach((log) => {
                                this._emitted["b:" + log.blockHash] = log.blockNumber;
                                this._emitted["t:" + log.transactionHash] = log.blockNumber;
                                this.emit(filter, log);
                            });
                        }).catch((error) => { this.emit("error", error); });
                        runners.push(runner);
                        break;
                    }
                }
            });
            this._lastBlockNumber = blockNumber;
            // Once all events for this loop have been processed, emit "didPoll"
            Promise.all(runners).then(() => {
                this.emit("didPoll", pollId);
            }).catch((error) => { this.emit("error", error); });
            return;
        });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
        this._lastBlockNumber = blockNumber - 1;
        if (this.polling) {
            this.poll();
        }
    }
    get network() {
        return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
        return __awaiter$1(this, void 0, void 0, function* () {
            return logger$3.throwError("provider does not support network detection", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "provider.detectNetwork"
            });
        });
    }
    getNetwork() {
        return __awaiter$1(this, void 0, void 0, function* () {
            const network = yield this._ready();
            // Make sure we are still connected to the same network; this is
            // only an external call for backends which can have the underlying
            // network change spontaneously
            const currentNetwork = yield this.detectNetwork();
            if (network.chainId !== currentNetwork.chainId) {
                // We are allowing network changes, things can get complex fast;
                // make sure you know what you are doing if you use "any"
                if (this.anyNetwork) {
                    this._network = currentNetwork;
                    // Reset all internal block number guards and caches
                    this._lastBlockNumber = -2;
                    this._fastBlockNumber = null;
                    this._fastBlockNumberPromise = null;
                    this._fastQueryDate = 0;
                    this._emitted.block = -2;
                    this._maxInternalBlockNumber = -1024;
                    this._internalBlockNumber = null;
                    // The "network" event MUST happen before this method resolves
                    // so any events have a chance to unregister, so we stall an
                    // additional event loop before returning from /this/ call
                    this.emit("network", currentNetwork, network);
                    yield stall(0);
                    return this._network;
                }
                const error = logger$3.makeError("underlying network changed", Logger.errors.NETWORK_ERROR, {
                    event: "changed",
                    network: network,
                    detectedNetwork: currentNetwork
                });
                this.emit("error", error);
                throw error;
            }
            return network;
        });
    }
    get blockNumber() {
        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {
            this._setFastBlockNumber(blockNumber);
        }, (error) => { });
        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;
    }
    get polling() {
        return (this._poller != null);
    }
    set polling(value) {
        if (value && !this._poller) {
            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);
            if (!this._bootstrapPoll) {
                this._bootstrapPoll = setTimeout(() => {
                    this.poll();
                    // We block additional polls until the polling interval
                    // is done, to prevent overwhelming the poll function
                    this._bootstrapPoll = setTimeout(() => {
                        // If polling was disabled, something may require a poke
                        // since starting the bootstrap poll and it was disabled
                        if (!this._poller) {
                            this.poll();
                        }
                        // Clear out the bootstrap so we can do another
                        this._bootstrapPoll = null;
                    }, this.pollingInterval);
                }, 0);
            }
        }
        else if (!value && this._poller) {
            clearInterval(this._poller);
            this._poller = null;
        }
    }
    get pollingInterval() {
        return this._pollingInterval;
    }
    set pollingInterval(value) {
        if (typeof (value) !== "number" || value <= 0 || parseInt(String(value)) != value) {
            throw new Error("invalid polling interval");
        }
        this._pollingInterval = value;
        if (this._poller) {
            clearInterval(this._poller);
            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);
        }
    }
    _getFastBlockNumber() {
        const now = getTime();
        // Stale block number, request a newer value
        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {
            this._fastQueryDate = now;
            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {
                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
                    this._fastBlockNumber = blockNumber;
                }
                return this._fastBlockNumber;
            });
        }
        return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
        // Older block, maybe a stale request
        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
            return;
        }
        // Update the time we updated the blocknumber
        this._fastQueryDate = getTime();
        // Newer block number, use  it
        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
            this._fastBlockNumberPromise = Promise.resolve(blockNumber);
        }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
        return __awaiter$1(this, void 0, void 0, function* () {
            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);
        });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
        return __awaiter$1(this, void 0, void 0, function* () {
            const receipt = yield this.getTransactionReceipt(transactionHash);
            // Receipt is already good
            if ((receipt ? receipt.confirmations : 0) >= confirmations) {
                return receipt;
            }
            // Poll until the receipt is good...
            return new Promise((resolve, reject) => {
                const cancelFuncs = [];
                let done = false;
                const alreadyDone = function () {
                    if (done) {
                        return true;
                    }
                    done = true;
                    cancelFuncs.forEach((func) => { func(); });
                    return false;
                };
                const minedHandler = (receipt) => {
                    if (receipt.confirmations < confirmations) {
                        return;
                    }
                    if (alreadyDone()) {
                        return;
                    }
                    resolve(receipt);
                };
                this.on(transactionHash, minedHandler);
                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });
                if (replaceable) {
                    let lastBlockNumber = replaceable.startBlock;
                    let scannedBlock = null;
                    const replaceHandler = (blockNumber) => __awaiter$1(this, void 0, void 0, function* () {
                        if (done) {
                            return;
                        }
                        // Wait 1 second; this is only used in the case of a fault, so
                        // we will trade off a little bit of latency for more consistent
                        // results and fewer JSON-RPC calls
                        yield stall(1000);
                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter$1(this, void 0, void 0, function* () {
                            if (done) {
                                return;
                            }
                            if (nonce <= replaceable.nonce) {
                                lastBlockNumber = blockNumber;
                            }
                            else {
                                // First check if the transaction was mined
                                {
                                    const mined = yield this.getTransaction(transactionHash);
                                    if (mined && mined.blockNumber != null) {
                                        return;
                                    }
                                }
                                // First time scanning. We start a little earlier for some
                                // wiggle room here to handle the eventually consistent nature
                                // of blockchain (e.g. the getTransactionCount was for a
                                // different block)
                                if (scannedBlock == null) {
                                    scannedBlock = lastBlockNumber - 3;
                                    if (scannedBlock < replaceable.startBlock) {
                                        scannedBlock = replaceable.startBlock;
                                    }
                                }
                                while (scannedBlock <= blockNumber) {
                                    if (done) {
                                        return;
                                    }
                                    const block = yield this.getBlockWithTransactions(scannedBlock);
                                    for (let ti = 0; ti < block.transactions.length; ti++) {
                                        const tx = block.transactions[ti];
                                        // Successfully mined!
                                        if (tx.hash === transactionHash) {
                                            return;
                                        }
                                        // Matches our transaction from and nonce; its a replacement
                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                                            if (done) {
                                                return;
                                            }
                                            // Get the receipt of the replacement
                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);
                                            // Already resolved or rejected (prolly a timeout)
                                            if (alreadyDone()) {
                                                return;
                                            }
                                            // The reason we were replaced
                                            let reason = "replaced";
                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                                                reason = "repriced";
                                            }
                                            else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                                                reason = "cancelled";
                                            }
                                            // Explain why we were replaced
                                            reject(logger$3.makeError("transaction was replaced", Logger.errors.TRANSACTION_REPLACED, {
                                                cancelled: (reason === "replaced" || reason === "cancelled"),
                                                reason,
                                                replacement: this._wrapTransaction(tx),
                                                hash: transactionHash,
                                                receipt
                                            }));
                                            return;
                                        }
                                    }
                                    scannedBlock++;
                                }
                            }
                            if (done) {
                                return;
                            }
                            this.once("block", replaceHandler);
                        }), (error) => {
                            if (done) {
                                return;
                            }
                            this.once("block", replaceHandler);
                        });
                    });
                    if (done) {
                        return;
                    }
                    this.once("block", replaceHandler);
                    cancelFuncs.push(() => {
                        this.removeListener("block", replaceHandler);
                    });
                }
                if (typeof (timeout) === "number" && timeout > 0) {
                    const timer = setTimeout(() => {
                        if (alreadyDone()) {
                            return;
                        }
                        reject(logger$3.makeError("timeout exceeded", Logger.errors.TIMEOUT, { timeout: timeout }));
                    }, timeout);
                    if (timer.unref) {
                        timer.unref();
                    }
                    cancelFuncs.push(() => { clearTimeout(timer); });
                }
            });
        });
    }
    getBlockNumber() {
        return __awaiter$1(this, void 0, void 0, function* () {
            return this._getInternalBlockNumber(0);
        });
    }
    getGasPrice() {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const result = yield this.perform("getGasPrice", {});
            try {
                return BigNumber.from(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "getGasPrice",
                    result, error
                });
            }
        });
    }
    getBalance(addressOrName, blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getBalance", params);
            try {
                return BigNumber.from(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "getBalance",
                    params, result, error
                });
            }
        });
    }
    getTransactionCount(addressOrName, blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getTransactionCount", params);
            try {
                return BigNumber.from(result).toNumber();
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "getTransactionCount",
                    params, result, error
                });
            }
        });
    }
    getCode(addressOrName, blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("getCode", params);
            try {
                return hexlify(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "getCode",
                    params, result, error
                });
            }
        });
    }
    getStorageAt(addressOrName, position, blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                address: this._getAddress(addressOrName),
                blockTag: this._getBlockTag(blockTag),
                position: Promise.resolve(position).then((p) => hexValue(p))
            });
            const result = yield this.perform("getStorageAt", params);
            try {
                return hexlify(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "getStorageAt",
                    params, result, error
                });
            }
        });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash, startBlock) {
        if (hash != null && hexDataLength(hash) !== 32) {
            throw new Error("invalid response - sendTransaction");
        }
        const result = tx;
        // Check the hash we expect is the same as the hash the server reported
        if (hash != null && tx.hash !== hash) {
            logger$3.throwError("Transaction hash mismatch from Provider.sendTransaction.", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });
        }
        result.wait = (confirms, timeout) => __awaiter$1(this, void 0, void 0, function* () {
            if (confirms == null) {
                confirms = 1;
            }
            if (timeout == null) {
                timeout = 0;
            }
            // Get the details to detect replacement
            let replacement = undefined;
            if (confirms !== 0 && startBlock != null) {
                replacement = {
                    data: tx.data,
                    from: tx.from,
                    nonce: tx.nonce,
                    to: tx.to,
                    value: tx.value,
                    startBlock
                };
            }
            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
            if (receipt == null && confirms === 0) {
                return null;
            }
            // No longer pending, allow the polling loop to garbage collect this
            this._emitted["t:" + tx.hash] = receipt.blockNumber;
            if (receipt.status === 0) {
                logger$3.throwError("transaction failed", Logger.errors.CALL_EXCEPTION, {
                    transactionHash: tx.hash,
                    transaction: tx,
                    receipt: receipt
                });
            }
            return receipt;
        });
        return result;
    }
    sendTransaction(signedTransaction) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));
            const tx = this.formatter.transaction(signedTransaction);
            if (tx.confirmations == null) {
                tx.confirmations = 0;
            }
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            try {
                const hash = yield this.perform("sendTransaction", { signedTransaction: hexTx });
                return this._wrapTransaction(tx, hash, blockNumber);
            }
            catch (error) {
                error.transaction = tx;
                error.transactionHash = tx.hash;
                throw error;
            }
        });
    }
    _getTransactionRequest(transaction) {
        return __awaiter$1(this, void 0, void 0, function* () {
            const values = yield transaction;
            const tx = {};
            ["from", "to"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));
            });
            ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));
            });
            ["type"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));
            });
            if (values.accessList) {
                tx.accessList = this.formatter.accessList(values.accessList);
            }
            ["data"].forEach((key) => {
                if (values[key] == null) {
                    return;
                }
                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));
            });
            return this.formatter.transactionRequest(yield resolveProperties(tx));
        });
    }
    _getFilter(filter) {
        return __awaiter$1(this, void 0, void 0, function* () {
            filter = yield filter;
            const result = {};
            if (filter.address != null) {
                result.address = this._getAddress(filter.address);
            }
            ["blockHash", "topics"].forEach((key) => {
                if (filter[key] == null) {
                    return;
                }
                result[key] = filter[key];
            });
            ["fromBlock", "toBlock"].forEach((key) => {
                if (filter[key] == null) {
                    return;
                }
                result[key] = this._getBlockTag(filter[key]);
            });
            return this.formatter.filter(yield resolveProperties(result));
        });
    }
    call(transaction, blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                transaction: this._getTransactionRequest(transaction),
                blockTag: this._getBlockTag(blockTag)
            });
            const result = yield this.perform("call", params);
            try {
                return hexlify(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "call",
                    params, result, error
                });
            }
        });
    }
    estimateGas(transaction) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({
                transaction: this._getTransactionRequest(transaction)
            });
            const result = yield this.perform("estimateGas", params);
            try {
                return BigNumber.from(result);
            }
            catch (error) {
                return logger$3.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
                    method: "estimateGas",
                    params, result, error
                });
            }
        });
    }
    _getAddress(addressOrName) {
        return __awaiter$1(this, void 0, void 0, function* () {
            addressOrName = yield addressOrName;
            if (typeof (addressOrName) !== "string") {
                logger$3.throwArgumentError("invalid address or ENS name", "name", addressOrName);
            }
            const address = yield this.resolveName(addressOrName);
            if (address == null) {
                logger$3.throwError("ENS name not configured", Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: `resolveName(${JSON.stringify(addressOrName)})`
                });
            }
            return address;
        });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            blockHashOrBlockTag = yield blockHashOrBlockTag;
            // If blockTag is a number (not "latest", etc), this is the block number
            let blockNumber = -128;
            const params = {
                includeTransactions: !!includeTransactions
            };
            if (isHexString(blockHashOrBlockTag, 32)) {
                params.blockHash = blockHashOrBlockTag;
            }
            else {
                try {
                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
                    if (isHexString(params.blockTag)) {
                        blockNumber = parseInt(params.blockTag.substring(2), 16);
                    }
                }
                catch (error) {
                    logger$3.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
                }
            }
            return poll(() => __awaiter$1(this, void 0, void 0, function* () {
                const block = yield this.perform("getBlock", params);
                // Block was not found
                if (block == null) {
                    // For blockhashes, if we didn't say it existed, that blockhash may
                    // not exist. If we did see it though, perhaps from a log, we know
                    // it exists, and this node is just not caught up yet.
                    if (params.blockHash != null) {
                        if (this._emitted["b:" + params.blockHash] == null) {
                            return null;
                        }
                    }
                    // For block tags, if we are asking for a future block, we return null
                    if (params.blockTag != null) {
                        if (blockNumber > this._emitted.block) {
                            return null;
                        }
                    }
                    // Retry on the next block
                    return undefined;
                }
                // Add transactions
                if (includeTransactions) {
                    let blockNumber = null;
                    for (let i = 0; i < block.transactions.length; i++) {
                        const tx = block.transactions[i];
                        if (tx.blockNumber == null) {
                            tx.confirmations = 0;
                        }
                        else if (tx.confirmations == null) {
                            if (blockNumber == null) {
                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                            }
                            // Add the confirmations using the fast block number (pessimistic)
                            let confirmations = (blockNumber - tx.blockNumber) + 1;
                            if (confirmations <= 0) {
                                confirmations = 1;
                            }
                            tx.confirmations = confirmations;
                        }
                    }
                    const blockWithTxs = this.formatter.blockWithTransactions(block);
                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));
                    return blockWithTxs;
                }
                return this.formatter.block(block);
            }), { oncePoll: this });
        });
    }
    getBlock(blockHashOrBlockTag) {
        return (this._getBlock(blockHashOrBlockTag, false));
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
        return (this._getBlock(blockHashOrBlockTag, true));
    }
    getTransaction(transactionHash) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = { transactionHash: this.formatter.hash(transactionHash, true) };
            return poll(() => __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.perform("getTransaction", params);
                if (result == null) {
                    if (this._emitted["t:" + transactionHash] == null) {
                        return null;
                    }
                    return undefined;
                }
                const tx = this.formatter.transactionResponse(result);
                if (tx.blockNumber == null) {
                    tx.confirmations = 0;
                }
                else if (tx.confirmations == null) {
                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    // Add the confirmations using the fast block number (pessimistic)
                    let confirmations = (blockNumber - tx.blockNumber) + 1;
                    if (confirmations <= 0) {
                        confirmations = 1;
                    }
                    tx.confirmations = confirmations;
                }
                return this._wrapTransaction(tx);
            }), { oncePoll: this });
        });
    }
    getTransactionReceipt(transactionHash) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            transactionHash = yield transactionHash;
            const params = { transactionHash: this.formatter.hash(transactionHash, true) };
            return poll(() => __awaiter$1(this, void 0, void 0, function* () {
                const result = yield this.perform("getTransactionReceipt", params);
                if (result == null) {
                    if (this._emitted["t:" + transactionHash] == null) {
                        return null;
                    }
                    return undefined;
                }
                // "geth-etc" returns receipts before they are ready
                if (result.blockHash == null) {
                    return undefined;
                }
                const receipt = this.formatter.receipt(result);
                if (receipt.blockNumber == null) {
                    receipt.confirmations = 0;
                }
                else if (receipt.confirmations == null) {
                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                    // Add the confirmations using the fast block number (pessimistic)
                    let confirmations = (blockNumber - receipt.blockNumber) + 1;
                    if (confirmations <= 0) {
                        confirmations = 1;
                    }
                    receipt.confirmations = confirmations;
                }
                return receipt;
            }), { oncePoll: this });
        });
    }
    getLogs(filter) {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const params = yield resolveProperties({ filter: this._getFilter(filter) });
            const logs = yield this.perform("getLogs", params);
            logs.forEach((log) => {
                if (log.removed == null) {
                    log.removed = false;
                }
            });
            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
        });
    }
    getEtherPrice() {
        return __awaiter$1(this, void 0, void 0, function* () {
            yield this.getNetwork();
            return this.perform("getEtherPrice", {});
        });
    }
    _getBlockTag(blockTag) {
        return __awaiter$1(this, void 0, void 0, function* () {
            blockTag = yield blockTag;
            if (typeof (blockTag) === "number" && blockTag < 0) {
                if (blockTag % 1) {
                    logger$3.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
                }
                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                blockNumber += blockTag;
                if (blockNumber < 0) {
                    blockNumber = 0;
                }
                return this.formatter.blockTag(blockNumber);
            }
            return this.formatter.blockTag(blockTag);
        });
    }
    getResolver(name) {
        return __awaiter$1(this, void 0, void 0, function* () {
            try {
                const address = yield this._getResolver(name);
                if (address == null) {
                    return null;
                }
                return new Resolver(this, address, name);
            }
            catch (error) {
                if (error.code === Logger.errors.CALL_EXCEPTION) {
                    return null;
                }
                throw error;
            }
        });
    }
    _getResolver(name) {
        return __awaiter$1(this, void 0, void 0, function* () {
            // Get the resolver from the blockchain
            const network = yield this.getNetwork();
            // No ENS...
            if (!network.ensAddress) {
                logger$3.throwError("network does not support ENS", Logger.errors.UNSUPPORTED_OPERATION, { operation: "ENS", network: network.name });
            }
            // keccak256("resolver(bytes32)")
            const transaction = {
                to: network.ensAddress,
                data: ("0x0178b8bf" + namehash(name).substring(2))
            };
            try {
                return this.formatter.callAddress(yield this.call(transaction));
            }
            catch (error) {
                if (error.code === Logger.errors.CALL_EXCEPTION) {
                    return null;
                }
                throw error;
            }
        });
    }
    resolveName(name) {
        return __awaiter$1(this, void 0, void 0, function* () {
            name = yield name;
            // If it is already an address, nothing to resolve
            try {
                return Promise.resolve(this.formatter.address(name));
            }
            catch (error) {
                // If is is a hexstring, the address is bad (See #694)
                if (isHexString(name)) {
                    throw error;
                }
            }
            if (typeof (name) !== "string") {
                logger$3.throwArgumentError("invalid ENS name", "name", name);
            }
            // Get the addr from the resovler
            const resolver = yield this.getResolver(name);
            if (!resolver) {
                return null;
            }
            return yield resolver.getAddress();
        });
    }
    lookupAddress(address) {
        return __awaiter$1(this, void 0, void 0, function* () {
            address = yield address;
            address = this.formatter.address(address);
            const reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
            const resolverAddress = yield this._getResolver(reverseName);
            if (!resolverAddress) {
                return null;
            }
            // keccak("name(bytes32)")
            let bytes = arrayify(yield this.call({
                to: resolverAddress,
                data: ("0x691f3431" + namehash(reverseName).substring(2))
            }));
            // Strip off the dynamic string pointer (0x20)
            if (bytes.length < 32 || !BigNumber.from(bytes.slice(0, 32)).eq(32)) {
                return null;
            }
            bytes = bytes.slice(32);
            // Not a length-prefixed string
            if (bytes.length < 32) {
                return null;
            }
            // Get the length of the string (from the length-prefix)
            const length = BigNumber.from(bytes.slice(0, 32)).toNumber();
            bytes = bytes.slice(32);
            // Length longer than available data
            if (length > bytes.length) {
                return null;
            }
            const name = toUtf8String(bytes.slice(0, length));
            // Make sure the reverse record matches the foward record
            const addr = yield this.resolveName(name);
            if (addr != address) {
                return null;
            }
            return name;
        });
    }
    getAvatar(nameOrAddress) {
        return __awaiter$1(this, void 0, void 0, function* () {
            let resolver = null;
            if (isHexString(nameOrAddress)) {
                // Address; reverse lookup
                const address = this.formatter.address(nameOrAddress);
                const reverseName = address.substring(2).toLowerCase() + ".addr.reverse";
                const resolverAddress = yield this._getResolver(reverseName);
                if (!resolverAddress) {
                    return null;
                }
                resolver = new Resolver(this, resolverAddress, "_", address);
            }
            else {
                // ENS name; forward lookup
                resolver = yield this.getResolver(nameOrAddress);
                if (!resolver) {
                    return null;
                }
            }
            const avatar = yield resolver.getAvatar();
            if (avatar == null) {
                return null;
            }
            return avatar.url;
        });
    }
    perform(method, params) {
        return logger$3.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
    }
    _startEvent(event) {
        this.polling = (this._events.filter((e) => e.pollable()).length > 0);
    }
    _stopEvent(event) {
        this.polling = (this._events.filter((e) => e.pollable()).length > 0);
    }
    _addEventListener(eventName, listener, once) {
        const event = new Event(getEventTag(eventName), listener, once);
        this._events.push(event);
        this._startEvent(event);
        return this;
    }
    on(eventName, listener) {
        return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
        return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
        let result = false;
        let stopped = [];
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event) => {
            if (event.tag !== eventTag) {
                return true;
            }
            setTimeout(() => {
                event.listener.apply(this, args);
            }, 0);
            result = true;
            if (event.once) {
                stopped.push(event);
                return false;
            }
            return true;
        });
        stopped.forEach((event) => { this._stopEvent(event); });
        return result;
    }
    listenerCount(eventName) {
        if (!eventName) {
            return this._events.length;
        }
        let eventTag = getEventTag(eventName);
        return this._events.filter((event) => {
            return (event.tag === eventTag);
        }).length;
    }
    listeners(eventName) {
        if (eventName == null) {
            return this._events.map((event) => event.listener);
        }
        let eventTag = getEventTag(eventName);
        return this._events
            .filter((event) => (event.tag === eventTag))
            .map((event) => event.listener);
    }
    off(eventName, listener) {
        if (listener == null) {
            return this.removeAllListeners(eventName);
        }
        const stopped = [];
        let found = false;
        let eventTag = getEventTag(eventName);
        this._events = this._events.filter((event) => {
            if (event.tag !== eventTag || event.listener != listener) {
                return true;
            }
            if (found) {
                return true;
            }
            found = true;
            stopped.push(event);
            return false;
        });
        stopped.forEach((event) => { this._stopEvent(event); });
        return this;
    }
    removeAllListeners(eventName) {
        let stopped = [];
        if (eventName == null) {
            stopped = this._events;
            this._events = [];
        }
        else {
            const eventTag = getEventTag(eventName);
            this._events = this._events.filter((event) => {
                if (event.tag !== eventTag) {
                    return true;
                }
                stopped.push(event);
                return false;
            });
        }
        stopped.forEach((event) => { this._stopEvent(event); });
        return this;
    }
}

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
const logger$2 = new Logger(version$2);
const errorGas = ["call", "estimateGas"];
function checkError(method, error, params) {
    // Undo the "convenience" some nodes are attempting to prevent backwards
    // incompatibility; maybe for v6 consider forwarding reverts as errors
    if (method === "call" && error.code === Logger.errors.SERVER_ERROR) {
        const e = error.error;
        if (e && e.message.match("reverted") && isHexString(e.data)) {
            return e.data;
        }
        logger$2.throwError("missing revert data in call exception", Logger.errors.CALL_EXCEPTION, {
            error, data: "0x"
        });
    }
    let message = error.message;
    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === "string") {
        message = error.error.message;
    }
    else if (typeof (error.body) === "string") {
        message = error.body;
    }
    else if (typeof (error.responseText) === "string") {
        message = error.responseText;
    }
    message = (message || "").toLowerCase();
    const transaction = params.transaction || params.signedTransaction;
    // "insufficient funds for gas * price + value + cost(data)"
    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {
        logger$2.throwError("insufficient funds for intrinsic transaction cost", Logger.errors.INSUFFICIENT_FUNDS, {
            error, method, transaction
        });
    }
    // "nonce too low"
    if (message.match(/nonce too low/)) {
        logger$2.throwError("nonce has already been used", Logger.errors.NONCE_EXPIRED, {
            error, method, transaction
        });
    }
    // "replacement transaction underpriced"
    if (message.match(/replacement transaction underpriced/)) {
        logger$2.throwError("replacement fee too low", Logger.errors.REPLACEMENT_UNDERPRICED, {
            error, method, transaction
        });
    }
    // "replacement transaction underpriced"
    if (message.match(/only replay-protected/)) {
        logger$2.throwError("legacy pre-eip-155 transactions not supported", Logger.errors.UNSUPPORTED_OPERATION, {
            error, method, transaction
        });
    }
    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {
        logger$2.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
            error, method, transaction
        });
    }
    throw error;
}
function timer(timeout) {
    return new Promise(function (resolve) {
        setTimeout(resolve, timeout);
    });
}
function getResult(payload) {
    if (payload.error) {
        // @TODO: not any
        const error = new Error(payload.error.message);
        error.code = payload.error.code;
        error.data = payload.error.data;
        throw error;
    }
    return payload.result;
}
function getLowerCase(value) {
    if (value) {
        return value.toLowerCase();
    }
    return value;
}
const _constructorGuard = {};
class JsonRpcSigner extends Signer {
    constructor(constructorGuard, provider, addressOrIndex) {
        logger$2.checkNew(new.target, JsonRpcSigner);
        super();
        if (constructorGuard !== _constructorGuard) {
            throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
        }
        defineReadOnly(this, "provider", provider);
        if (addressOrIndex == null) {
            addressOrIndex = 0;
        }
        if (typeof (addressOrIndex) === "string") {
            defineReadOnly(this, "_address", this.provider.formatter.address(addressOrIndex));
            defineReadOnly(this, "_index", null);
        }
        else if (typeof (addressOrIndex) === "number") {
            defineReadOnly(this, "_index", addressOrIndex);
            defineReadOnly(this, "_address", null);
        }
        else {
            logger$2.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
        }
    }
    connect(provider) {
        return logger$2.throwError("cannot alter JSON-RPC Signer connection", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "connect"
        });
    }
    connectUnchecked() {
        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);
    }
    getAddress() {
        if (this._address) {
            return Promise.resolve(this._address);
        }
        return this.provider.send("eth_accounts", []).then((accounts) => {
            if (accounts.length <= this._index) {
                logger$2.throwError("unknown account #" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {
                    operation: "getAddress"
                });
            }
            return this.provider.formatter.address(accounts[this._index]);
        });
    }
    sendUncheckedTransaction(transaction) {
        transaction = shallowCopy(transaction);
        const fromAddress = this.getAddress().then((address) => {
            if (address) {
                address = address.toLowerCase();
            }
            return address;
        });
        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user
        // wishes to use this, it is easy to specify explicitly, otherwise
        // we look it up for them.
        if (transaction.gasLimit == null) {
            const estimate = shallowCopy(transaction);
            estimate.from = fromAddress;
            transaction.gasLimit = this.provider.estimateGas(estimate);
        }
        if (transaction.to != null) {
            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {
                if (to == null) {
                    return null;
                }
                const address = yield this.provider.resolveName(to);
                if (address == null) {
                    logger$2.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
                }
                return address;
            }));
        }
        return resolveProperties({
            tx: resolveProperties(transaction),
            sender: fromAddress
        }).then(({ tx, sender }) => {
            if (tx.from != null) {
                if (tx.from.toLowerCase() !== sender) {
                    logger$2.throwArgumentError("from address mismatch", "transaction", transaction);
                }
            }
            else {
                tx.from = sender;
            }
            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });
            return this.provider.send("eth_sendTransaction", [hexTx]).then((hash) => {
                return hash;
            }, (error) => {
                return checkError("sendTransaction", error, hexTx);
            });
        });
    }
    signTransaction(transaction) {
        return logger$2.throwError("signing transactions is unsupported", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "signTransaction"
        });
    }
    sendTransaction(transaction) {
        return __awaiter(this, void 0, void 0, function* () {
            // This cannot be mined any earlier than any recent block
            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
            // Send the transaction
            const hash = yield this.sendUncheckedTransaction(transaction);
            try {
                // Unfortunately, JSON-RPC only provides and opaque transaction hash
                // for a response, and we need the actual transaction, so we poll
                // for it; it should show up very quickly
                return yield poll(() => __awaiter(this, void 0, void 0, function* () {
                    const tx = yield this.provider.getTransaction(hash);
                    if (tx === null) {
                        return undefined;
                    }
                    return this.provider._wrapTransaction(tx, hash, blockNumber);
                }), { oncePoll: this.provider });
            }
            catch (error) {
                error.transactionHash = hash;
                throw error;
            }
        });
    }
    signMessage(message) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = ((typeof (message) === "string") ? toUtf8Bytes(message) : message);
            const address = yield this.getAddress();
            return yield this.provider.send("personal_sign", [hexlify(data), address.toLowerCase()]);
        });
    }
    _legacySignMessage(message) {
        return __awaiter(this, void 0, void 0, function* () {
            const data = ((typeof (message) === "string") ? toUtf8Bytes(message) : message);
            const address = yield this.getAddress();
            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign
            return yield this.provider.send("eth_sign", [address.toLowerCase(), hexlify(data)]);
        });
    }
    _signTypedData(domain, types, value) {
        return __awaiter(this, void 0, void 0, function* () {
            // Populate any ENS names (in-place)
            const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {
                return this.provider.resolveName(name);
            });
            const address = yield this.getAddress();
            return yield this.provider.send("eth_signTypedData_v4", [
                address.toLowerCase(),
                JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))
            ]);
        });
    }
    unlock(password) {
        return __awaiter(this, void 0, void 0, function* () {
            const provider = this.provider;
            const address = yield this.getAddress();
            return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
        });
    }
}
class UncheckedJsonRpcSigner extends JsonRpcSigner {
    sendTransaction(transaction) {
        return this.sendUncheckedTransaction(transaction).then((hash) => {
            return {
                hash: hash,
                nonce: null,
                gasLimit: null,
                gasPrice: null,
                data: null,
                value: null,
                chainId: null,
                confirmations: 0,
                from: null,
                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }
            };
        });
    }
}
const allowedTransactionKeys = {
    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,
    type: true, accessList: true,
    maxFeePerGas: true, maxPriorityFeePerGas: true
};
class JsonRpcProvider extends BaseProvider {
    constructor(url, network) {
        logger$2.checkNew(new.target, JsonRpcProvider);
        let networkOrReady = network;
        // The network is unknown, query the JSON-RPC for it
        if (networkOrReady == null) {
            networkOrReady = new Promise((resolve, reject) => {
                setTimeout(() => {
                    this.detectNetwork().then((network) => {
                        resolve(network);
                    }, (error) => {
                        reject(error);
                    });
                }, 0);
            });
        }
        super(networkOrReady);
        // Default URL
        if (!url) {
            url = getStatic(this.constructor, "defaultUrl")();
        }
        if (typeof (url) === "string") {
            defineReadOnly(this, "connection", Object.freeze({
                url: url
            }));
        }
        else {
            defineReadOnly(this, "connection", Object.freeze(shallowCopy(url)));
        }
        this._nextId = 42;
    }
    get _cache() {
        if (this._eventLoopCache == null) {
            this._eventLoopCache = {};
        }
        return this._eventLoopCache;
    }
    static defaultUrl() {
        return "http:/\/localhost:8545";
    }
    detectNetwork() {
        if (!this._cache["detectNetwork"]) {
            this._cache["detectNetwork"] = this._uncachedDetectNetwork();
            // Clear this cache at the beginning of the next event loop
            setTimeout(() => {
                this._cache["detectNetwork"] = null;
            }, 0);
        }
        return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
        return __awaiter(this, void 0, void 0, function* () {
            yield timer(0);
            let chainId = null;
            try {
                chainId = yield this.send("eth_chainId", []);
            }
            catch (error) {
                try {
                    chainId = yield this.send("net_version", []);
                }
                catch (error) { }
            }
            if (chainId != null) {
                const getNetwork = getStatic(this.constructor, "getNetwork");
                try {
                    return getNetwork(BigNumber.from(chainId).toNumber());
                }
                catch (error) {
                    return logger$2.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
                        chainId: chainId,
                        event: "invalidNetwork",
                        serverError: error
                    });
                }
            }
            return logger$2.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
                event: "noNetwork"
            });
        });
    }
    getSigner(addressOrIndex) {
        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
        return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
        return this.send("eth_accounts", []).then((accounts) => {
            return accounts.map((a) => this.formatter.address(a));
        });
    }
    send(method, params) {
        const request = {
            method: method,
            params: params,
            id: (this._nextId++),
            jsonrpc: "2.0"
        };
        this.emit("debug", {
            action: "request",
            request: deepCopy(request),
            provider: this
        });
        // We can expand this in the future to any call, but for now these
        // are the biggest wins and do not require any serializing parameters.
        const cache = (["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0);
        if (cache && this._cache[method]) {
            return this._cache[method];
        }
        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {
            this.emit("debug", {
                action: "response",
                request: request,
                response: result,
                provider: this
            });
            return result;
        }, (error) => {
            this.emit("debug", {
                action: "response",
                error: error,
                request: request,
                provider: this
            });
            throw error;
        });
        // Cache the fetch, but clear it on the next event loop
        if (cache) {
            this._cache[method] = result;
            setTimeout(() => {
                this._cache[method] = null;
            }, 0);
        }
        return result;
    }
    prepareRequest(method, params) {
        switch (method) {
            case "getBlockNumber":
                return ["eth_blockNumber", []];
            case "getGasPrice":
                return ["eth_gasPrice", []];
            case "getBalance":
                return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];
            case "getTransactionCount":
                return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];
            case "getCode":
                return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];
            case "getStorageAt":
                return ["eth_getStorageAt", [getLowerCase(params.address), params.position, params.blockTag]];
            case "sendTransaction":
                return ["eth_sendRawTransaction", [params.signedTransaction]];
            case "getBlock":
                if (params.blockTag) {
                    return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
                }
                else if (params.blockHash) {
                    return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
                }
                return null;
            case "getTransaction":
                return ["eth_getTransactionByHash", [params.transactionHash]];
            case "getTransactionReceipt":
                return ["eth_getTransactionReceipt", [params.transactionHash]];
            case "call": {
                const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
                return ["eth_call", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];
            }
            case "estimateGas": {
                const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
                return ["eth_estimateGas", [hexlifyTransaction(params.transaction, { from: true })]];
            }
            case "getLogs":
                if (params.filter && params.filter.address != null) {
                    params.filter.address = getLowerCase(params.filter.address);
                }
                return ["eth_getLogs", [params.filter]];
        }
        return null;
    }
    perform(method, params) {
        return __awaiter(this, void 0, void 0, function* () {
            // Legacy networks do not like the type field being passed along (which
            // is fair), so we delete type if it is 0 and a non-EIP-1559 network
            if (method === "call" || method === "estimateGas") {
                const tx = params.transaction;
                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {
                    // If there are no EIP-1559 properties, it might be non-EIP-a559
                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
                        const feeData = yield this.getFeeData();
                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                            // Network doesn't know about EIP-1559 (and hence type)
                            params = shallowCopy(params);
                            params.transaction = shallowCopy(tx);
                            delete params.transaction.type;
                        }
                    }
                }
            }
            const args = this.prepareRequest(method, params);
            if (args == null) {
                logger$2.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
            }
            try {
                return yield this.send(args[0], args[1]);
            }
            catch (error) {
                return checkError(method, error, params);
            }
        });
    }
    _startEvent(event) {
        if (event.tag === "pending") {
            this._startPending();
        }
        super._startEvent(event);
    }
    _startPending() {
        if (this._pendingFilter != null) {
            return;
        }
        const self = this;
        const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
        this._pendingFilter = pendingFilter;
        pendingFilter.then(function (filterId) {
            function poll() {
                self.send("eth_getFilterChanges", [filterId]).then(function (hashes) {
                    if (self._pendingFilter != pendingFilter) {
                        return null;
                    }
                    let seq = Promise.resolve();
                    hashes.forEach(function (hash) {
                        // @TODO: This should be garbage collected at some point... How? When?
                        self._emitted["t:" + hash.toLowerCase()] = "pending";
                        seq = seq.then(function () {
                            return self.getTransaction(hash).then(function (tx) {
                                self.emit("pending", tx);
                                return null;
                            });
                        });
                    });
                    return seq.then(function () {
                        return timer(1000);
                    });
                }).then(function () {
                    if (self._pendingFilter != pendingFilter) {
                        self.send("eth_uninstallFilter", [filterId]);
                        return;
                    }
                    setTimeout(function () { poll(); }, 0);
                    return null;
                }).catch((error) => { });
            }
            poll();
            return filterId;
        }).catch((error) => { });
    }
    _stopEvent(event) {
        if (event.tag === "pending" && this.listenerCount("pending") === 0) {
            this._pendingFilter = null;
        }
        super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
        // Check only allowed properties are given
        const allowed = shallowCopy(allowedTransactionKeys);
        if (allowExtra) {
            for (const key in allowExtra) {
                if (allowExtra[key]) {
                    allowed[key] = true;
                }
            }
        }
        checkProperties(transaction, allowed);
        const result = {};
        // Some nodes (INFURA ropsten; INFURA mainnet is fine) do not like leading zeros.
        ["gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function (key) {
            if (transaction[key] == null) {
                return;
            }
            const value = hexValue(transaction[key]);
            if (key === "gasLimit") {
                key = "gas";
            }
            result[key] = value;
        });
        ["from", "to", "data"].forEach(function (key) {
            if (transaction[key] == null) {
                return;
            }
            result[key] = hexlify(transaction[key]);
        });
        if (transaction.accessList) {
            result["accessList"] = accessListify(transaction.accessList);
        }
        return result;
    }
}

const logger$1 = new Logger(version$2);
let _nextId = 1;
function buildWeb3LegacyFetcher(provider, sendFunc) {
    const fetcher = "Web3LegacyFetcher";
    return function (method, params) {
        const request = {
            method: method,
            params: params,
            id: (_nextId++),
            jsonrpc: "2.0"
        };
        return new Promise((resolve, reject) => {
            this.emit("debug", {
                action: "request",
                fetcher,
                request: deepCopy(request),
                provider: this
            });
            sendFunc(request, (error, response) => {
                if (error) {
                    this.emit("debug", {
                        action: "response",
                        fetcher,
                        error,
                        request,
                        provider: this
                    });
                    return reject(error);
                }
                this.emit("debug", {
                    action: "response",
                    fetcher,
                    request,
                    response,
                    provider: this
                });
                if (response.error) {
                    const error = new Error(response.error.message);
                    error.code = response.error.code;
                    error.data = response.error.data;
                    return reject(error);
                }
                resolve(response.result);
            });
        });
    };
}
function buildEip1193Fetcher(provider) {
    return function (method, params) {
        if (params == null) {
            params = [];
        }
        const request = { method, params };
        this.emit("debug", {
            action: "request",
            fetcher: "Eip1193Fetcher",
            request: deepCopy(request),
            provider: this
        });
        return provider.request(request).then((response) => {
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                response,
                provider: this
            });
            return response;
        }, (error) => {
            this.emit("debug", {
                action: "response",
                fetcher: "Eip1193Fetcher",
                request,
                error,
                provider: this
            });
            throw error;
        });
    };
}
class Web3Provider extends JsonRpcProvider {
    constructor(provider, network) {
        logger$1.checkNew(new.target, Web3Provider);
        if (provider == null) {
            logger$1.throwArgumentError("missing provider", "provider", provider);
        }
        let path = null;
        let jsonRpcFetchFunc = null;
        let subprovider = null;
        if (typeof (provider) === "function") {
            path = "unknown:";
            jsonRpcFetchFunc = provider;
        }
        else {
            path = provider.host || provider.path || "";
            if (!path && provider.isMetaMask) {
                path = "metamask";
            }
            subprovider = provider;
            if (provider.request) {
                if (path === "") {
                    path = "eip-1193:";
                }
                jsonRpcFetchFunc = buildEip1193Fetcher(provider);
            }
            else if (provider.sendAsync) {
                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
            }
            else if (provider.send) {
                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
            }
            else {
                logger$1.throwArgumentError("unsupported provider", "provider", provider);
            }
            if (!path) {
                path = "unknown:";
            }
        }
        super(path, network);
        defineReadOnly(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
        defineReadOnly(this, "provider", subprovider);
    }
    send(method, params) {
        return this.jsonRpcFetchFunc(method, params);
    }
}

const version$1 = "units/5.5.0";

const logger = new Logger(version$1);
const names = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether",
];
function formatUnits(value, unitName) {
    if (typeof (unitName) === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return formatFixed(value, (unitName != null) ? unitName : 18);
}
function parseUnits(value, unitName) {
    if (typeof (value) !== "string") {
        logger.throwArgumentError("value must be a string", "value", value);
    }
    if (typeof (unitName) === "string") {
        const index = names.indexOf(unitName);
        if (index !== -1) {
            unitName = 3 * index;
        }
    }
    return parseFixed(value, (unitName != null) ? unitName : 18);
}

const version = "ethers/5.5.4";

new Logger(version);

var testNetworks = {
    883: {
        name: "883",
        color: "#3099f2",
        chainId: 883,
        rpcUrl: "http://localhost:8545",
        blockTime: 5000,
        iconUrl: "./noChain.png",
        blockDelay: 15,
        symbol: "",
        blockExplorerUrl: "",
        tokenSymbolList: ["USDT"],
    },
    884: {
        name: "884",
        color: "#3099f2",
        chainId: 884,
        rpcUrl: "http://localhost:8547",
        blockTime: 5000,
        iconUrl: "./noChain.png",
        blockDelay: 15,
        symbol: "",
        blockExplorerUrl: "",
        tokenSymbolList: ["USDT"],
    },
    localhost: {
        name: "--",
        color: "#666666",
        chainId: 31337,
        rpcUrl: "http://localhost:8545",
        blockTime: 3000,
        iconUrl: "./defaultIcon.svg",
        blockDelay: 4,
        symbol: "ETH",
        blockExplorerUrl: "",
        tokenSymbolList: ["USDT"],
    },
    bscTest: {
        name: "BSC Testnet",
        color: "#7057ff",
        chainId: 97,
        rpcUrl: "https://data-seed-prebsc-1-s1.binance.org:8545",
        blockTime: 4000,
        iconUrl: "./bsc.png",
        blockDelay: 80,
        symbol: "BNB",
        blockExplorerUrl: "https://testnet.bscscan.com",
        tokenSymbolList: ["CELR", "USDT", "WETH", "MCB", "PSP", "PCE", "MELI"],
    },
    ropsten: {
        name: "Ropsten Testnet",
        color: "#ff4a8d",
        chainId: 3,
        rpcUrl: "https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",
        blockTime: 15000,
        iconUrl: "./ETH.png",
        blockDelay: 4,
        symbol: "ETH",
        blockExplorerUrl: "https://ropsten.etherscan.io",
        tokenSymbolList: ["CELR", "USDT", "WETH"],
    },
    goerli: {
        name: "Goerli Testnet",
        color: "#3099f2",
        chainId: 5,
        rpcUrl: "https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",
        blockTime: 15000,
        iconUrl: "./ETH.png",
        blockDelay: 4,
        symbol: "ETH",
        blockExplorerUrl: "https://goerli.etherscan.io",
        tokenSymbolList: [
            "CELR",
            "USDT",
            "WETH",
            "TCELR",
            "USDC",
            "DOMI",
            "MCB",
            "cUSD",
            "PSP",
        ],
        contractAddr: "0x358234B325EF9eA8115291A8b81b7d33A2Fa762D",
    },
    mainnet: {
        name: "Ethereum Mainnet",
        color: "#29b6af",
        chainId: 1,
        rpcUrl: "https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161",
        blockTime: 15000,
        iconUrl: "./ETH.png",
        blockDelay: 8,
        symbol: "ETH",
        blockExplorerUrl: "https://etherscan.io",
        tokenSymbolList: [
            "USDC",
            "USDT",
            "WETH",
            "BUSD",
            "DODO",
            "LYRA",
            "DOMI",
            "MCB",
            "IMX",
            "oneDODO",
            "OLO",
            "BOBA",
            "FRAX",
        ],
    },
    bsc: {
        name: "BSC",
        color: "#7057ff",
        chainId: 56,
        rpcUrl: "https://bsc-dataseed.binance.org",
        blockTime: 4000,
        iconUrl: "./bsc.png",
        blockDelay: 8,
        symbol: "BNB",
        blockExplorerUrl: "https://bscscan.com",
        tokenSymbolList: [
            "USDC",
            "USDT",
            "WETH",
            "BUSD",
            "DODO",
            "DOMI",
            "MCB",
            "cUSD",
            "oneDODO",
            "OLO",
            "FRAX",
        ],
    },
    polygon: {
        name: "Polygon (Matic)",
        color: "#3099f2",
        chainId: 137,
        rpcUrl: "https://polygon-rpc.com",
        blockTime: 4000,
        iconUrl: "./polygon.png",
        blockDelay: 80,
        symbol: "MATIC",
        blockExplorerUrl: "https://polygonscan.com",
        tokenSymbolList: ["USDC", "USDT", "WETH", "IMX"],
    },
    arbitrum: {
        name: "Arbitrum",
        color: "#ff4a8d",
        chainId: 42161,
        rpcUrl: "https://arb1.arbitrum.io/rpc",
        blockTime: 4000,
        iconUrl: "./arbitrum.png",
        blockDelay: 8,
        symbol: "ETH",
        blockExplorerUrl: "https://arbiscan.io",
        tokenSymbolList: ["USDC", "USDT", "WETH", "DODO", "MCB", "IMX"],
    },
    Avalanche: {
        name: "Avalanche",
        color: "#3099f2",
        chainId: 43114,
        rpcUrl: "https://api.avax.network/ext/bc/C/rpc",
        blockTime: 5000,
        iconUrl: "./avalanche.png",
        blockDelay: 15,
        symbol: "AVAX",
        blockExplorerUrl: "https://snowtrace.io",
        tokenSymbolList: ["USDC", "USDT", "WETH", "IMX"],
    },
    Optimism: {
        name: "Optimism",
        color: "#3099f2",
        chainId: 10,
        rpcUrl: "https://mainnet.optimism.io",
        blockTime: 5000,
        iconUrl: "./optimism.png",
        blockDelay: 8,
        symbol: "ETH",
        blockExplorerUrl: "https://optimistic.etherscan.io",
        tokenSymbolList: ["USDC", "USDT", "WETH", "LYRA"],
    },
    OptimisticKovan: {
        name: "Optimistic Kovan",
        color: "#3099f2",
        chainId: 69,
        rpcUrl: "https://kovan.optimism.io",
        blockTime: 5000,
        iconUrl: "./optimism.png",
        blockDelay: 8,
        symbol: "ETH",
        blockExplorerUrl: "https://kovan-optimistic.etherscan.io",
        tokenSymbolList: ["CELR", "USDT", "WETH"],
    },
    Fantom: {
        name: "Fantom",
        color: "#3099f2",
        chainId: 250,
        rpcUrl: "https://rpc.ftm.tools",
        blockTime: 5000,
        iconUrl: "./fantom.png",
        blockDelay: 6,
        symbol: "FTM",
        blockExplorerUrl: "https://ftmscan.com",
        tokenSymbolList: ["USDC", "USDT", "WETH"],
    },
    FantomTestnet: {
        name: "Fantom Testnet",
        color: "#3099f2",
        chainId: 4002,
        rpcUrl: "https://rpc.testnet.fantom.network",
        blockTime: 5000,
        iconUrl: "./fantom.png",
        blockDelay: 6,
        symbol: "FTM",
        blockExplorerUrl: "https://testnet.ftmscan.com",
        tokenSymbolList: ["CELR", "USDT", "TCELR", "WETH"],
    },
    BoBa: {
        name: "Boba Network",
        color: "#3099f2",
        chainId: 288,
        rpcUrl: "https://mainnet.boba.network",
        blockTime: 10000,
        iconUrl: "./boba.png",
        blockDelay: 8,
        symbol: "ETH",
        blockExplorerUrl: "https://blockexplorer.boba.network",
        tokenSymbolList: ["USDC", "OLO", "BOBA"],
    },
    CeloTestnet: {
        name: "Celo Testnet",
        color: "#3099f2",
        chainId: 44787,
        rpcUrl: "https://alfajores-forno.celo-testnet.org",
        blockTime: 10000,
        iconUrl: "./celo.png",
        blockDelay: 8,
        symbol: "CELO",
        blockExplorerUrl: "https://alfajores-blockscout.celo-testnet.org",
        tokenSymbolList: ["USDC", "cUSD"],
    },
    Celo: {
        name: "Celo",
        color: "#3099f2",
        chainId: 42220,
        rpcUrl: "https://forno.celo.org",
        blockTime: 10000,
        iconUrl: "./celo.png",
        blockDelay: 8,
        symbol: "CELO",
        blockExplorerUrl: "https://explorer.celo.org",
        tokenSymbolList: ["USDC", "USDT", "cUSD"],
    },
    OKExChainTestnet: {
        name: "OKExChain Testnet",
        color: "#3099f2",
        chainId: 65,
        rpcUrl: "https://exchaintestrpc.okex.org",
        blockTime: 10000,
        iconUrl: "./OKchain.png",
        blockDelay: 8,
        symbol: "PCE",
        blockExplorerUrl: "https://explorer.celo.org",
        tokenSymbolList: ["PCE", "MELI"],
    },
    MoonbaseAlpha: {
        name: "Moonbase Alpha",
        color: "#3099f2",
        chainId: 1287,
        rpcUrl: "https://rpc.api.moonbase.moonbeam.network",
        blockTime: 10000,
        iconUrl: "./moonriver.png",
        blockDelay: 8,
        symbol: "DEV",
        blockExplorerUrl: "https://moonbase-blockscout.testnet.moonbeam.network/",
        tokenSymbolList: ["USDC", "USDT", "WETH"],
    },
    REITestnet: {
        name: "REI Testnet",
        color: "#3099f2",
        chainId: 12357,
        rpcUrl: "https://rpc-testnet.rei.network",
        blockTime: 10000,
        iconUrl: "./GXChain.png",
        blockDelay: 8,
        symbol: "DEV",
        blockExplorerUrl: "https://scan-test.rei.network",
        tokenSymbolList: ["USDC"],
    },
    OasisTestnet: {
        name: "Emerald Paratime Testnet",
        color: "#3099f2",
        chainId: 42261,
        rpcUrl: "https://testnet.emerald.oasis.dev",
        blockTime: 10000,
        iconUrl: "./oasis.png",
        blockDelay: 8,
        symbol: "ROSE",
        blockExplorerUrl: "https://explorer.testnet.oasis.updev.si",
        tokenSymbolList: ["USDT"],
    },
};

var _format = "hh-sol-artifact-1";
var contractName = "Bridge";
var sourceName = "contracts/Bridge.sol";
var abi$1 = [
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "uint256",
				name: "period",
				type: "uint256"
			}
		],
		name: "DelayPeriodUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "threshold",
				type: "uint256"
			}
		],
		name: "DelayThresholdUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "bytes32",
				name: "id",
				type: "bytes32"
			}
		],
		name: "DelayedTransferAdded",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "bytes32",
				name: "id",
				type: "bytes32"
			},
			{
				indexed: false,
				internalType: "address",
				name: "receiver",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			}
		],
		name: "DelayedTransferExecuted",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "uint256",
				name: "length",
				type: "uint256"
			}
		],
		name: "EpochLengthUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "cap",
				type: "uint256"
			}
		],
		name: "EpochVolumeUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "GovernorAdded",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "GovernorRemoved",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "uint64",
				name: "seqnum",
				type: "uint64"
			},
			{
				indexed: false,
				internalType: "address",
				name: "provider",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			}
		],
		name: "LiquidityAdded",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			}
		],
		name: "MaxSendUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			}
		],
		name: "MinAddUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			}
		],
		name: "MinSendUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				internalType: "address",
				name: "previousOwner",
				type: "address"
			},
			{
				indexed: true,
				internalType: "address",
				name: "newOwner",
				type: "address"
			}
		],
		name: "OwnershipTransferred",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "Paused",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "PauserAdded",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "PauserRemoved",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "bytes32",
				name: "transferId",
				type: "bytes32"
			},
			{
				indexed: false,
				internalType: "address",
				name: "sender",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "receiver",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			},
			{
				indexed: false,
				internalType: "uint64",
				name: "srcChainId",
				type: "uint64"
			},
			{
				indexed: false,
				internalType: "bytes32",
				name: "srcTransferId",
				type: "bytes32"
			}
		],
		name: "Relay",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "uint256",
				name: "resetTime",
				type: "uint256"
			}
		],
		name: "ResetNotification",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "bytes32",
				name: "transferId",
				type: "bytes32"
			},
			{
				indexed: false,
				internalType: "address",
				name: "sender",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "receiver",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			},
			{
				indexed: false,
				internalType: "uint64",
				name: "dstChainId",
				type: "uint64"
			},
			{
				indexed: false,
				internalType: "uint64",
				name: "nonce",
				type: "uint64"
			},
			{
				indexed: false,
				internalType: "uint32",
				name: "maxSlippage",
				type: "uint32"
			}
		],
		name: "Send",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address[]",
				name: "_signers",
				type: "address[]"
			},
			{
				indexed: false,
				internalType: "uint256[]",
				name: "_powers",
				type: "uint256[]"
			}
		],
		name: "SignersUpdated",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "Unpaused",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: false,
				internalType: "bytes32",
				name: "withdrawId",
				type: "bytes32"
			},
			{
				indexed: false,
				internalType: "uint64",
				name: "seqnum",
				type: "uint64"
			},
			{
				indexed: false,
				internalType: "address",
				name: "receiver",
				type: "address"
			},
			{
				indexed: false,
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				indexed: false,
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			},
			{
				indexed: false,
				internalType: "bytes32",
				name: "refid",
				type: "bytes32"
			}
		],
		name: "WithdrawDone",
		type: "event"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_account",
				type: "address"
			}
		],
		name: "addGovernor",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_token",
				type: "address"
			},
			{
				internalType: "uint256",
				name: "_amount",
				type: "uint256"
			}
		],
		name: "addLiquidity",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "_amount",
				type: "uint256"
			}
		],
		name: "addNativeLiquidity",
		outputs: [
		],
		stateMutability: "payable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "addPauser",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "addseq",
		outputs: [
			{
				internalType: "uint64",
				name: "",
				type: "uint64"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "delayPeriod",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "delayThresholds",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32"
			}
		],
		name: "delayedTransfers",
		outputs: [
			{
				internalType: "address",
				name: "receiver",
				type: "address"
			},
			{
				internalType: "address",
				name: "token",
				type: "address"
			},
			{
				internalType: "uint256",
				name: "amount",
				type: "uint256"
			},
			{
				internalType: "uint256",
				name: "timestamp",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "epochLength",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "epochVolumeCaps",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "epochVolumes",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "id",
				type: "bytes32"
			}
		],
		name: "executeDelayedTransfer",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "governors",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "period",
				type: "uint256"
			}
		],
		name: "increaseNoticePeriod",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_account",
				type: "address"
			}
		],
		name: "isGovernor",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "isPauser",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "lastOpTimestamps",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "maxSend",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "minAdd",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "minSend",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "minimalMaxSlippage",
		outputs: [
			{
				internalType: "uint32",
				name: "",
				type: "uint32"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "nativeWrap",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "noticePeriod",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "notifyResetSigners",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "owner",
		outputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "pause",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "paused",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "",
				type: "address"
			}
		],
		name: "pausers",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes",
				name: "_relayRequest",
				type: "bytes"
			},
			{
				internalType: "bytes[]",
				name: "_sigs",
				type: "bytes[]"
			},
			{
				internalType: "address[]",
				name: "_signers",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_powers",
				type: "uint256[]"
			}
		],
		name: "relay",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_account",
				type: "address"
			}
		],
		name: "removeGovernor",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "account",
				type: "address"
			}
		],
		name: "removePauser",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "renounceGovernor",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "renounceOwnership",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "renouncePauser",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_signers",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_powers",
				type: "uint256[]"
			}
		],
		name: "resetSigners",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "resetTime",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_receiver",
				type: "address"
			},
			{
				internalType: "address",
				name: "_token",
				type: "address"
			},
			{
				internalType: "uint256",
				name: "_amount",
				type: "uint256"
			},
			{
				internalType: "uint64",
				name: "_dstChainId",
				type: "uint64"
			},
			{
				internalType: "uint64",
				name: "_nonce",
				type: "uint64"
			},
			{
				internalType: "uint32",
				name: "_maxSlippage",
				type: "uint32"
			}
		],
		name: "send",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_receiver",
				type: "address"
			},
			{
				internalType: "uint256",
				name: "_amount",
				type: "uint256"
			},
			{
				internalType: "uint64",
				name: "_dstChainId",
				type: "uint64"
			},
			{
				internalType: "uint64",
				name: "_nonce",
				type: "uint64"
			},
			{
				internalType: "uint32",
				name: "_maxSlippage",
				type: "uint32"
			}
		],
		name: "sendNative",
		outputs: [
		],
		stateMutability: "payable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "_period",
				type: "uint256"
			}
		],
		name: "setDelayPeriod",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_tokens",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_thresholds",
				type: "uint256[]"
			}
		],
		name: "setDelayThresholds",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "_length",
				type: "uint256"
			}
		],
		name: "setEpochLength",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_tokens",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_caps",
				type: "uint256[]"
			}
		],
		name: "setEpochVolumeCaps",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_tokens",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_amounts",
				type: "uint256[]"
			}
		],
		name: "setMaxSend",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_tokens",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_amounts",
				type: "uint256[]"
			}
		],
		name: "setMinAdd",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address[]",
				name: "_tokens",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_amounts",
				type: "uint256[]"
			}
		],
		name: "setMinSend",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint32",
				name: "_minimalMaxSlippage",
				type: "uint32"
			}
		],
		name: "setMinimalMaxSlippage",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "_weth",
				type: "address"
			}
		],
		name: "setWrap",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
		],
		name: "ssHash",
		outputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "address",
				name: "newOwner",
				type: "address"
			}
		],
		name: "transferOwnership",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32"
			}
		],
		name: "transfers",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "triggerTime",
		outputs: [
			{
				internalType: "uint256",
				name: "",
				type: "uint256"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
		],
		name: "unpause",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "uint256",
				name: "_triggerTime",
				type: "uint256"
			},
			{
				internalType: "address[]",
				name: "_newSigners",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_newPowers",
				type: "uint256[]"
			},
			{
				internalType: "bytes[]",
				name: "_sigs",
				type: "bytes[]"
			},
			{
				internalType: "address[]",
				name: "_curSigners",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_curPowers",
				type: "uint256[]"
			}
		],
		name: "updateSigners",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes",
				name: "_msg",
				type: "bytes"
			},
			{
				internalType: "bytes[]",
				name: "_sigs",
				type: "bytes[]"
			},
			{
				internalType: "address[]",
				name: "_signers",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_powers",
				type: "uint256[]"
			}
		],
		name: "verifySigs",
		outputs: [
		],
		stateMutability: "view",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes",
				name: "_wdmsg",
				type: "bytes"
			},
			{
				internalType: "bytes[]",
				name: "_sigs",
				type: "bytes[]"
			},
			{
				internalType: "address[]",
				name: "_signers",
				type: "address[]"
			},
			{
				internalType: "uint256[]",
				name: "_powers",
				type: "uint256[]"
			}
		],
		name: "withdraw",
		outputs: [
		],
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		inputs: [
			{
				internalType: "bytes32",
				name: "",
				type: "bytes32"
			}
		],
		name: "withdraws",
		outputs: [
			{
				internalType: "bool",
				name: "",
				type: "bool"
			}
		],
		stateMutability: "view",
		type: "function"
	},
	{
		stateMutability: "payable",
		type: "receive"
	}
];
var bytecode = "0x60806040523480156200001157600080fd5b506200001d3362000048565b60016005556006805460ff19169055620000373362000098565b620000423362000162565b62000222565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526007602052604090205460ff1615620001075760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c7265616479207061757365720000000000000060448201526064015b60405180910390fd5b6001600160a01b038116600081815260076020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f891015b60405180910390a150565b6001600160a01b03811660009081526008602052604090205460ff1615620001cd5760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920676f7665726e6f7200000000006044820152606401620000fe565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527fdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b5910162000157565b61505e80620002326000396000f3fe60806040526004361061036f5760003560e01c806382dc1ec4116101c6578063ba2cb25c116100f7578063e43581b811610095578063f20c922a1161006f578063f20c922a14610acf578063f2fde38b14610aef578063f832138314610b0f578063f8b30d7d14610b3c57600080fd5b8063e43581b814610a56578063e999e5f414610a8f578063eecdac8814610aaf57600080fd5b8063d0790da9116100d1578063d0790da9146109cb578063e026049c146109e1578063e09ab428146109f6578063e3eece2614610a2657600080fd5b8063ba2cb25c1461095e578063ccde517a1461097e578063cdd1b25d146109ab57600080fd5b80639ff9001a11610164578063a7bdf45a1161013e578063a7bdf45a14610881578063adc0d57f146108a1578063b1c94d941461091b578063b5f2bc471461093157600080fd5b80639ff9001a14610821578063a21a928014610841578063a5977fbb1461086157600080fd5b806389e39127116101a057806389e39127146107935780638da5cb5b146107cd5780639b14d4c6146107eb5780639e25fc5c1461080157600080fd5b806382dc1ec41461073e5780638456cb591461075e578063878fe1ce1461077357600080fd5b806352532faa116102a057806365a114f11161023e5780636ef8d66d116102185780636ef8d66d146106d15780637044c89e146106e6578063715018a6146106f957806380f51c121461070e57600080fd5b806365a114f11461067b578063682dbc22146106915780636b2c0f55146106b157600080fd5b806357d775f81161027a57806357d775f8146105f35780635c975abb1461060957806360216b0014610621578063618ee0551461064e57600080fd5b806352532faa1461058657806354eea796146105b357806356688700146105d357600080fd5b80633d5721071161030d578063457bfa2f116102e7578063457bfa2f146104d557806346fbf68e1461050d57806347b16c6c14610546578063482341261461056657600080fd5b80633d5721071461048d5780633f2e5fc3146104ad5780633f4ba83a146104c057600080fd5b80632fd1b0a4116103495780632fd1b0a4146103d2578063370fb47b146104095780633c4a25d01461042d5780633c64f04b1461044d57600080fd5b8063089927411461037b57806317bdbae51461039d57806325c38b9f146103bd57600080fd5b3661037657005b600080fd5b34801561038757600080fd5b5061039b6103963660046147b9565b610b69565b005b3480156103a957600080fd5b5061039b6103b83660046147b9565b610d0c565b3480156103c957600080fd5b5061039b610ea3565b3480156103de57600080fd5b506017546103ef9063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b34801561041557600080fd5b5061041f60025481565b604051908152602001610400565b34801561043957600080fd5b5061039b610448366004614841565b610f33565b34801561045957600080fd5b5061047d61046836600461485c565b60146020526000908152604090205460ff1681565b6040519015158152602001610400565b34801561049957600080fd5b5061039b6104a836600461485c565b610f87565b61039b6104bb3660046148a1565b61101b565b3480156104cc57600080fd5b5061039b611271565b3480156104e157600080fd5b506013546104f5906001600160a01b031681565b6040516001600160a01b039091168152602001610400565b34801561051957600080fd5b5061047d610528366004614841565b6001600160a01b031660009081526007602052604090205460ff1690565b34801561055257600080fd5b5061039b6105613660046147b9565b6112da565b34801561057257600080fd5b5061039b6105813660046148ff565b611471565b34801561059257600080fd5b5061041f6105a1366004614841565b600e6020526000908152604090205481565b3480156105bf57600080fd5b5061039b6105ce36600461485c565b6114e5565b3480156105df57600080fd5b5061039b6105ee36600461491a565b611572565b3480156105ff57600080fd5b5061041f60095481565b34801561061557600080fd5b5060065460ff1661047d565b34801561062d57600080fd5b5061041f61063c366004614841565b600a6020526000908152604090205481565b34801561065a57600080fd5b5061041f610669366004614841565b60166020526000908152604090205481565b34801561068757600080fd5b5061041f60035481565b34801561069d57600080fd5b5061039b6106ac36600461495a565b611734565b3480156106bd57600080fd5b5061039b6106cc366004614841565b611820565b3480156106dd57600080fd5b5061039b611871565b61039b6106f436600461485c565b61187a565b34801561070557600080fd5b5061039b611b2c565b34801561071a57600080fd5b5061047d610729366004614841565b60076020526000908152604090205460ff1681565b34801561074a57600080fd5b5061039b610759366004614841565b611b7e565b34801561076a57600080fd5b5061039b611bcf565b34801561077f57600080fd5b5061039b61078e3660046147b9565b611c36565b34801561079f57600080fd5b506010546107b49067ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610400565b3480156107d957600080fd5b506000546001600160a01b03166104f5565b3480156107f757600080fd5b5061041f60045481565b34801561080d57600080fd5b5061039b61081c36600461485c565b611dcd565b34801561082d57600080fd5b5061039b61083c366004614841565b611e3b565b34801561084d57600080fd5b5061039b61085c366004614a88565b611ea5565b34801561086d57600080fd5b5061039b61087c366004614b77565b6121ec565b34801561088d57600080fd5b5061039b61089c3660046147b9565b61233a565b3480156108ad57600080fd5b506108f06108bc36600461485c565b600d6020526000908152604090208054600182015460028301546003909301546001600160a01b0392831693919092169184565b604080516001600160a01b039586168152949093166020850152918301526060820152608001610400565b34801561092757600080fd5b5061041f600f5481565b34801561093d57600080fd5b5061041f61094c366004614841565b600b6020526000908152604090205481565b34801561096a57600080fd5b5061039b610979366004614be4565b6123eb565b34801561098a57600080fd5b5061041f610999366004614841565b60116020526000908152604090205481565b3480156109b757600080fd5b5061039b6109c6366004614a88565b612541565b3480156109d757600080fd5b5061041f60015481565b3480156109ed57600080fd5b5061039b612866565b348015610a0257600080fd5b5061047d610a1136600461485c565b60126020526000908152604090205460ff1681565b348015610a3257600080fd5b5061047d610a41366004614841565b60086020526000908152604090205460ff1681565b348015610a6257600080fd5b5061047d610a71366004614841565b6001600160a01b031660009081526008602052604090205460ff1690565b348015610a9b57600080fd5b5061039b610aaa3660046147b9565b61286f565b348015610abb57600080fd5b5061039b610aca366004614841565b612a06565b348015610adb57600080fd5b5061039b610aea36600461485c565b612a57565b348015610afb57600080fd5b5061039b610b0a366004614841565b612b01565b348015610b1b57600080fd5b5061041f610b2a366004614841565b600c6020526000908152604090205481565b348015610b4857600080fd5b5061041f610b57366004614841565b60156020526000908152604090205481565b3360009081526008602052604090205460ff16610bc65760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b60448201526064015b60405180910390fd5b828114610c075760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110610c2457610c24614ce4565b9050602002013560156000878785818110610c4157610c41614ce4565b9050602002016020810190610c569190614841565b6001600160a01b031681526020810191909152604001600020557f8b59d386e660418a48d742213ad5ce7c4dd51ae81f30e4e2c387f17d907010c9858583818110610ca357610ca3614ce4565b9050602002016020810190610cb89190614841565b848484818110610cca57610cca614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180610cfd81614d10565b915050610c0a565b5050505050565b3360009081526008602052604090205460ff16610d645760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b828114610da55760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110610dc257610dc2614ce4565b90506020020135600e6000878785818110610ddf57610ddf614ce4565b9050602002016020810190610df49190614841565b6001600160a01b031681526020810191909152604001600020557fceaad6533bfb481492fb3e08ef19297f46611b8fa9de5ef4cf8dc23a56ad09ce858583818110610e4157610e41614ce4565b9050602002016020810190610e569190614841565b848484818110610e6857610e68614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180610e9b81614d10565b915050610da8565b6000546001600160a01b03163314610eeb5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b600454610ef89042614d2b565b60038190556040519081527f68e825132f7d4bc837dea2d64ac9fc19912bf0224b67f9317d8f1a917f5304a1906020015b60405180910390a1565b6000546001600160a01b03163314610f7b5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481612bce565b50565b3360009081526008602052604090205460ff16610fdf5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b600f8190556040518181527fc0a39f234199b125fb93713c4d067bdcebbf691087f87b79c0feb92b156ba8b6906020015b60405180910390a150565b6002600554141561106e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156110b95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b8334146110fa5760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840dad2e6dac2e8c6d608b1b6044820152606401610bbd565b6013546001600160a01b03166111525760405162461bcd60e51b815260206004820152601360248201527f4e61746976652077726170206e6f7420736574000000000000000000000000006044820152606401610bbd565b6013546000906111709087906001600160a01b031687878787612c8b565b9050601360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156111c257600080fd5b505af11580156111d6573d6000803e3d6000fd5b5050601354604080518681523360208201526001600160a01b03808d1692820192909252911660608201526080810189905267ffffffffffffffff80891660a0830152871660c082015263ffffffff861660e08201527f89d8051e597ab4178a863a5190407b98abfeff406aa8db90c59af76612e58f01935061010001915061125c9050565b60405180910390a15050600160055550505050565b3360009081526007602052604090205460ff166112d05760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610bbd565b6112d8612ebe565b565b3360009081526008602052604090205460ff166113325760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b8281146113735760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d055782828281811061139057611390614ce4565b90506020020135600b60008787858181106113ad576113ad614ce4565b90506020020160208101906113c29190614841565b6001600160a01b031681526020810191909152604001600020557f608e49c22994f20b5d3496dca088b88dfd81b4a3e8cc3809ea1e10a320107e8985858381811061140f5761140f614ce4565b90506020020160208101906114249190614841565b84848481811061143657611436614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a18061146981614d10565b915050611376565b3360009081526008602052604090205460ff166114c95760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b6017805463ffffffff191663ffffffff92909216919091179055565b3360009081526008602052604090205460ff1661153d5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b60098190556040518181527f2664fec2ff76486ac58ed087310855b648b15b9d19f3de8529e95f7c46b7d6b390602001611010565b600260055414156115c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156116105760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6001600160a01b038216600090815260116020526040902054811161166a5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b601080546001919060009061168a90849067ffffffffffffffff16614d43565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506116d0333083856001600160a01b0316612f55909392919063ffffffff16565b6010546040805167ffffffffffffffff90921682523360208301526001600160a01b0384168282015260608201839052517fd5d28426c3248963b1719df49aa4c665120372e02c8249bbea03d019c39ce7649181900360800190a150506001600555565b60008484848460405160200161174d9493929190614ddb565b60405160208183030381529060405280519060200120905080600154146117b65760405162461bcd60e51b815260206004820152601860248201527f4d69736d617463682063757272656e74207369676e65727300000000000000006044820152606401610bbd565b87516020808a0191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012061181690888888888888612fed565b5050505050505050565b6000546001600160a01b031633146118685760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481613323565b6112d833613323565b600260055414156118cd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156119185760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b8034146119595760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840dad2e6dac2e8c6d608b1b6044820152606401610bbd565b6013546001600160a01b03166119b15760405162461bcd60e51b815260206004820152601360248201527f4e61746976652077726170206e6f7420736574000000000000000000000000006044820152606401610bbd565b6013546001600160a01b03166000908152601160205260409020548111611a0d5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b6010805460019190600090611a2d90849067ffffffffffffffff16614d43565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550601360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611aa357600080fd5b505af1158015611ab7573d6000803e3d6000fd5b50506010546013546040805167ffffffffffffffff90931683523360208401526001600160a01b0390911690820152606081018590527fd5d28426c3248963b1719df49aa4c665120372e02c8249bbea03d019c39ce76493506080019150611b1c9050565b60405180910390a1506001600555565b6000546001600160a01b03163314611b745760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6112d860006133dc565b6000546001600160a01b03163314611bc65760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f848161342c565b3360009081526007602052604090205460ff16611c2e5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610bbd565b6112d86134e9565b3360009081526008602052604090205460ff16611c8e5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b828114611ccf5760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110611cec57611cec614ce4565b9050602002013560166000878785818110611d0957611d09614ce4565b9050602002016020810190611d1e9190614841565b6001600160a01b031681526020810191909152604001600020557f4f12d1a5bfb3ccd3719255d4d299d808d50cdca9a0a5c2b3a5aaa7edde73052c858583818110611d6b57611d6b614ce4565b9050602002016020810190611d809190614841565b848484818110611d9257611d92614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180611dc581614d10565b915050611cd2565b60065460ff1615611e135760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6000611e1e82613564565b9050611e37816000015182602001518360400151613729565b5050565b6000546001600160a01b03163314611e835760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b601380546001600160a01b0319166001600160a01b0392909216919091179055565b60065460ff1615611eeb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b60004630604051602001611f4192919091825260601b6bffffffffffffffffffffffff191660208201527f57697468647261774d73670000000000000000000000000000000000000000006034820152603f0190565b604051602081830303815290604052805190602001209050611f8b818a8a604051602001611f7193929190614df2565b604051602081830303815290604052888888888888611734565b6000611fcc8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061385e92505050565b905060008160000151826020015183604001518460600151856080015160405160200161204595949392919060c095861b6001600160c01b031990811682529490951b9093166008850152606091821b6bffffffffffffffffffffffff199081166010860152911b166024830152603882015260580190565b60408051601f1981840301815291815281516020928301206000818152601290935291205490915060ff16156120bd5760405162461bcd60e51b815260206004820152601a60248201527f776974686472617720616c7265616479207375636365656465640000000000006044820152606401610bbd565b6000818152601260205260409020805460ff19166001179055606082015160808301516120ea91906139be565b60608201516001600160a01b03166000908152600e602052604090205480158015906121195750808360800151115b1561213b5761213682846040015185606001518660800151613ad6565b612152565b612152836040015184606001518560800151613729565b7f48a1ab26f3aa7b62bb6b6e8eed182f292b84eb7b006c0254386b268af20774be8284602001518560400151866060015187608001518860a001516040516121d69695949392919095865267ffffffffffffffff9490941660208601526001600160a01b03928316604086015291166060840152608083015260a082015260c00190565b60405180910390a1505050505050505050505050565b6002600554141561223f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff161561228a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b600061229a878787878787612c8b565b90506122b16001600160a01b038716333088612f55565b604080518281523360208201526001600160a01b0389811682840152881660608201526080810187905267ffffffffffffffff86811660a0830152851660c082015263ffffffff841660e082015290517f89d8051e597ab4178a863a5190407b98abfeff406aa8db90c59af76612e58f01918190036101000190a1505060016005555050505050565b6000546001600160a01b031633146123825760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b60035442116123d35760405162461bcd60e51b815260206004820152601460248201527f6e6f742072656163682072657365742074696d650000000000000000000000006044820152606401610bbd565b6000196003556123e584848484613be9565b50505050565b6002548b1161243c5760405162461bcd60e51b815260206004820152601e60248201527f547269676765722074696d65206973206e6f7420696e6372656173696e6700006044820152606401610bbd565b61244842610e10614d2b565b8b106124965760405162461bcd60e51b815260206004820152601960248201527f547269676765722074696d6520697320746f6f206c61726765000000000000006044820152606401610bbd565b600046306040516020016124ec92919091825260601b6bffffffffffffffffffffffff191660208201527f5570646174655369676e65727300000000000000000000000000000000000000603482015260410190565b604051602081830303815290604052805190602001209050612522818d8d8d8d8d604051602001611f7196959493929190614e0c565b61252e8b8b8b8b613be9565b5050506002989098555050505050505050565b60065460ff16156125875760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b600046306040516020016125dd92919091825260601b6bffffffffffffffffffffffff191660208201527f52656c6179000000000000000000000000000000000000000000000000000000603482015260390190565b60405160208183030381529060405280519060200120905061260d818a8a604051602001611f7193929190614df2565b600061264e8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613d9392505050565b8051602080830151604080850151606080870151608088015160a089015160c0808b015187519a861b6bffffffffffffffffffffffff199081168c8c015298861b891660348c01529590941b9096166048890152605c880191909152811b6001600160c01b0319908116607c88015293901b9092166084850152608c808501929092528051808503909201825260ac909301835280519082012060008181526014909252919020549192509060ff161561273c5760405162461bcd60e51b815260206004820152600f60248201526e7472616e736665722065786973747360881b6044820152606401610bbd565b60008181526014602052604090819020805460ff19166001179055820151606083015161276991906139be565b6040808301516001600160a01b03166000908152600e602052205480158015906127965750808360600151115b156127b8576127b382846020015185604001518660600151613ad6565b6127cf565b6127cf836020015184604001518560600151613729565b7f79fa08de5149d912dce8e5e8da7a7c17ccdf23dd5d3bfe196802e6eb86347c7c82846000015185602001518660400151876060015188608001518960c001516040516121d697969594939291909687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925267ffffffffffffffff9190911660a083015260c082015260e00190565b6112d833613f0b565b3360009081526008602052604090205460ff166128c75760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b8281146129085760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d055782828281811061292557612925614ce4565b905060200201356011600087878581811061294257612942614ce4565b90506020020160208101906129579190614841565b6001600160a01b031681526020810191909152604001600020557fc56b0d14c4940515800d94ebbd0f3f5d8cc58ba1109c12536bd993b72e466e4f8585838181106129a4576129a4614ce4565b90506020020160208101906129b99190614841565b8484848181106129cb576129cb614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806129fe81614d10565b91505061290b565b6000546001600160a01b03163314612a4e5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481613f0b565b6000546001600160a01b03163314612a9f5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6004548111612afc5760405162461bcd60e51b815260206004820152602360248201527f6e6f7469636520706572696f642063616e206f6e6c7920626520696e637265616044820152621cd95960ea1b6064820152608401610bbd565b600455565b6000546001600160a01b03163314612b495760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6001600160a01b038116612bc55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610bbd565b610f84816133dc565b6001600160a01b03811660009081526008602052604090205460ff1615612c375760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920676f7665726e6f7200000000006044820152606401610bbd565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527fdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b59101611010565b6001600160a01b0385166000908152601560205260408120548511612ce55760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b6001600160a01b0386166000908152601660205260409020541580612d2257506001600160a01b0386166000908152601660205260409020548511155b612d6e5760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f206c61726765000000000000000000000000000000006044820152606401610bbd565b60175463ffffffff90811690831611612dc95760405162461bcd60e51b815260206004820152601660248201527f6d617820736c69707061676520746f6f20736d616c6c000000000000000000006044820152606401610bbd565b6040516bffffffffffffffffffffffff1933606090811b8216602084015289811b8216603484015288901b166048820152605c81018690526001600160c01b031960c086811b8216607c84015285811b8216608484015246901b16608c82015260009060940160408051601f1981840301815291815281516020928301206000818152601490935291205490915060ff1615612e995760405162461bcd60e51b815260206004820152600f60248201526e7472616e736665722065786973747360881b6044820152606401610bbd565b6000818152601460205260409020805460ff1916600117905590509695505050505050565b60065460ff16612f105760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610bbd565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610f29565b6040516001600160a01b03808516602483015283166044820152606481018290526123e59085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613fc4565b8281146130485760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b6064820152608401610bbd565b6000805b8481101561308c5783838281811061306657613066614ce4565b90506020020135826130789190614d2b565b91508061308481614d10565b91505061304c565b506000600361309c836002614e34565b6130a69190614e53565b6130b1906001614d2b565b905060008080805b8a8110156132d157600061313c8d8d848181106130d8576130d8614ce4565b90506020028101906130ea9190614e75565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f6140a990919063ffffffff16565b9050836001600160a01b0316816001600160a01b03161161319f5760405162461bcd60e51b815260206004820152601e60248201527f7369676e657273206e6f7420696e20617363656e64696e67206f7264657200006044820152606401610bbd565b8093505b8a8a848181106131b5576131b5614ce4565b90506020020160208101906131ca9190614841565b6001600160a01b0316816001600160a01b03161115613244576131ee600184614d2b565b925089831061323f5760405162461bcd60e51b815260206004820152601060248201527f7369676e6572206e6f7420666f756e64000000000000000000000000000000006044820152606401610bbd565b6131a3565b8a8a8481811061325657613256614ce4565b905060200201602081019061326b9190614841565b6001600160a01b0316816001600160a01b031614156132ab5788888481811061329657613296614ce4565b90506020020135856132a89190614d2b565b94505b8585106132be575050505050505061331a565b50806132c981614d10565b9150506130b9565b5060405162461bcd60e51b815260206004820152601260248201527f71756f72756d206e6f74207265616368656400000000000000000000000000006044820152606401610bbd565b50505050505050565b6001600160a01b03811660009081526007602052604090205460ff1661338b5760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742070617573657200000000000000000000006044820152606401610bbd565b6001600160a01b038116600081815260076020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e9101611010565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526007602052604090205460ff16156134955760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c726561647920706175736572000000000000006044820152606401610bbd565b6001600160a01b038116600081815260076020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101611010565b60065460ff161561352f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612f3d3390565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600d6020908152604091829020825160808101845281546001600160a01b03908116825260018301541692810192909252600281015492820192909252600390910154606082018190526136235760405162461bcd60e51b815260206004820152601a60248201527f64656c61796564207472616e73666572206e6f742065786973740000000000006044820152606401610bbd565b600f5481606001516136359190614d2b565b42116136835760405162461bcd60e51b815260206004820152601d60248201527f64656c61796564207472616e73666572207374696c6c206c6f636b65640000006044820152606401610bbd565b6000838152600d6020908152604080832080546001600160a01b03199081168255600182018054909116905560028101849055600301929092558251908301518383015192517f3b40e5089937425d14cdd96947e5661868357e224af59bd8b24a4b8a330d44269361371b93889390929091909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a192915050565b6013546001600160a01b038381169116141561384557601354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561378557600080fd5b505af1158015613799573d6000803e3d6000fd5b505050506000836001600160a01b03168261c35090604051600060405180830381858888f193505050503d80600081146137ef576040519150601f19603f3d011682016040523d82523d6000602084013e6137f4565b606091505b50509050806123e55760405162461bcd60e51b815260206004820152601b60248201527f6661696c656420746f2073656e64206e617469766520746f6b656e00000000006044820152606401610bbd565b6138596001600160a01b0383168483614153565b505050565b6040805160c08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905283518085019094528184528301849052909190805b602083015151835110156139b6576138bc83614183565b909250905081600114156138e4576138d3836141bd565b67ffffffffffffffff1684526138a5565b816002141561390a576138f6836141bd565b67ffffffffffffffff1660208501526138a5565b81600314156139375761392461391f8461423f565b6142fc565b6001600160a01b031660408501526138a5565b816004141561395f5761394c61391f8461423f565b6001600160a01b031660608501526138a5565b8160051415613983576139796139748461423f565b614307565b60808501526138a5565b81600614156139a75761399d6139988461423f565b61433e565b60a08501526138a5565b6139b18382614356565b6138a5565b505050919050565b6009546139c9575050565b6001600160a01b0382166000908152600b6020526040902054806139ec57505050565b6001600160a01b0383166000908152600a602052604081205460095490914291613a168184614e53565b613a209190614e34565b6001600160a01b0387166000908152600c6020526040902054909150811115613a4b57849250613a58565b613a558584614d2b565b92505b83831115613aa85760405162461bcd60e51b815260206004820152601260248201527f766f6c756d6520657863656564732063617000000000000000000000000000006044820152606401610bbd565b506001600160a01b039094166000908152600a6020908152604080832093909355600c905220929092555050565b6000848152600d602052604090206003015415613b355760405162461bcd60e51b815260206004820152601f60248201527f64656c61796564207472616e7366657220616c726561647920657869737473006044820152606401610bbd565b604080516080810182526001600160a01b0380861682528481166020808401918252838501868152426060860190815260008b8152600d90935291869020945185549085166001600160a01b031991821617865592516001860180549190951693169290921790925551600283015551600390910155517fcbcfffe5102114216a85d3aceb14ad4b81a3935b1b5c468fadf3889eb9c5dce690613bdb9086815260200190565b60405180910390a150505050565b828114613c445760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b6064820152608401610bbd565b6000805b84811015613d1d57816001600160a01b0316868683818110613c6c57613c6c614ce4565b9050602002016020810190613c819190614841565b6001600160a01b031611613ce25760405162461bcd60e51b815260206004820152602260248201527f4e6577207369676e657273206e6f7420696e20617363656e64696e67206f726460448201526132b960f11b6064820152608401610bbd565b858582818110613cf457613cf4614ce4565b9050602002016020810190613d099190614841565b915080613d1581614d10565b915050613c48565b5084848484604051602001613d359493929190614ddb565b60408051601f198184030181529082905280516020909101206001557ff126123539a68393c55697f617e7d1148e371988daed246c2f41da99965a23f890613d84908790879087908790614ebc565b60405180910390a15050505050565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905283518085019094528184528301849052909190805b602083015151835110156139b657613df883614183565b90925090508160011415613e2257613e1261391f8461423f565b6001600160a01b03168452613de1565b8160021415613e4a57613e3761391f8461423f565b6001600160a01b03166020850152613de1565b8160031415613e7257613e5f61391f8461423f565b6001600160a01b03166040850152613de1565b8160041415613e9157613e876139748461423f565b6060850152613de1565b8160051415613eb757613ea3836141bd565b67ffffffffffffffff166080850152613de1565b8160061415613edd57613ec9836141bd565b67ffffffffffffffff1660a0850152613de1565b8160071415613efc57613ef26139988461423f565b60c0850152613de1565b613f068382614356565b613de1565b6001600160a01b03811660009081526008602052604090205460ff16613f735760405162461bcd60e51b815260206004820152601760248201527f4163636f756e74206973206e6f7420676f7665726e6f720000000000000000006044820152606401610bbd565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b9101611010565b6000614019826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143c89092919063ffffffff16565b80519091501561385957808060200190518101906140379190614f3e565b6138595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610bbd565b60008151604114156140dd5760208201516040830151606084015160001a6140d3868285856143e1565b935050505061414d565b81516040141561410557602082015160408301516140fc85838361458a565b9250505061414d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bbd565b92915050565b6040516001600160a01b03831660248201526044810182905261385990849063a9059cbb60e01b90606401612f89565b6000806000614191846141bd565b905061419e600882614e53565b92508060071660058111156141b5576141b5614f60565b915050915091565b602080820151825181019091015160009182805b600a8110156142395783811a91506141ea816007614e34565b82607f16901b8517945081608016600014156142275761420b816001614d2b565b8651879061421a908390614d2b565b9052509395945050505050565b8061423181614d10565b9150506141d1565b50600080fd5b6060600061424c836141bd565b905060008184600001516142609190614d2b565b905083602001515181111561427457600080fd5b8167ffffffffffffffff81111561428d5761428d614944565b6040519080825280601f01601f1916602001820160405280156142b7576020820181803683370190505b50602080860151865192955091818601919083010160005b858110156142f15781810151838201526142ea602082614d2b565b90506142cf565b505050935250919050565b600061414d826145cd565b600060208251111561431857600080fd5b602082015190508151602061432d9190614f76565b614338906008614e34565b1c919050565b6000815160201461434e57600080fd5b506020015190565b600081600581111561436a5761436a614f60565b141561437957613859826141bd565b600281600581111561438d5761438d614f60565b141561037657600061439e836141bd565b905080836000018181516143b29190614d2b565b9052506020830151518351111561385957600080fd5b60606143d784846000856145f5565b90505b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561445e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bbd565b8360ff16601b148061447357508360ff16601c145b6144ca5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bbd565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa15801561451e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166145815760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610bbd565b95945050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821660ff83901c601b016145c3868287856143e1565b9695505050505050565b600081516014146145dd57600080fd5b50602001516c01000000000000000000000000900490565b60608247101561466d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610bbd565b843b6146bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bbd565b600080866001600160a01b031685876040516146d79190614fb9565b60006040518083038185875af1925050503d8060008114614714576040519150601f19603f3d011682016040523d82523d6000602084013e614719565b606091505b5091509150614729828286614734565b979650505050505050565b606083156147435750816143da565b8251156147535782518084602001fd5b8160405162461bcd60e51b8152600401610bbd9190614fd5565b60008083601f84011261477f57600080fd5b50813567ffffffffffffffff81111561479757600080fd5b6020830191508360208260051b85010111156147b257600080fd5b9250929050565b600080600080604085870312156147cf57600080fd5b843567ffffffffffffffff808211156147e757600080fd5b6147f38883890161476d565b9096509450602087013591508082111561480c57600080fd5b506148198782880161476d565b95989497509550505050565b80356001600160a01b038116811461483c57600080fd5b919050565b60006020828403121561485357600080fd5b6143da82614825565b60006020828403121561486e57600080fd5b5035919050565b803567ffffffffffffffff8116811461483c57600080fd5b803563ffffffff8116811461483c57600080fd5b600080600080600060a086880312156148b957600080fd5b6148c286614825565b9450602086013593506148d760408701614875565b92506148e560608701614875565b91506148f36080870161488d565b90509295509295909350565b60006020828403121561491157600080fd5b6143da8261488d565b6000806040838503121561492d57600080fd5b61493683614825565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060006080888a03121561497557600080fd5b873567ffffffffffffffff8082111561498d57600080fd5b818a0191508a601f8301126149a157600080fd5b8135818111156149b3576149b3614944565b604051601f8201601f19908116603f011681019083821181831017156149db576149db614944565b816040528281528d60208487010111156149f457600080fd5b82602086016020830137600094508460208483010152809b5050505060208a013581811115614a21578283fd5b614a2d8c828d0161476d565b90995097505060408a013581811115614a44578283fd5b614a508c828d0161476d565b90975095505060608a013581811115614a67578283fd5b614a738c828d0161476d565b9a9d999c50979a509598949794955050505050565b6000806000806000806000806080898b031215614aa457600080fd5b883567ffffffffffffffff80821115614abc57600080fd5b818b0191508b601f830112614ad057600080fd5b813581811115614adf57600080fd5b8c6020828501011115614af157600080fd5b60209283019a509850908a01359080821115614b0c57600080fd5b614b188c838d0161476d565b909850965060408b0135915080821115614b3157600080fd5b614b3d8c838d0161476d565b909650945060608b0135915080821115614b5657600080fd5b50614b638b828c0161476d565b999c989b5096995094979396929594505050565b60008060008060008060c08789031215614b9057600080fd5b614b9987614825565b9550614ba760208801614825565b945060408701359350614bbc60608801614875565b9250614bca60808801614875565b9150614bd860a0880161488d565b90509295509295509295565b600080600080600080600080600080600060c08c8e031215614c0557600080fd5b8b359a5067ffffffffffffffff8060208e01351115614c2357600080fd5b614c338e60208f01358f0161476d565b909b50995060408d0135811015614c4957600080fd5b614c598e60408f01358f0161476d565b909950975060608d0135811015614c6f57600080fd5b614c7f8e60608f01358f0161476d565b909750955060808d0135811015614c9557600080fd5b614ca58e60808f01358f0161476d565b909550935060a08d0135811015614cbb57600080fd5b50614ccc8d60a08e01358e0161476d565b81935080925050509295989b509295989b9093969950565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614d2457614d24614cfa565b5060010190565b60008219821115614d3e57614d3e614cfa565b500190565b600067ffffffffffffffff808316818516808303821115614d6657614d66614cfa565b01949350505050565b60008160005b84811015614da4576001600160a01b03614d8e83614825565b1686526020958601959190910190600101614d75565b5093949350505050565b60006001600160fb1b03831115614dc457600080fd5b8260051b8083863760009401938452509192915050565b60006145c3614deb838789614d6f565b8486614dae565b838152818360208301376000910160200190815292915050565b8681528560208201526000614e28614deb604084018789614d6f565b98975050505050505050565b6000816000190483118215151615614e4e57614e4e614cfa565b500290565b600082614e7057634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112614e8c57600080fd5b83018035915067ffffffffffffffff821115614ea757600080fd5b6020019150368190038213156147b257600080fd5b6040808252810184905260008560608301825b87811015614efd576001600160a01b03614ee884614825565b16825260209283019290910190600101614ecf565b5083810360208501528481526001600160fb1b03851115614f1d57600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b600060208284031215614f5057600080fd5b815180151581146143da57600080fd5b634e487b7160e01b600052602160045260246000fd5b600082821015614f8857614f88614cfa565b500390565b60005b83811015614fa8578181015183820152602001614f90565b838111156123e55750506000910152565b60008251614fcb818460208701614f8d565b9190910192915050565b6020815260008251806020840152614ff4816040850160208701614f8d565b601f01601f1916919091016040019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200d78a5548ff1ceef8f6921195cceda8dea34180a2495748efcb733ce9c144aa664736f6c63430008090033";
var deployedBytecode = "0x60806040526004361061036f5760003560e01c806382dc1ec4116101c6578063ba2cb25c116100f7578063e43581b811610095578063f20c922a1161006f578063f20c922a14610acf578063f2fde38b14610aef578063f832138314610b0f578063f8b30d7d14610b3c57600080fd5b8063e43581b814610a56578063e999e5f414610a8f578063eecdac8814610aaf57600080fd5b8063d0790da9116100d1578063d0790da9146109cb578063e026049c146109e1578063e09ab428146109f6578063e3eece2614610a2657600080fd5b8063ba2cb25c1461095e578063ccde517a1461097e578063cdd1b25d146109ab57600080fd5b80639ff9001a11610164578063a7bdf45a1161013e578063a7bdf45a14610881578063adc0d57f146108a1578063b1c94d941461091b578063b5f2bc471461093157600080fd5b80639ff9001a14610821578063a21a928014610841578063a5977fbb1461086157600080fd5b806389e39127116101a057806389e39127146107935780638da5cb5b146107cd5780639b14d4c6146107eb5780639e25fc5c1461080157600080fd5b806382dc1ec41461073e5780638456cb591461075e578063878fe1ce1461077357600080fd5b806352532faa116102a057806365a114f11161023e5780636ef8d66d116102185780636ef8d66d146106d15780637044c89e146106e6578063715018a6146106f957806380f51c121461070e57600080fd5b806365a114f11461067b578063682dbc22146106915780636b2c0f55146106b157600080fd5b806357d775f81161027a57806357d775f8146105f35780635c975abb1461060957806360216b0014610621578063618ee0551461064e57600080fd5b806352532faa1461058657806354eea796146105b357806356688700146105d357600080fd5b80633d5721071161030d578063457bfa2f116102e7578063457bfa2f146104d557806346fbf68e1461050d57806347b16c6c14610546578063482341261461056657600080fd5b80633d5721071461048d5780633f2e5fc3146104ad5780633f4ba83a146104c057600080fd5b80632fd1b0a4116103495780632fd1b0a4146103d2578063370fb47b146104095780633c4a25d01461042d5780633c64f04b1461044d57600080fd5b8063089927411461037b57806317bdbae51461039d57806325c38b9f146103bd57600080fd5b3661037657005b600080fd5b34801561038757600080fd5b5061039b6103963660046147b9565b610b69565b005b3480156103a957600080fd5b5061039b6103b83660046147b9565b610d0c565b3480156103c957600080fd5b5061039b610ea3565b3480156103de57600080fd5b506017546103ef9063ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b34801561041557600080fd5b5061041f60025481565b604051908152602001610400565b34801561043957600080fd5b5061039b610448366004614841565b610f33565b34801561045957600080fd5b5061047d61046836600461485c565b60146020526000908152604090205460ff1681565b6040519015158152602001610400565b34801561049957600080fd5b5061039b6104a836600461485c565b610f87565b61039b6104bb3660046148a1565b61101b565b3480156104cc57600080fd5b5061039b611271565b3480156104e157600080fd5b506013546104f5906001600160a01b031681565b6040516001600160a01b039091168152602001610400565b34801561051957600080fd5b5061047d610528366004614841565b6001600160a01b031660009081526007602052604090205460ff1690565b34801561055257600080fd5b5061039b6105613660046147b9565b6112da565b34801561057257600080fd5b5061039b6105813660046148ff565b611471565b34801561059257600080fd5b5061041f6105a1366004614841565b600e6020526000908152604090205481565b3480156105bf57600080fd5b5061039b6105ce36600461485c565b6114e5565b3480156105df57600080fd5b5061039b6105ee36600461491a565b611572565b3480156105ff57600080fd5b5061041f60095481565b34801561061557600080fd5b5060065460ff1661047d565b34801561062d57600080fd5b5061041f61063c366004614841565b600a6020526000908152604090205481565b34801561065a57600080fd5b5061041f610669366004614841565b60166020526000908152604090205481565b34801561068757600080fd5b5061041f60035481565b34801561069d57600080fd5b5061039b6106ac36600461495a565b611734565b3480156106bd57600080fd5b5061039b6106cc366004614841565b611820565b3480156106dd57600080fd5b5061039b611871565b61039b6106f436600461485c565b61187a565b34801561070557600080fd5b5061039b611b2c565b34801561071a57600080fd5b5061047d610729366004614841565b60076020526000908152604090205460ff1681565b34801561074a57600080fd5b5061039b610759366004614841565b611b7e565b34801561076a57600080fd5b5061039b611bcf565b34801561077f57600080fd5b5061039b61078e3660046147b9565b611c36565b34801561079f57600080fd5b506010546107b49067ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610400565b3480156107d957600080fd5b506000546001600160a01b03166104f5565b3480156107f757600080fd5b5061041f60045481565b34801561080d57600080fd5b5061039b61081c36600461485c565b611dcd565b34801561082d57600080fd5b5061039b61083c366004614841565b611e3b565b34801561084d57600080fd5b5061039b61085c366004614a88565b611ea5565b34801561086d57600080fd5b5061039b61087c366004614b77565b6121ec565b34801561088d57600080fd5b5061039b61089c3660046147b9565b61233a565b3480156108ad57600080fd5b506108f06108bc36600461485c565b600d6020526000908152604090208054600182015460028301546003909301546001600160a01b0392831693919092169184565b604080516001600160a01b039586168152949093166020850152918301526060820152608001610400565b34801561092757600080fd5b5061041f600f5481565b34801561093d57600080fd5b5061041f61094c366004614841565b600b6020526000908152604090205481565b34801561096a57600080fd5b5061039b610979366004614be4565b6123eb565b34801561098a57600080fd5b5061041f610999366004614841565b60116020526000908152604090205481565b3480156109b757600080fd5b5061039b6109c6366004614a88565b612541565b3480156109d757600080fd5b5061041f60015481565b3480156109ed57600080fd5b5061039b612866565b348015610a0257600080fd5b5061047d610a1136600461485c565b60126020526000908152604090205460ff1681565b348015610a3257600080fd5b5061047d610a41366004614841565b60086020526000908152604090205460ff1681565b348015610a6257600080fd5b5061047d610a71366004614841565b6001600160a01b031660009081526008602052604090205460ff1690565b348015610a9b57600080fd5b5061039b610aaa3660046147b9565b61286f565b348015610abb57600080fd5b5061039b610aca366004614841565b612a06565b348015610adb57600080fd5b5061039b610aea36600461485c565b612a57565b348015610afb57600080fd5b5061039b610b0a366004614841565b612b01565b348015610b1b57600080fd5b5061041f610b2a366004614841565b600c6020526000908152604090205481565b348015610b4857600080fd5b5061041f610b57366004614841565b60156020526000908152604090205481565b3360009081526008602052604090205460ff16610bc65760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b60448201526064015b60405180910390fd5b828114610c075760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110610c2457610c24614ce4565b9050602002013560156000878785818110610c4157610c41614ce4565b9050602002016020810190610c569190614841565b6001600160a01b031681526020810191909152604001600020557f8b59d386e660418a48d742213ad5ce7c4dd51ae81f30e4e2c387f17d907010c9858583818110610ca357610ca3614ce4565b9050602002016020810190610cb89190614841565b848484818110610cca57610cca614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180610cfd81614d10565b915050610c0a565b5050505050565b3360009081526008602052604090205460ff16610d645760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b828114610da55760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110610dc257610dc2614ce4565b90506020020135600e6000878785818110610ddf57610ddf614ce4565b9050602002016020810190610df49190614841565b6001600160a01b031681526020810191909152604001600020557fceaad6533bfb481492fb3e08ef19297f46611b8fa9de5ef4cf8dc23a56ad09ce858583818110610e4157610e41614ce4565b9050602002016020810190610e569190614841565b848484818110610e6857610e68614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180610e9b81614d10565b915050610da8565b6000546001600160a01b03163314610eeb5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b600454610ef89042614d2b565b60038190556040519081527f68e825132f7d4bc837dea2d64ac9fc19912bf0224b67f9317d8f1a917f5304a1906020015b60405180910390a1565b6000546001600160a01b03163314610f7b5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481612bce565b50565b3360009081526008602052604090205460ff16610fdf5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b600f8190556040518181527fc0a39f234199b125fb93713c4d067bdcebbf691087f87b79c0feb92b156ba8b6906020015b60405180910390a150565b6002600554141561106e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156110b95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b8334146110fa5760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840dad2e6dac2e8c6d608b1b6044820152606401610bbd565b6013546001600160a01b03166111525760405162461bcd60e51b815260206004820152601360248201527f4e61746976652077726170206e6f7420736574000000000000000000000000006044820152606401610bbd565b6013546000906111709087906001600160a01b031687878787612c8b565b9050601360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b1580156111c257600080fd5b505af11580156111d6573d6000803e3d6000fd5b5050601354604080518681523360208201526001600160a01b03808d1692820192909252911660608201526080810189905267ffffffffffffffff80891660a0830152871660c082015263ffffffff861660e08201527f89d8051e597ab4178a863a5190407b98abfeff406aa8db90c59af76612e58f01935061010001915061125c9050565b60405180910390a15050600160055550505050565b3360009081526007602052604090205460ff166112d05760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610bbd565b6112d8612ebe565b565b3360009081526008602052604090205460ff166113325760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b8281146113735760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d055782828281811061139057611390614ce4565b90506020020135600b60008787858181106113ad576113ad614ce4565b90506020020160208101906113c29190614841565b6001600160a01b031681526020810191909152604001600020557f608e49c22994f20b5d3496dca088b88dfd81b4a3e8cc3809ea1e10a320107e8985858381811061140f5761140f614ce4565b90506020020160208101906114249190614841565b84848481811061143657611436614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a18061146981614d10565b915050611376565b3360009081526008602052604090205460ff166114c95760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b6017805463ffffffff191663ffffffff92909216919091179055565b3360009081526008602052604090205460ff1661153d5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b60098190556040518181527f2664fec2ff76486ac58ed087310855b648b15b9d19f3de8529e95f7c46b7d6b390602001611010565b600260055414156115c55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156116105760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6001600160a01b038216600090815260116020526040902054811161166a5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b601080546001919060009061168a90849067ffffffffffffffff16614d43565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506116d0333083856001600160a01b0316612f55909392919063ffffffff16565b6010546040805167ffffffffffffffff90921682523360208301526001600160a01b0384168282015260608201839052517fd5d28426c3248963b1719df49aa4c665120372e02c8249bbea03d019c39ce7649181900360800190a150506001600555565b60008484848460405160200161174d9493929190614ddb565b60405160208183030381529060405280519060200120905080600154146117b65760405162461bcd60e51b815260206004820152601860248201527f4d69736d617463682063757272656e74207369676e65727300000000000000006044820152606401610bbd565b87516020808a0191909120604080517f19457468657265756d205369676e6564204d6573736167653a0a33320000000081850152603c8082019390935281518082039093018352605c019052805191012061181690888888888888612fed565b5050505050505050565b6000546001600160a01b031633146118685760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481613323565b6112d833613323565b600260055414156118cd5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff16156119185760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b8034146119595760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840dad2e6dac2e8c6d608b1b6044820152606401610bbd565b6013546001600160a01b03166119b15760405162461bcd60e51b815260206004820152601360248201527f4e61746976652077726170206e6f7420736574000000000000000000000000006044820152606401610bbd565b6013546001600160a01b03166000908152601160205260409020548111611a0d5760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b6010805460019190600090611a2d90849067ffffffffffffffff16614d43565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550601360009054906101000a90046001600160a01b03166001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611aa357600080fd5b505af1158015611ab7573d6000803e3d6000fd5b50506010546013546040805167ffffffffffffffff90931683523360208401526001600160a01b0390911690820152606081018590527fd5d28426c3248963b1719df49aa4c665120372e02c8249bbea03d019c39ce76493506080019150611b1c9050565b60405180910390a1506001600555565b6000546001600160a01b03163314611b745760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6112d860006133dc565b6000546001600160a01b03163314611bc65760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f848161342c565b3360009081526007602052604090205460ff16611c2e5760405162461bcd60e51b815260206004820152601460248201527f43616c6c6572206973206e6f74207061757365720000000000000000000000006044820152606401610bbd565b6112d86134e9565b3360009081526008602052604090205460ff16611c8e5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b828114611ccf5760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d0557828282818110611cec57611cec614ce4565b9050602002013560166000878785818110611d0957611d09614ce4565b9050602002016020810190611d1e9190614841565b6001600160a01b031681526020810191909152604001600020557f4f12d1a5bfb3ccd3719255d4d299d808d50cdca9a0a5c2b3a5aaa7edde73052c858583818110611d6b57611d6b614ce4565b9050602002016020810190611d809190614841565b848484818110611d9257611d92614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a180611dc581614d10565b915050611cd2565b60065460ff1615611e135760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6000611e1e82613564565b9050611e37816000015182602001518360400151613729565b5050565b6000546001600160a01b03163314611e835760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b601380546001600160a01b0319166001600160a01b0392909216919091179055565b60065460ff1615611eeb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b60004630604051602001611f4192919091825260601b6bffffffffffffffffffffffff191660208201527f57697468647261774d73670000000000000000000000000000000000000000006034820152603f0190565b604051602081830303815290604052805190602001209050611f8b818a8a604051602001611f7193929190614df2565b604051602081830303815290604052888888888888611734565b6000611fcc8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061385e92505050565b905060008160000151826020015183604001518460600151856080015160405160200161204595949392919060c095861b6001600160c01b031990811682529490951b9093166008850152606091821b6bffffffffffffffffffffffff199081166010860152911b166024830152603882015260580190565b60408051601f1981840301815291815281516020928301206000818152601290935291205490915060ff16156120bd5760405162461bcd60e51b815260206004820152601a60248201527f776974686472617720616c7265616479207375636365656465640000000000006044820152606401610bbd565b6000818152601260205260409020805460ff19166001179055606082015160808301516120ea91906139be565b60608201516001600160a01b03166000908152600e602052604090205480158015906121195750808360800151115b1561213b5761213682846040015185606001518660800151613ad6565b612152565b612152836040015184606001518560800151613729565b7f48a1ab26f3aa7b62bb6b6e8eed182f292b84eb7b006c0254386b268af20774be8284602001518560400151866060015187608001518860a001516040516121d69695949392919095865267ffffffffffffffff9490941660208601526001600160a01b03928316604086015291166060840152608083015260a082015260c00190565b60405180910390a1505050505050505050505050565b6002600554141561223f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610bbd565b600260055560065460ff161561228a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b600061229a878787878787612c8b565b90506122b16001600160a01b038716333088612f55565b604080518281523360208201526001600160a01b0389811682840152881660608201526080810187905267ffffffffffffffff86811660a0830152851660c082015263ffffffff841660e082015290517f89d8051e597ab4178a863a5190407b98abfeff406aa8db90c59af76612e58f01918190036101000190a1505060016005555050505050565b6000546001600160a01b031633146123825760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b60035442116123d35760405162461bcd60e51b815260206004820152601460248201527f6e6f742072656163682072657365742074696d650000000000000000000000006044820152606401610bbd565b6000196003556123e584848484613be9565b50505050565b6002548b1161243c5760405162461bcd60e51b815260206004820152601e60248201527f547269676765722074696d65206973206e6f7420696e6372656173696e6700006044820152606401610bbd565b61244842610e10614d2b565b8b106124965760405162461bcd60e51b815260206004820152601960248201527f547269676765722074696d6520697320746f6f206c61726765000000000000006044820152606401610bbd565b600046306040516020016124ec92919091825260601b6bffffffffffffffffffffffff191660208201527f5570646174655369676e65727300000000000000000000000000000000000000603482015260410190565b604051602081830303815290604052805190602001209050612522818d8d8d8d8d604051602001611f7196959493929190614e0c565b61252e8b8b8b8b613be9565b5050506002989098555050505050505050565b60065460ff16156125875760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b600046306040516020016125dd92919091825260601b6bffffffffffffffffffffffff191660208201527f52656c6179000000000000000000000000000000000000000000000000000000603482015260390190565b60405160208183030381529060405280519060200120905061260d818a8a604051602001611f7193929190614df2565b600061264e8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250613d9392505050565b8051602080830151604080850151606080870151608088015160a089015160c0808b015187519a861b6bffffffffffffffffffffffff199081168c8c015298861b891660348c01529590941b9096166048890152605c880191909152811b6001600160c01b0319908116607c88015293901b9092166084850152608c808501929092528051808503909201825260ac909301835280519082012060008181526014909252919020549192509060ff161561273c5760405162461bcd60e51b815260206004820152600f60248201526e7472616e736665722065786973747360881b6044820152606401610bbd565b60008181526014602052604090819020805460ff19166001179055820151606083015161276991906139be565b6040808301516001600160a01b03166000908152600e602052205480158015906127965750808360600151115b156127b8576127b382846020015185604001518660600151613ad6565b6127cf565b6127cf836020015184604001518560600151613729565b7f79fa08de5149d912dce8e5e8da7a7c17ccdf23dd5d3bfe196802e6eb86347c7c82846000015185602001518660400151876060015188608001518960c001516040516121d697969594939291909687526001600160a01b0395861660208801529385166040870152919093166060850152608084019290925267ffffffffffffffff9190911660a083015260c082015260e00190565b6112d833613f0b565b3360009081526008602052604090205460ff166128c75760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba1033b7bb32b93737b960511b6044820152606401610bbd565b8281146129085760405162461bcd60e51b815260206004820152600f60248201526e0d8cadccee8d040dad2e6dac2e8c6d608b1b6044820152606401610bbd565b60005b83811015610d055782828281811061292557612925614ce4565b905060200201356011600087878581811061294257612942614ce4565b90506020020160208101906129579190614841565b6001600160a01b031681526020810191909152604001600020557fc56b0d14c4940515800d94ebbd0f3f5d8cc58ba1109c12536bd993b72e466e4f8585838181106129a4576129a4614ce4565b90506020020160208101906129b99190614841565b8484848181106129cb576129cb614ce4565b604080516001600160a01b0390951685526020918202939093013590840152500160405180910390a1806129fe81614d10565b91505061290b565b6000546001600160a01b03163314612a4e5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b610f8481613f0b565b6000546001600160a01b03163314612a9f5760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6004548111612afc5760405162461bcd60e51b815260206004820152602360248201527f6e6f7469636520706572696f642063616e206f6e6c7920626520696e637265616044820152621cd95960ea1b6064820152608401610bbd565b600455565b6000546001600160a01b03163314612b495760405162461bcd60e51b815260206004820181905260248201526000805160206150098339815191526044820152606401610bbd565b6001600160a01b038116612bc55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610bbd565b610f84816133dc565b6001600160a01b03811660009081526008602052604090205460ff1615612c375760405162461bcd60e51b815260206004820152601b60248201527f4163636f756e7420697320616c726561647920676f7665726e6f7200000000006044820152606401610bbd565b6001600160a01b038116600081815260086020908152604091829020805460ff1916600117905590519182527fdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b59101611010565b6001600160a01b0385166000908152601560205260408120548511612ce55760405162461bcd60e51b815260206004820152601060248201526f185b5bdd5b9d081d1bdbc81cdb585b1b60821b6044820152606401610bbd565b6001600160a01b0386166000908152601660205260409020541580612d2257506001600160a01b0386166000908152601660205260409020548511155b612d6e5760405162461bcd60e51b815260206004820152601060248201527f616d6f756e7420746f6f206c61726765000000000000000000000000000000006044820152606401610bbd565b60175463ffffffff90811690831611612dc95760405162461bcd60e51b815260206004820152601660248201527f6d617820736c69707061676520746f6f20736d616c6c000000000000000000006044820152606401610bbd565b6040516bffffffffffffffffffffffff1933606090811b8216602084015289811b8216603484015288901b166048820152605c81018690526001600160c01b031960c086811b8216607c84015285811b8216608484015246901b16608c82015260009060940160408051601f1981840301815291815281516020928301206000818152601490935291205490915060ff1615612e995760405162461bcd60e51b815260206004820152600f60248201526e7472616e736665722065786973747360881b6044820152606401610bbd565b6000818152601460205260409020805460ff1916600117905590509695505050505050565b60065460ff16612f105760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610bbd565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610f29565b6040516001600160a01b03808516602483015283166044820152606481018290526123e59085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613fc4565b8281146130485760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b6064820152608401610bbd565b6000805b8481101561308c5783838281811061306657613066614ce4565b90506020020135826130789190614d2b565b91508061308481614d10565b91505061304c565b506000600361309c836002614e34565b6130a69190614e53565b6130b1906001614d2b565b905060008080805b8a8110156132d157600061313c8d8d848181106130d8576130d8614ce4565b90506020028101906130ea9190614e75565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508f6140a990919063ffffffff16565b9050836001600160a01b0316816001600160a01b03161161319f5760405162461bcd60e51b815260206004820152601e60248201527f7369676e657273206e6f7420696e20617363656e64696e67206f7264657200006044820152606401610bbd565b8093505b8a8a848181106131b5576131b5614ce4565b90506020020160208101906131ca9190614841565b6001600160a01b0316816001600160a01b03161115613244576131ee600184614d2b565b925089831061323f5760405162461bcd60e51b815260206004820152601060248201527f7369676e6572206e6f7420666f756e64000000000000000000000000000000006044820152606401610bbd565b6131a3565b8a8a8481811061325657613256614ce4565b905060200201602081019061326b9190614841565b6001600160a01b0316816001600160a01b031614156132ab5788888481811061329657613296614ce4565b90506020020135856132a89190614d2b565b94505b8585106132be575050505050505061331a565b50806132c981614d10565b9150506130b9565b5060405162461bcd60e51b815260206004820152601260248201527f71756f72756d206e6f74207265616368656400000000000000000000000000006044820152606401610bbd565b50505050505050565b6001600160a01b03811660009081526007602052604090205460ff1661338b5760405162461bcd60e51b815260206004820152601560248201527f4163636f756e74206973206e6f742070617573657200000000000000000000006044820152606401610bbd565b6001600160a01b038116600081815260076020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e9101611010565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526007602052604090205460ff16156134955760405162461bcd60e51b815260206004820152601960248201527f4163636f756e7420697320616c726561647920706175736572000000000000006044820152606401610bbd565b6001600160a01b038116600081815260076020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101611010565b60065460ff161561352f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610bbd565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612f3d3390565b6040805160808101825260008082526020820181905291810182905260608101919091526000828152600d6020908152604091829020825160808101845281546001600160a01b03908116825260018301541692810192909252600281015492820192909252600390910154606082018190526136235760405162461bcd60e51b815260206004820152601a60248201527f64656c61796564207472616e73666572206e6f742065786973740000000000006044820152606401610bbd565b600f5481606001516136359190614d2b565b42116136835760405162461bcd60e51b815260206004820152601d60248201527f64656c61796564207472616e73666572207374696c6c206c6f636b65640000006044820152606401610bbd565b6000838152600d6020908152604080832080546001600160a01b03199081168255600182018054909116905560028101849055600301929092558251908301518383015192517f3b40e5089937425d14cdd96947e5661868357e224af59bd8b24a4b8a330d44269361371b93889390929091909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a192915050565b6013546001600160a01b038381169116141561384557601354604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b15801561378557600080fd5b505af1158015613799573d6000803e3d6000fd5b505050506000836001600160a01b03168261c35090604051600060405180830381858888f193505050503d80600081146137ef576040519150601f19603f3d011682016040523d82523d6000602084013e6137f4565b606091505b50509050806123e55760405162461bcd60e51b815260206004820152601b60248201527f6661696c656420746f2073656e64206e617469766520746f6b656e00000000006044820152606401610bbd565b6138596001600160a01b0383168483614153565b505050565b6040805160c08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905283518085019094528184528301849052909190805b602083015151835110156139b6576138bc83614183565b909250905081600114156138e4576138d3836141bd565b67ffffffffffffffff1684526138a5565b816002141561390a576138f6836141bd565b67ffffffffffffffff1660208501526138a5565b81600314156139375761392461391f8461423f565b6142fc565b6001600160a01b031660408501526138a5565b816004141561395f5761394c61391f8461423f565b6001600160a01b031660608501526138a5565b8160051415613983576139796139748461423f565b614307565b60808501526138a5565b81600614156139a75761399d6139988461423f565b61433e565b60a08501526138a5565b6139b18382614356565b6138a5565b505050919050565b6009546139c9575050565b6001600160a01b0382166000908152600b6020526040902054806139ec57505050565b6001600160a01b0383166000908152600a602052604081205460095490914291613a168184614e53565b613a209190614e34565b6001600160a01b0387166000908152600c6020526040902054909150811115613a4b57849250613a58565b613a558584614d2b565b92505b83831115613aa85760405162461bcd60e51b815260206004820152601260248201527f766f6c756d6520657863656564732063617000000000000000000000000000006044820152606401610bbd565b506001600160a01b039094166000908152600a6020908152604080832093909355600c905220929092555050565b6000848152600d602052604090206003015415613b355760405162461bcd60e51b815260206004820152601f60248201527f64656c61796564207472616e7366657220616c726561647920657869737473006044820152606401610bbd565b604080516080810182526001600160a01b0380861682528481166020808401918252838501868152426060860190815260008b8152600d90935291869020945185549085166001600160a01b031991821617865592516001860180549190951693169290921790925551600283015551600390910155517fcbcfffe5102114216a85d3aceb14ad4b81a3935b1b5c468fadf3889eb9c5dce690613bdb9086815260200190565b60405180910390a150505050565b828114613c445760405162461bcd60e51b815260206004820152602360248201527f7369676e65727320616e6420706f77657273206c656e677468206e6f74206d616044820152620e8c6d60eb1b6064820152608401610bbd565b6000805b84811015613d1d57816001600160a01b0316868683818110613c6c57613c6c614ce4565b9050602002016020810190613c819190614841565b6001600160a01b031611613ce25760405162461bcd60e51b815260206004820152602260248201527f4e6577207369676e657273206e6f7420696e20617363656e64696e67206f726460448201526132b960f11b6064820152608401610bbd565b858582818110613cf457613cf4614ce4565b9050602002016020810190613d099190614841565b915080613d1581614d10565b915050613c48565b5084848484604051602001613d359493929190614ddb565b60408051601f198184030181529082905280516020909101206001557ff126123539a68393c55697f617e7d1148e371988daed246c2f41da99965a23f890613d84908790879087908790614ebc565b60405180910390a15050505050565b6040805160e08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905283518085019094528184528301849052909190805b602083015151835110156139b657613df883614183565b90925090508160011415613e2257613e1261391f8461423f565b6001600160a01b03168452613de1565b8160021415613e4a57613e3761391f8461423f565b6001600160a01b03166020850152613de1565b8160031415613e7257613e5f61391f8461423f565b6001600160a01b03166040850152613de1565b8160041415613e9157613e876139748461423f565b6060850152613de1565b8160051415613eb757613ea3836141bd565b67ffffffffffffffff166080850152613de1565b8160061415613edd57613ec9836141bd565b67ffffffffffffffff1660a0850152613de1565b8160071415613efc57613ef26139988461423f565b60c0850152613de1565b613f068382614356565b613de1565b6001600160a01b03811660009081526008602052604090205460ff16613f735760405162461bcd60e51b815260206004820152601760248201527f4163636f756e74206973206e6f7420676f7665726e6f720000000000000000006044820152606401610bbd565b6001600160a01b038116600081815260086020908152604091829020805460ff1916905590519182527f1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b9101611010565b6000614019826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166143c89092919063ffffffff16565b80519091501561385957808060200190518101906140379190614f3e565b6138595760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610bbd565b60008151604114156140dd5760208201516040830151606084015160001a6140d3868285856143e1565b935050505061414d565b81516040141561410557602082015160408301516140fc85838361458a565b9250505061414d565b60405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610bbd565b92915050565b6040516001600160a01b03831660248201526044810182905261385990849063a9059cbb60e01b90606401612f89565b6000806000614191846141bd565b905061419e600882614e53565b92508060071660058111156141b5576141b5614f60565b915050915091565b602080820151825181019091015160009182805b600a8110156142395783811a91506141ea816007614e34565b82607f16901b8517945081608016600014156142275761420b816001614d2b565b8651879061421a908390614d2b565b9052509395945050505050565b8061423181614d10565b9150506141d1565b50600080fd5b6060600061424c836141bd565b905060008184600001516142609190614d2b565b905083602001515181111561427457600080fd5b8167ffffffffffffffff81111561428d5761428d614944565b6040519080825280601f01601f1916602001820160405280156142b7576020820181803683370190505b50602080860151865192955091818601919083010160005b858110156142f15781810151838201526142ea602082614d2b565b90506142cf565b505050935250919050565b600061414d826145cd565b600060208251111561431857600080fd5b602082015190508151602061432d9190614f76565b614338906008614e34565b1c919050565b6000815160201461434e57600080fd5b506020015190565b600081600581111561436a5761436a614f60565b141561437957613859826141bd565b600281600581111561438d5761438d614f60565b141561037657600061439e836141bd565b905080836000018181516143b29190614d2b565b9052506020830151518351111561385957600080fd5b60606143d784846000856145f5565b90505b9392505050565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a082111561445e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610bbd565b8360ff16601b148061447357508360ff16601c145b6144ca5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610bbd565b6040805160008082526020820180845288905260ff871692820192909252606081018590526080810184905260019060a0016020604051602081039080840390855afa15801561451e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166145815760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610bbd565b95945050505050565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821660ff83901c601b016145c3868287856143e1565b9695505050505050565b600081516014146145dd57600080fd5b50602001516c01000000000000000000000000900490565b60608247101561466d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610bbd565b843b6146bb5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610bbd565b600080866001600160a01b031685876040516146d79190614fb9565b60006040518083038185875af1925050503d8060008114614714576040519150601f19603f3d011682016040523d82523d6000602084013e614719565b606091505b5091509150614729828286614734565b979650505050505050565b606083156147435750816143da565b8251156147535782518084602001fd5b8160405162461bcd60e51b8152600401610bbd9190614fd5565b60008083601f84011261477f57600080fd5b50813567ffffffffffffffff81111561479757600080fd5b6020830191508360208260051b85010111156147b257600080fd5b9250929050565b600080600080604085870312156147cf57600080fd5b843567ffffffffffffffff808211156147e757600080fd5b6147f38883890161476d565b9096509450602087013591508082111561480c57600080fd5b506148198782880161476d565b95989497509550505050565b80356001600160a01b038116811461483c57600080fd5b919050565b60006020828403121561485357600080fd5b6143da82614825565b60006020828403121561486e57600080fd5b5035919050565b803567ffffffffffffffff8116811461483c57600080fd5b803563ffffffff8116811461483c57600080fd5b600080600080600060a086880312156148b957600080fd5b6148c286614825565b9450602086013593506148d760408701614875565b92506148e560608701614875565b91506148f36080870161488d565b90509295509295909350565b60006020828403121561491157600080fd5b6143da8261488d565b6000806040838503121561492d57600080fd5b61493683614825565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060006080888a03121561497557600080fd5b873567ffffffffffffffff8082111561498d57600080fd5b818a0191508a601f8301126149a157600080fd5b8135818111156149b3576149b3614944565b604051601f8201601f19908116603f011681019083821181831017156149db576149db614944565b816040528281528d60208487010111156149f457600080fd5b82602086016020830137600094508460208483010152809b5050505060208a013581811115614a21578283fd5b614a2d8c828d0161476d565b90995097505060408a013581811115614a44578283fd5b614a508c828d0161476d565b90975095505060608a013581811115614a67578283fd5b614a738c828d0161476d565b9a9d999c50979a509598949794955050505050565b6000806000806000806000806080898b031215614aa457600080fd5b883567ffffffffffffffff80821115614abc57600080fd5b818b0191508b601f830112614ad057600080fd5b813581811115614adf57600080fd5b8c6020828501011115614af157600080fd5b60209283019a509850908a01359080821115614b0c57600080fd5b614b188c838d0161476d565b909850965060408b0135915080821115614b3157600080fd5b614b3d8c838d0161476d565b909650945060608b0135915080821115614b5657600080fd5b50614b638b828c0161476d565b999c989b5096995094979396929594505050565b60008060008060008060c08789031215614b9057600080fd5b614b9987614825565b9550614ba760208801614825565b945060408701359350614bbc60608801614875565b9250614bca60808801614875565b9150614bd860a0880161488d565b90509295509295509295565b600080600080600080600080600080600060c08c8e031215614c0557600080fd5b8b359a5067ffffffffffffffff8060208e01351115614c2357600080fd5b614c338e60208f01358f0161476d565b909b50995060408d0135811015614c4957600080fd5b614c598e60408f01358f0161476d565b909950975060608d0135811015614c6f57600080fd5b614c7f8e60608f01358f0161476d565b909750955060808d0135811015614c9557600080fd5b614ca58e60808f01358f0161476d565b909550935060a08d0135811015614cbb57600080fd5b50614ccc8d60a08e01358e0161476d565b81935080925050509295989b509295989b9093969950565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614d2457614d24614cfa565b5060010190565b60008219821115614d3e57614d3e614cfa565b500190565b600067ffffffffffffffff808316818516808303821115614d6657614d66614cfa565b01949350505050565b60008160005b84811015614da4576001600160a01b03614d8e83614825565b1686526020958601959190910190600101614d75565b5093949350505050565b60006001600160fb1b03831115614dc457600080fd5b8260051b8083863760009401938452509192915050565b60006145c3614deb838789614d6f565b8486614dae565b838152818360208301376000910160200190815292915050565b8681528560208201526000614e28614deb604084018789614d6f565b98975050505050505050565b6000816000190483118215151615614e4e57614e4e614cfa565b500290565b600082614e7057634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e19843603018112614e8c57600080fd5b83018035915067ffffffffffffffff821115614ea757600080fd5b6020019150368190038213156147b257600080fd5b6040808252810184905260008560608301825b87811015614efd576001600160a01b03614ee884614825565b16825260209283019290910190600101614ecf565b5083810360208501528481526001600160fb1b03851115614f1d57600080fd5b8460051b915081866020830137600091016020019081529695505050505050565b600060208284031215614f5057600080fd5b815180151581146143da57600080fd5b634e487b7160e01b600052602160045260246000fd5b600082821015614f8857614f88614cfa565b500390565b60005b83811015614fa8578181015183820152602001614f90565b838111156123e55750506000910152565b60008251614fcb818460208701614f8d565b9190910192915050565b6020815260008251806020840152614ff4816040850160208701614f8d565b601f01601f1916919091016040019291505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212200d78a5548ff1ceef8f6921195cceda8dea34180a2495748efcb733ce9c144aa664736f6c63430008090033";
var linkReferences = {
};
var deployedLinkReferences = {
};
var Bridge = {
	_format: _format,
	contractName: contractName,
	sourceName: sourceName,
	abi: abi$1,
	bytecode: bytecode,
	deployedBytecode: deployedBytecode,
	linkReferences: linkReferences,
	deployedLinkReferences: deployedLinkReferences
};

var abi = [
	{
		constant: true,
		inputs: [
		],
		name: "name",
		outputs: [
			{
				name: "",
				type: "string"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		constant: false,
		inputs: [
			{
				name: "_spender",
				type: "address"
			},
			{
				name: "_value",
				type: "uint256"
			}
		],
		name: "approve",
		outputs: [
			{
				name: "",
				type: "bool"
			}
		],
		payable: false,
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		constant: true,
		inputs: [
		],
		name: "totalSupply",
		outputs: [
			{
				name: "",
				type: "uint256"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		constant: false,
		inputs: [
			{
				name: "_from",
				type: "address"
			},
			{
				name: "_to",
				type: "address"
			},
			{
				name: "_value",
				type: "uint256"
			}
		],
		name: "transferFrom",
		outputs: [
			{
				name: "",
				type: "bool"
			}
		],
		payable: false,
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		constant: true,
		inputs: [
		],
		name: "decimals",
		outputs: [
			{
				name: "",
				type: "uint8"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		constant: true,
		inputs: [
			{
				name: "_owner",
				type: "address"
			}
		],
		name: "balanceOf",
		outputs: [
			{
				name: "balance",
				type: "uint256"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		constant: true,
		inputs: [
		],
		name: "symbol",
		outputs: [
			{
				name: "",
				type: "string"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		constant: false,
		inputs: [
			{
				name: "_to",
				type: "address"
			},
			{
				name: "_value",
				type: "uint256"
			}
		],
		name: "transfer",
		outputs: [
			{
				name: "",
				type: "bool"
			}
		],
		payable: false,
		stateMutability: "nonpayable",
		type: "function"
	},
	{
		constant: true,
		inputs: [
			{
				name: "_owner",
				type: "address"
			},
			{
				name: "_spender",
				type: "address"
			}
		],
		name: "allowance",
		outputs: [
			{
				name: "",
				type: "uint256"
			}
		],
		payable: false,
		stateMutability: "view",
		type: "function"
	},
	{
		payable: true,
		stateMutability: "payable",
		type: "fallback"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				name: "owner",
				type: "address"
			},
			{
				indexed: true,
				name: "spender",
				type: "address"
			},
			{
				indexed: false,
				name: "value",
				type: "uint256"
			}
		],
		name: "Approval",
		type: "event"
	},
	{
		anonymous: false,
		inputs: [
			{
				indexed: true,
				name: "from",
				type: "address"
			},
			{
				indexed: true,
				name: "to",
				type: "address"
			},
			{
				indexed: false,
				name: "value",
				type: "uint256"
			}
		],
		name: "Transfer",
		type: "event"
	}
];
var ERC20 = {
	abi: abi
};

var useCBridge = function () {
    var client = function () {
        // https://cbridge-prod2.celer.network/
        return new WebClient("https://cbridge-v2-test.celer.network", null, null);
    };
    var transferConfigs = function () { return __awaiter$9(void 0, void 0, void 0, function () {
        var request, res;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    request = new gateway_pb.GetTransferConfigsRequest();
                    return [4 /*yield*/, client().getTransferConfigsForAll(request, null)];
                case 1:
                    res = _a.sent();
                    return [2 /*return*/, {
                            chains: res.getChainsList().map(function (chain) { return ({
                                id: chain.getId(),
                                name: chain.getName(),
                                icon: chain.getIcon(),
                                contract: chain.getContractAddr(),
                            }); }),
                            tokens: res
                                .getChainTokenMap()
                                .getEntryList()
                                .map(function (_a) {
                                var id = _a[0], tokens = _a[1][0];
                                return ({
                                    id: id,
                                    tokens: tokens.map(function (_a) {
                                        var _b = _a[0], symbol = _b[0], address = _b[1], decimals = _b[2];
                                        return ({
                                            symbol: symbol,
                                            address: address,
                                            decimals: decimals,
                                        });
                                    }),
                                });
                            }),
                        }];
            }
        });
    }); };
    var estimateAmount = function (params) { return __awaiter$9(void 0, void 0, void 0, function () {
        var tokenConfig, request, res;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getToken(params.sourceChainId, params.tokenSymbol)];
                case 1:
                    tokenConfig = _a.sent();
                    request = new gateway_pb.EstimateAmtRequest();
                    request.setSrcChainId(params.sourceChainId);
                    request.setDstChainId(params.destinationChainId);
                    request.setTokenSymbol(params.tokenSymbol);
                    request.setUsrAddr(params.userAddress);
                    request.setSlippageTolerance(params.slippageTolerance);
                    request.setAmt(parseTokenBalance({
                        tokenConfig: tokenConfig,
                        amount: params.amount,
                    }).toString());
                    return [4 /*yield*/, client().estimateAmt(request, null)];
                case 2:
                    res = _a.sent();
                    return [2 /*return*/, {
                            amountInDestination: formatTokenBalance({
                                amount: parseTokenBalance({
                                    amount: parseFloat(res.getEqValueTokenAmt()),
                                    tokenConfig: { decimals: 0 },
                                }),
                                tokenConfig: tokenConfig,
                            }),
                            bridgeRate: res.getBridgeRate(),
                            liquidityFee: parseFloat(res.getPercFee()),
                            baseFee: parseFloat(res.getBaseFee()),
                            slippageTolerance: res.getSlippageTolerance(),
                            maxSlippage: res.getMaxSlippage(),
                        }];
            }
        });
    }); };
    var getCurrentChainId = function () {
        var ethereum = window["ethereum"];
        return ethereum === null || ethereum === void 0 ? void 0 : ethereum.request({ method: "eth_chainId" });
    };
    var getCurrentAccount = function () { return __awaiter$9(void 0, void 0, void 0, function () {
        var ethereum;
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    ethereum = window["ethereum"];
                    return [4 /*yield*/, (ethereum === null || ethereum === void 0 ? void 0 : ethereum.request({ method: "eth_accounts" }))];
                case 1: return [2 /*return*/, (_a = (_b.sent())) === null || _a === void 0 ? void 0 : _a[0]];
            }
        });
    }); };
    var getWeb3Provider = function () {
        var ethereum = window["ethereum"];
        return new Web3Provider(ethereum);
    };
    var getToken = function (chain, tokenSymbol) { return __awaiter$9(void 0, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, transferConfigs()];
                case 1: return [2 /*return*/, (_a = (_b.sent()).tokens
                        .find(function (_a) {
                        var id = _a.id;
                        return id === chain;
                    })) === null || _a === void 0 ? void 0 : _a.tokens.find(function (_a) {
                        var symbol = _a.symbol;
                        return symbol === tokenSymbol;
                    })];
            }
        });
    }); };
    var getChainFromConfigs = function (source) { return __awaiter$9(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, transferConfigs()];
                case 1: return [2 /*return*/, (_a.sent()).chains.find(function (_a) {
                        var id = _a.id;
                        return id === source;
                    })];
            }
        });
    }); };
    var getChainConfig = function (id) { return __awaiter$9(void 0, void 0, void 0, function () {
        var chain;
        return __generator(this, function (_a) {
            chain = Object.values(testNetworks).find(function (_a) {
                var chainId = _a.chainId;
                return id === chainId;
            });
            return [2 /*return*/, chain];
        });
    }); };
    var ensureInChain = function (id) { return __awaiter$9(void 0, void 0, void 0, function () {
        var currentChainId, _a, ethereum, config;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    _a = parseInt;
                    return [4 /*yield*/, getCurrentChainId()];
                case 1:
                    currentChainId = _a.apply(void 0, [_b.sent()]);
                    ethereum = window["ethereum"];
                    if (!(currentChainId !== id)) return [3 /*break*/, 3];
                    return [4 /*yield*/, getChainConfig(id)];
                case 2:
                    config = _b.sent();
                    return [2 /*return*/, (config &&
                            ethereum.request({
                                method: "wallet_addEthereumChain",
                                params: [
                                    {
                                        chainId: "0x".concat(id.toString(16)),
                                        chainName: config.name,
                                        nativeCurrency: {
                                            name: config.symbol,
                                            symbol: config.symbol,
                                            decimals: 18,
                                        },
                                        rpcUrls: [config.rpcUrl],
                                        blockExplorerUrls: [config.blockExplorerUrl],
                                    },
                                ],
                            }))];
                case 3: return [2 /*return*/];
            }
        });
    }); };
    var isInRightChain = function (_a) {
        var sourceChainId = _a.sourceChainId;
        return __awaiter$9(void 0, void 0, void 0, function () { var _b; return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _b = parseInt;
                    return [4 /*yield*/, getCurrentChainId()];
                case 1: return [2 /*return*/, _b.apply(void 0, [_c.sent()]) === sourceChainId];
            }
        }); });
    };
    var ensureInRightChain = function (_a) {
        var sourceChainId = _a.sourceChainId;
        return __awaiter$9(void 0, void 0, void 0, function () { return __generator(this, function (_b) {
            return [2 /*return*/, ensureInChain(sourceChainId)];
        }); });
    };
    var getContract = function (contract, abi) { return __awaiter$9(void 0, void 0, void 0, function () {
        var provider, signer;
        return __generator(this, function (_a) {
            provider = getWeb3Provider();
            signer = provider.getSigner();
            return [2 /*return*/, new Contract(contract, abi, signer)];
        });
    }); };
    var getTokenContract = function (_a) {
        var sourceChainId = _a.sourceChainId, tokenSymbol = _a.tokenSymbol;
        return __awaiter$9(void 0, void 0, void 0, function () {
            var tokenConfig;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, getToken(sourceChainId, tokenSymbol)];
                    case 1:
                        tokenConfig = _b.sent();
                        return [4 /*yield*/, getContract(tokenConfig.address, ERC20.abi)];
                    case 2: return [2 /*return*/, _b.sent()];
                }
            });
        });
    };
    var getBridgeContract = function (request) { return __awaiter$9(void 0, void 0, void 0, function () {
        var contract;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getChainFromConfigs(request.sourceChainId)];
                case 1:
                    contract = ((_a.sent()) || {
                        contract: "0x0",
                    }).contract;
                    return [2 /*return*/, getContract(contract, Bridge.abi)];
            }
        });
    }); };
    var isApproved = function (request) { return __awaiter$9(void 0, void 0, void 0, function () {
        var token, contract, allowance;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getTokenContract(request)];
                case 1:
                    token = _a.sent();
                    return [4 /*yield*/, getChainFromConfigs(request.sourceChainId)];
                case 2:
                    contract = ((_a.sent()) || {
                        contract: "0x0",
                    }).contract;
                    return [4 /*yield*/, token.allowance(request.userAddress, contract)];
                case 3:
                    allowance = _a.sent();
                    return [2 /*return*/, allowance.gt(request.amount)];
            }
        });
    }); };
    var doApproval = function (request) { return __awaiter$9(void 0, void 0, void 0, function () {
        var amount, token, contract;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    amount = BigNumber.from(2).pow(256).sub(1);
                    return [4 /*yield*/, getTokenContract(request)];
                case 1:
                    token = _a.sent();
                    return [4 /*yield*/, getChainFromConfigs(request.sourceChainId)];
                case 2:
                    contract = ((_a.sent()) || {
                        contract: "0x0",
                    }).contract;
                    return [2 /*return*/, token.approve(contract, amount)];
            }
        });
    }); };
    var rawAvailableAmountToTransfer = function (_a) {
        var sourceChainId = _a.sourceChainId, tokenSymbol = _a.tokenSymbol, userAddress = _a.userAddress;
        return __awaiter$9(void 0, void 0, void 0, function () {
            var tokenConfig, token;
            var _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0: return [4 /*yield*/, getToken(sourceChainId, tokenSymbol)];
                    case 1:
                        tokenConfig = _c.sent();
                        return [4 /*yield*/, getContract(tokenConfig.address, ERC20.abi)];
                    case 2:
                        token = _c.sent();
                        _b = { tokenConfig: tokenConfig };
                        return [4 /*yield*/, token.balanceOf(userAddress)];
                    case 3: return [2 /*return*/, (_b.amount = _c.sent(), _b)];
                }
            });
        });
    };
    var availableAmountToTransfer = function (request) { return __awaiter$9(void 0, void 0, void 0, function () { var _a; return __generator(this, function (_b) {
        switch (_b.label) {
            case 0:
                _a = formatTokenBalance;
                return [4 /*yield*/, rawAvailableAmountToTransfer(request)];
            case 1: return [2 /*return*/, _a.apply(void 0, [_b.sent()])];
        }
    }); }); };
    var formatTokenBalance = function (_a) {
        var tokenConfig = _a.tokenConfig, amount = _a.amount;
        return parseFloat(formatUnits(amount, tokenConfig.decimals));
    };
    var parseTokenBalance = function (_a) {
        var tokenConfig = _a.tokenConfig, amount = _a.amount;
        return parseUnits(amount.toString(), tokenConfig.decimals);
    };
    var transferAmount = function (request) { return __awaiter$9(void 0, void 0, void 0, function () {
        var tokenConfig, bridge, _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0: return [4 /*yield*/, getToken(request.sourceChainId, request.tokenSymbol)];
                case 1:
                    tokenConfig = _c.sent();
                    return [4 /*yield*/, getBridgeContract(request)];
                case 2:
                    bridge = _c.sent();
                    return [4 /*yield*/, ensureInChain(request.sourceChainId)];
                case 3:
                    _c.sent();
                    _b = (_a = bridge).send;
                    return [4 /*yield*/, getCurrentAccount()];
                case 4:
                    _b.apply(_a, [_c.sent(), tokenConfig.address,
                        parseTokenBalance({ tokenConfig: tokenConfig, amount: request.amount }),
                        request.destinationChainId,
                        new Date().getTime(),
                        request.sourceChainId]);
                    return [2 /*return*/];
            }
        });
    }); };
    return {
        estimateAmount: estimateAmount,
        transferConfigs: transferConfigs,
        transferAmount: transferAmount,
        isInRightChain: isInRightChain,
        ensureInRightChain: ensureInRightChain,
        availableAmountToTransfer: availableAmountToTransfer,
        isApproved: isApproved,
        doApproval: doApproval,
    };
};

exports.useCBridge = useCBridge;
//# sourceMappingURL=index.js.map
